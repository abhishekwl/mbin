{"version":3,"sources":["webpack:///./node_modules/babel-runtime/core-js/object/entries.js","webpack:///./utils/policy_roles_adapter.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/fn/object/entries.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.entries.js","webpack:///./components/select_team/index.js","webpack:///./components/select_team/select_team.jsx","webpack:///./components/select_team/components/select_team_item.jsx","webpack:///./components/svg/team_info_icon.jsx","webpack:///./components/common/back_button.jsx","webpack:///./images/logo.png","webpack:///./components/common/site_name_and_description.jsx"],"names":["module","exports","default","__webpack_require__","__esModule","rolesFromMapping","mappingValues","roles","rolesClone","JSON","parse","_stringify2","pertinentRoleNames","roleNames","_values2","MAPPING","forEach","v1","v2","names","map","item","roleName","concat","_toConsumableArray3","_set2","roleNamesInMapping","_keys2","key","includes","purgeNonPertinentRoles","mappingKey","value","roleRules","Error","role","shouldHave","permission","permissions","push","addPermissionToRole","permissionIndex","indexOf","splice","removePermissionFromRole","mutateRolesBasedOnMapping","_entries2","_ref","_ref2","_slicedToArray3","roleClone","originalPermissionSet","newPermissionSet","difference","filter","x","has","size","length","mappingValueFromRoles","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","_getIterator3","mappingPartIterator","next","done","o","allConditionsAreMet","err","return","_index","enableTeamCreation","true","Permissions","CREATE_TEAM","false","editOthersPosts","EDIT_OTHERS_POSTS","enableOnlyAdminIntegrations","MANAGE_WEBHOOKS","MANAGE_SLASH_COMMANDS","MANAGE_OAUTH","mappingPart","hasUnmetCondition","_regenerator2","wrap","_context","prev","t0","keys","t1","hasOwnProperty","some","stop","_marked","this","Object","entries","$export","$entries","S","it","_reactRedux","_redux","_reactRouterDom","_teams","_roles","_general","_roles2","_teams2","_users","withRouter","connect","state","config","getConfig","currentUser","getCurrentUser","myTeamMemberships","getTeamMemberships","currentUserRoles","customDescriptionText","CustomDescriptionText","getRoles","EnableTeamCreation","isMemberOfTeam","joinableTeams","getSortedJoinableTeams","locale","siteName","SiteName","dispatch","actions","bindActionCreators","getTeams","loadRolesIfNeeded","SelectTeam","_reactIntl","_constants","_global_actions","_team_actions","_policy_roles_adapter","UserAgent","Utils","props","_classCallCheck3","_this","_possibleConstructorReturn3","__proto__","_getPrototypeOf2","call","loadPoliciesIntoState","setState","loaded","handleTeamClick","team","loadingTeamId","id","addUserToTeamFromInvite","invite_id","history","name","error","handleLogoutClick","e","preventDefault","emitUserLoggedOutEvent","clearError","_props","General","SYSTEM_ADMIN_ROLE","SYSTEM_USER_ROLE","system_admin","system_user","nextProps","_this2","_props2","isSystemAdmin","openContent","_react2","createElement","_loading_screen2","className","message","openTeamContents","joinableTeam","_select_team_item2","onTeamClick","loading","FormattedMessage","defaultMessage","_system_permission_gate2","invert","teamHelp","teamSignUp","Link","to","adminConsoleLink","isMobileApp","MANAGE_SYSTEM","headerButton","_back_button2","onClick","href","title","localizeMessage","_announcement_bar2","src","logoImage","_site_name_and_description2","React","Component","propTypes","PropTypes","string","bool","isRequired","array","object","shape","func","_reactBootstrap","SelectTeamItem","icon","descriptionTooltip","showDescriptionTooltip","description","Tooltip","OverlayTrigger","trigger","delayShow","placement","overlay","ref","rootClose","container","_team_info_icon2","createSafeId","display_name","PureComponent","_utils","TeamInfoIcon","width","height","viewBox","style","aria-label","transform","d","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","BackButton","url","defaultProps","p","SiteNameAndDescription","Fragment"],"mappings":"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","file":"27.58e5875d1b2403db0c7d.js","sourcesContent":["module.exports = { \"default\": require(\"core-js/library/fn/object/entries\"), __esModule: true };","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {Permissions} from 'mattermost-redux/constants/index';\n\nconst MAPPING = {\n    enableTeamCreation: {\n        true: [{roleName: 'system_user', permission: Permissions.CREATE_TEAM, shouldHave: true}],\n        false: [{roleName: 'system_user', permission: Permissions.CREATE_TEAM, shouldHave: false}],\n    },\n\n    editOthersPosts: {\n        true: [\n            {roleName: 'system_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: true},\n            {roleName: 'team_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: true},\n        ],\n        false: [\n            {roleName: 'team_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: false},\n            {roleName: 'system_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: false},\n        ],\n    },\n\n    enableOnlyAdminIntegrations: {\n        true: [\n            {roleName: 'team_user', permission: Permissions.MANAGE_WEBHOOKS, shouldHave: false},\n            {roleName: 'team_user', permission: Permissions.MANAGE_SLASH_COMMANDS, shouldHave: false},\n            {roleName: 'system_user', permission: Permissions.MANAGE_OAUTH, shouldHave: false},\n        ],\n        false: [\n            {roleName: 'team_user', permission: Permissions.MANAGE_WEBHOOKS, shouldHave: true},\n            {roleName: 'team_user', permission: Permissions.MANAGE_SLASH_COMMANDS, shouldHave: true},\n            {roleName: 'system_user', permission: Permissions.MANAGE_OAUTH, shouldHave: true},\n        ],\n    },\n};\n\n/**\n * Get the roles that were changed (but unsaved) for given mapping key/values.\n *\n * @param {object} mappingValues key/value to indicate which mapping items to use to update the roles.\n * @param {object} roles same structure as returned by mattermost-redux `getRoles`.\n * @return {object} the updated roles (only) in the same structure as returned by mattermost-redux `getRoles`.\n */\nexport function rolesFromMapping(mappingValues, roles) {\n    const rolesClone = JSON.parse(JSON.stringify(roles));\n\n    // Purge roles that aren't present in MAPPING, we don't care about them.\n    purgeNonPertinentRoles(rolesClone);\n\n    Object.keys(MAPPING).forEach((mappingKey) => {\n        const value = mappingValues[mappingKey];\n        if (value) {\n            mutateRolesBasedOnMapping(mappingKey, value, rolesClone);\n        }\n    });\n\n    // Purge roles that didn't have permissions changes, we don't care about them.\n    Object.entries(rolesClone).forEach(([roleName, roleClone]) => {\n        const originalPermissionSet = new Set(roles[roleName].permissions);\n        const newPermissionSet = new Set(roleClone.permissions);\n        const difference = [...newPermissionSet].filter((x) => !originalPermissionSet.has(x));\n\n        if (originalPermissionSet.size === newPermissionSet.size && difference.length === 0) {\n            delete rolesClone[roleName];\n        }\n    });\n\n    return rolesClone;\n}\n\n/**\n * Get the mapping value that matches for a given set of roles.\n *\n * @param {string} key to match under in the mapping.\n * @param {object} roles same structure as returned by mattermost-redux `getRoles`.\n * @return {string} the value that the roles/permissions assignment match in the mapping.\n */\nexport function mappingValueFromRoles(key, roles) {\n    for (const o of mappingPartIterator(MAPPING[key], roles)) {\n        if (o.allConditionsAreMet) {\n            return o.value;\n        }\n    }\n    throw new Error(`No matching mapping value found for key '${key}' with the given roles.`);\n}\n\nfunction purgeNonPertinentRoles(roles) {\n    const pertinentRoleNames = roleNamesInMapping();\n\n    Object.keys(roles).forEach((key) => {\n        if (!pertinentRoleNames.includes(key)) {\n            delete roles[key];\n        }\n    });\n}\n\nfunction mutateRolesBasedOnMapping(mappingKey, value, roles) {\n    const roleRules = MAPPING[mappingKey][value];\n\n    if (typeof roleRules === 'undefined') {\n        throw new Error(`Value '${value}' not present in MAPPING for key '${mappingKey}'.`);\n    }\n\n    roleRules.forEach((item) => {\n        const role = roles[item.roleName];\n        if (item.shouldHave) {\n            addPermissionToRole(item.permission, role);\n        } else {\n            removePermissionFromRole(item.permission, role);\n        }\n    });\n}\n\n// Returns a set of the role names present in MAPPING.\nfunction roleNamesInMapping() {\n    let roleNames = [];\n\n    Object.values(MAPPING).forEach((v1) => {\n        Object.values(v1).forEach((v2) => {\n            const names = v2.map((item) => item.roleName); // eslint-disable-line max-nested-callbacks\n            roleNames = roleNames.concat(names);\n        });\n    });\n\n    return [...new Set(roleNames.map((item) => item))];\n}\n\nfunction* mappingPartIterator(mappingPart, roles) {\n    for (const value in mappingPart) {\n        if (mappingPart.hasOwnProperty(value)) {\n            const roleRules = mappingPart[value];\n\n            const hasUnmetCondition = roleRules.some((item) => {\n                const role = roles[item.roleName];\n                return (item.shouldHave && !role.permissions.includes(item.permission)) || (!item.shouldHave && role.permissions.includes(item.permission));\n            });\n\n            yield {value, allConditionsAreMet: !hasUnmetCondition};\n        }\n    }\n}\n\nfunction addPermissionToRole(permission, role) {\n    if (!role.permissions.includes(permission)) {\n        role.permissions.push(permission);\n    }\n}\n\nfunction removePermissionFromRole(permission, role) {\n    const permissionIndex = role.permissions.indexOf(permission);\n    if (permissionIndex !== -1) {\n        role.permissions.splice(permissionIndex, 1);\n    }\n}\n","require('../../modules/es7.object.entries');\nmodule.exports = require('../../modules/_core').Object.entries;\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {withRouter} from 'react-router-dom';\n\nimport {getTeams} from 'mattermost-redux/actions/teams';\nimport {loadRolesIfNeeded} from 'mattermost-redux/actions/roles';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles';\nimport {getSortedJoinableTeams, getTeamMemberships} from 'mattermost-redux/selectors/entities/teams';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\n\nimport SelectTeam from './select_team.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const currentUser = getCurrentUser(state);\n    const myTeamMemberships = Object.values(getTeamMemberships(state));\n\n    return {\n        currentUserRoles: currentUser.roles || '',\n        customDescriptionText: config.CustomDescriptionText,\n        roles: getRoles(state),\n        enableTeamCreation: config.EnableTeamCreation === 'true',\n        isMemberOfTeam: myTeamMemberships && myTeamMemberships.length > 0,\n        joinableTeams: getSortedJoinableTeams(state, currentUser.locale),\n        siteName: config.SiteName,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTeams,\n            loadRolesIfNeeded,\n        }, dispatch),\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SelectTeam));\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {General, Permissions} from 'mattermost-redux/constants';\n\nimport {emitUserLoggedOutEvent} from 'actions/global_actions.jsx';\nimport {addUserToTeamFromInvite} from 'actions/team_actions.jsx';\n\nimport {mappingValueFromRoles} from 'utils/policy_roles_adapter';\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport logoImage from 'images/logo.png';\n\nimport AnnouncementBar from 'components/announcement_bar';\nimport BackButton from 'components/common/back_button.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport SiteNameAndDescription from 'components/common/site_name_and_description';\n\nimport SelectTeamItem from './components/select_team_item.jsx';\n\nconst TEAMS_PER_PAGE = 200;\n\nexport default class SelectTeam extends React.Component {\n    static propTypes = {\n        currentUserRoles: PropTypes.string,\n        customDescriptionText: PropTypes.string,\n        isMemberOfTeam: PropTypes.bool.isRequired,\n        joinableTeams: PropTypes.array,\n        roles: PropTypes.object.isRequired,\n        siteName: PropTypes.string,\n        actions: PropTypes.shape({\n            getTeams: PropTypes.func.isRequired,\n            loadRolesIfNeeded: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loadingTeamId: '',\n            error: null,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getTeams(0, TEAMS_PER_PAGE);\n    }\n\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\n        const {\n            actions,\n            roles,\n        } = this.props;\n\n        actions.loadRolesIfNeeded([General.SYSTEM_ADMIN_ROLE, General.SYSTEM_USER_ROLE]);\n\n        if (\n            roles.system_admin &&\n            roles.system_user\n        ) {\n            this.loadPoliciesIntoState(roles);\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (\n            !this.state.loaded &&\n            nextProps.roles.system_admin &&\n            nextProps.roles.system_user\n        ) {\n            this.loadPoliciesIntoState(nextProps.roles);\n        }\n    }\n\n    loadPoliciesIntoState = (roles) => {\n        // Purposely parsing boolean from string 'true' or 'false'\n        // because the string comes from the policy roles adapter mapping.\n        const enableTeamCreation = (mappingValueFromRoles('enableTeamCreation', roles) === 'true');\n\n        this.setState({enableTeamCreation, loaded: true});\n    }\n\n    handleTeamClick = (team) => {\n        this.setState({loadingTeamId: team.id});\n\n        addUserToTeamFromInvite('', team.invite_id,\n            () => {\n                this.props.history.push(`/${team.name}/channels/town-square`);\n            },\n            (error) => {\n                this.setState({\n                    error,\n                    loadingTeamId: '',\n                });\n            }\n        );\n    };\n\n    handleLogoutClick = (e) => {\n        e.preventDefault();\n        emitUserLoggedOutEvent('/login');\n    }\n\n    clearError = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            error: null,\n        });\n    };\n\n    render() {\n        const {\n            currentUserRoles,\n            customDescriptionText,\n            isMemberOfTeam,\n            joinableTeams,\n            siteName,\n        } = this.props;\n        const {enableTeamCreation} = this.state;\n\n        const isSystemAdmin = Utils.isSystemAdmin(currentUserRoles);\n\n        let openContent;\n        if (this.state.loadingTeamId) {\n            openContent = <LoadingScreen/>;\n        } else if (this.state.error) {\n            openContent = (\n                <div className='signup__content'>\n                    <div className={'form-group has-error'}>\n                        <label className='control-label'>{this.state.error.message}</label>\n                    </div>\n                </div>\n            );\n        } else {\n            let openTeamContents = [];\n            joinableTeams.forEach((joinableTeam) => {\n                openTeamContents.push(\n                    <SelectTeamItem\n                        key={'team_' + joinableTeam.name}\n                        team={joinableTeam}\n                        onTeamClick={this.handleTeamClick}\n                        loading={this.state.loadingTeamId === joinableTeam.id}\n                    />\n                );\n            });\n\n            if (openTeamContents.length === 0 && (enableTeamCreation || isSystemAdmin)) {\n                openTeamContents = (\n                    <div className='signup-team-dir-err'>\n                        <div>\n                            <FormattedMessage\n                                id='signup_team.no_open_teams_canCreate'\n                                defaultMessage='No teams are available to join. Please create a new team or ask your administrator for an invite.'\n                            />\n                        </div>\n                    </div>\n                );\n            } else if (openTeamContents.length === 0) {\n                openTeamContents = (\n                    <div className='signup-team-dir-err'>\n                        <div>\n                            <SystemPermissionGate permissions={[Permissions.CREATE_TEAM]}>\n                                <FormattedMessage\n                                    id='signup_team.no_open_teams_canCreate'\n                                    defaultMessage='No teams are available to join. Please create a new team or ask your administrator for an invite.'\n                                />\n                            </SystemPermissionGate>\n                            <SystemPermissionGate\n                                permissions={[Permissions.CREATE_TEAM]}\n                                invert={true}\n                            >\n                                <FormattedMessage\n                                    id='signup_team.no_open_teams'\n                                    defaultMessage='No teams are available to join. Please ask your administrator for an invite.'\n                                />\n                            </SystemPermissionGate>\n                        </div>\n                    </div>\n                );\n            }\n\n            openContent = (\n                <div className='signup__content'>\n                    <h4>\n                        <FormattedMessage\n                            id='signup_team.join_open'\n                            defaultMessage='Teams you can join: '\n                        />\n                    </h4>\n                    <div className='signup-team-all'>\n                        {openTeamContents}\n                    </div>\n                </div>\n            );\n        }\n\n        let teamHelp = null;\n        if (isSystemAdmin && !enableTeamCreation) {\n            teamHelp = (\n                <div>\n                    <FormattedMessage\n                        id='login.createTeamAdminOnly'\n                        defaultMessage='This option is only available for System Administrators, and does not show up for other users.'\n                    />\n                </div>\n            );\n        }\n\n        const teamSignUp = (\n            <SystemPermissionGate permissions={[Permissions.CREATE_TEAM]}>\n                <div className='margin--extra'>\n                    <Link\n                        to='/create_team'\n                        className='signup-team-login'\n                    >\n                        <FormattedMessage\n                            id='login.createTeam'\n                            defaultMessage='Create a new team'\n                        />\n                    </Link>\n                </div>\n                {teamHelp}\n            </SystemPermissionGate>\n        );\n\n        let adminConsoleLink;\n        if (!UserAgent.isMobileApp()) {\n            adminConsoleLink = (\n                <SystemPermissionGate permissions={[Permissions.MANAGE_SYSTEM]}>\n                    <div className='margin--extra hidden-xs'>\n                        <Link\n                            to='/admin_console'\n                            className='signup-team-login'\n                        >\n                            <FormattedMessage\n                                id='signup_team_system_console'\n                                defaultMessage='Go to System Console'\n                            />\n                        </Link>\n                    </div>\n                </SystemPermissionGate>\n            );\n        }\n\n        let headerButton;\n        if (this.state.error) {\n            headerButton = <BackButton onClick={this.clearError}/>;\n        } else if (isMemberOfTeam) {\n            headerButton = <BackButton/>;\n        } else {\n            headerButton = (\n                <div className='signup-header'>\n                    <a\n                        href='#'\n                        onClick={this.handleLogoutClick}\n                    >\n                        <span\n                            className='fa fa-chevron-left'\n                            title={Utils.localizeMessage('generic_icons.logout', 'Logout Icon')}\n                        />\n                        <FormattedMessage\n                            id='web.header.logout'\n                            defaultMessage='Logout'\n                        />\n                    </a>\n                </div>\n            );\n        }\n        return (\n            <div>\n                <AnnouncementBar/>\n                {headerButton}\n                <div className='col-sm-12'>\n                    <div className={'signup-team__container'}>\n                        <img\n                            className='signup-team-logo'\n                            src={logoImage}\n                        />\n                        <SiteNameAndDescription\n                            customDescriptionText={customDescriptionText}\n                            siteName={siteName}\n                        />\n                        {openContent}\n                        {teamSignUp}\n                        {adminConsoleLink}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\n\nimport TeamInfoIcon from 'components/svg/team_info_icon';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class SelectTeamItem extends React.PureComponent {\n    static propTypes = {\n        team: PropTypes.object.isRequired,\n        onTeamClick: PropTypes.func.isRequired,\n        loading: PropTypes.bool.isRequired,\n    };\n\n    handleTeamClick = (e) => {\n        e.preventDefault();\n        this.props.onTeamClick(this.props.team);\n    }\n\n    render() {\n        let icon;\n        if (this.props.loading) {\n            icon = (\n                <span\n                    className='fa fa-refresh fa-spin right signup-team__icon'\n                    title={Utils.localizeMessage('generic_icons.loading', 'Loading Icon')}\n                />\n            );\n        } else {\n            icon = (\n                <span\n                    className='fa fa-angle-right right signup-team__icon'\n                    title={Utils.localizeMessage('select_team.join.icon', 'Join Team Icon')}\n                />\n            );\n        }\n\n        var descriptionTooltip = '';\n        var showDescriptionTooltip = '';\n        if (this.props.team.description) {\n            descriptionTooltip = (\n                <Tooltip id='team-description__tooltip'>\n                    {this.props.team.description}\n                </Tooltip>\n            );\n\n            showDescriptionTooltip = (\n                <OverlayTrigger\n                    trigger={['hover', 'focus', 'click']}\n                    delayShow={1000}\n                    placement='top'\n                    overlay={descriptionTooltip}\n                    ref='descriptionOverlay'\n                    rootClose={true}\n                    container={this}\n                >\n                    <TeamInfoIcon className='icon icon--info'/>\n                </OverlayTrigger>\n            );\n        }\n\n        return (\n            <div className='signup-team-dir'>\n                {showDescriptionTooltip}\n                <a\n                    href='#'\n                    id={Utils.createSafeId(this.props.team.display_name)}\n                    onClick={this.handleTeamClick}\n                >\n                    <span className='signup-team-dir__name'>{this.props.team.display_name}</span>\n                    {icon}\n                </a>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class TeamInfoIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='100%'\n                    height='100%'\n                    viewBox='0 0 20 20'\n                    style={style}\n                    role='icon'\n                    aria-label={localizeMessage('generic_icons.info', 'Info Icon')}\n                >\n                    <g transform='matrix(1.17647,0,0,1.17647,-1.55431e-15,-1.00573e-14)'>\n                        <path d='M8.5,0C3.797,0 0,3.797 0,8.5C0,13.203 3.797,17 8.5,17C13.203,17 17,13.203 17,8.5C17,3.797 13.203,0 8.5,0ZM10,8.5C10,7.672 9.328,7 8.5,7C7.672,7 7,7.672 7,8.5L7,12.45C7,13.278 7.672,13.95 8.5,13.95C9.328,13.95 10,13.278 10,12.45L10,8.5ZM8.5,3C9.328,3 10,3.672 10,4.5C10,5.328 9.328,6 8.5,6C7.672,6 7,5.328 7,4.5C7,3.672 7.672,3 8.5,3Z'/>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n\nconst style = {\n    fillRule: 'evenodd',\n    clipRule: 'evenodd',\n    strokeLinejoin: 'round',\n    strokeMiterlimit: 1.41421,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class BackButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * URL to return to\n         */\n        url: PropTypes.string,\n\n        /**\n         * An optional click handler that will trigger when the user clicks on the back button\n         */\n        onClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        url: '/',\n    };\n\n    render() {\n        return (\n            <div className='signup-header'>\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <span\n                        className='fa fa-chevron-left'\n                        title={localizeMessage('generic_icons.back', 'Back Icon')}\n                    />\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/5d6be4015bde2a4e0358c8bc110deadc.png\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class SiteNameAndDescription extends React.PureComponent {\n    static propTypes = {\n        customDescriptionText: PropTypes.string,\n        siteName: PropTypes.string,\n    };\n\n    static defaultProps = {\n        siteName: 'Mattermost',\n    };\n\n    render() {\n        const {\n            customDescriptionText,\n            siteName,\n        } = this.props;\n        let description = null;\n        if (customDescriptionText) {\n            description = customDescriptionText;\n        } else {\n            description = (\n                <FormattedMessage\n                    id='web.root.signup_info'\n                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\n                />\n            );\n        }\n\n        return (\n            <React.Fragment>\n                <h1>{siteName}</h1>\n                <h4 className='color--light'>\n                    {description}\n                </h4>\n            </React.Fragment>\n        );\n    }\n}\n"],"sourceRoot":""}