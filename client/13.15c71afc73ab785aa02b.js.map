{"version":3,"sources":["webpack:///./components/error_page/index.jsx","webpack:///./components/error_page/error_page.jsx","webpack:///./components/error_page/error_title.jsx","webpack:///./components/error_page/error_message.jsx","webpack:///./components/error_page/error_link.jsx"],"names":["_reactRedux","__webpack_require__","_general","connect","state","config","getConfig","siteName","SiteName","asymmetricSigningPublicKey","AsymmetricSigningPublicKey","ErrorPage","_reactIntl","_reactRouterDom","_constants","_utils","document","body","setAttribute","removeAttribute","params","URLSearchParams","this","props","location","search","signature","get","trustParams","delete","keyPEM","verify","crypto","createVerify","update","toString","type","title","message","service","returnTo","backButton","ErrorPageTypes","PERMALINK_NOT_FOUND","_react2","default","createElement","Link","to","FormattedMessage","id","defaultMessage","TEAM_NOT_FOUND","values","CHANNEL_NOT_FOUND","defaultChannelName","Constants","DEFAULT_CHANNEL_UI_NAME","OAUTH_ACCESS_DENIED","OAUTH_MISSING_CODE","className","localizeMessage","_error_title2","_error_message2","React","PureComponent","propTypes","PropTypes","object","isRequired","string","ErrorTitle","Utils","_ref","errorTitle","LOCAL_STORAGE","PAGE_NOT_FOUND","ErrorMessage","_i18n","errorMessage","link","_error_link2","url","messageId","t","ErrorLink","href","rel","target","defaultProps"],"mappings":"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","file":"13.15c71afc73ab785aa02b.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport ErrorPage from './error_page.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    return {\n        siteName: config.SiteName,\n        asymmetricSigningPublicKey: config.AsymmetricSigningPublicKey,\n    };\n}\n\nexport default connect(mapStateToProps)(ErrorPage);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport crypto from 'crypto';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {ErrorPageTypes, Constants} from 'utils/constants.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport ErrorTitle from './error_title.jsx';\nimport ErrorMessage from './error_message.jsx';\n\nexport default class ErrorPage extends React.PureComponent {\n    static propTypes = {\n        location: PropTypes.object.isRequired,\n        asymmetricSigningPublicKey: PropTypes.string,\n        siteName: PropTypes.string,\n    };\n\n    componentDidMount() {\n        document.body.setAttribute('class', 'sticky error');\n    }\n\n    componentWillUnmount() {\n        document.body.removeAttribute('class');\n    }\n\n    render() {\n        const params = new URLSearchParams(this.props.location.search);\n        const signature = params.get('s');\n\n        var trustParams = false;\n        if (signature) {\n            params.delete('s');\n\n            const key = this.props.asymmetricSigningPublicKey;\n            const keyPEM = '-----BEGIN PUBLIC KEY-----\\n' + key + '\\n-----END PUBLIC KEY-----';\n\n            const verify = crypto.createVerify('sha256');\n            verify.update('/error?' + params.toString());\n            trustParams = verify.verify(keyPEM, signature, 'base64');\n        }\n\n        const type = params.get('type');\n        const title = (trustParams && params.get('title')) || '';\n        const message = (trustParams && params.get('message')) || '';\n        const service = (trustParams && params.get('service')) || '';\n        const returnTo = (trustParams && params.get('returnTo')) || '';\n\n        let backButton;\n        if (type === ErrorPageTypes.PERMALINK_NOT_FOUND && returnTo) {\n            backButton = (\n                <Link to={returnTo}>\n                    <FormattedMessage\n                        id='error.generic.link'\n                        defaultMessage='Back to Mattermost'\n                    />\n                </Link>\n            );\n        } else if (type === ErrorPageTypes.TEAM_NOT_FOUND) {\n            backButton = (\n                <Link to='/'>\n                    <FormattedMessage\n                        id='error.generic.link'\n                        defaultMessage='Back to {siteName}'\n                        values={{\n                            siteName: this.props.siteName,\n                        }}\n                    />\n                </Link>\n            );\n        } else if (type === ErrorPageTypes.CHANNEL_NOT_FOUND) {\n            backButton = (\n                <Link to={params.get('returnTo')}>\n                    <FormattedMessage\n                        id='error.channelNotFound.link'\n                        defaultMessage='Back to {defaultChannelName}'\n                        values={{\n                            defaultChannelName: Constants.DEFAULT_CHANNEL_UI_NAME,\n                        }}\n                    />\n                </Link>\n            );\n        } else if (type === ErrorPageTypes.OAUTH_ACCESS_DENIED || type === ErrorPageTypes.OAUTH_MISSING_CODE) {\n            backButton = (\n                <Link to='/'>\n                    <FormattedMessage\n                        id='error.generic.link_login'\n                        defaultMessage='Back to login page'\n                    />\n                </Link>\n            );\n        } else {\n            backButton = (\n                <Link to='/'>\n                    <FormattedMessage\n                        id='error.generic.link'\n                        defaultMessage='Back to {siteName}'\n                        values={{\n                            siteName: this.props.siteName,\n                        }}\n                    />\n                </Link>\n            );\n        }\n\n        return (\n            <div className='container-fluid'>\n                <div className='error__container'>\n                    <div className='error__icon'>\n                        <i\n                            className='fa fa-exclamation-triangle'\n                            title={localizeMessage('generic_icons.warning', 'Warning Icon')}\n                        />\n                    </div>\n                    <h2>\n                        <ErrorTitle\n                            type={type}\n                            title={title}\n                        />\n                    </h2>\n                    <ErrorMessage\n                        type={type}\n                        message={message}\n                        service={service}\n                    />\n                    {backButton}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {ErrorPageTypes} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default function ErrorTitle({type, title}) {\n    let errorTitle = null;\n    if (type) {\n        switch (type) {\n        case ErrorPageTypes.LOCAL_STORAGE:\n            errorTitle = (\n                <FormattedMessage\n                    id='error.local_storage.title'\n                    defaultMessage='Cannot Load Mattermost'\n                />\n            );\n            break;\n        case ErrorPageTypes.PERMALINK_NOT_FOUND:\n            errorTitle = (\n                <FormattedMessage\n                    id='permalink.error.title'\n                    defaultMessage='Message Not Found'\n                />\n            );\n            break;\n        case ErrorPageTypes.OAUTH_ACCESS_DENIED:\n            errorTitle = (\n                <FormattedMessage\n                    id='error.oauth_access_denied.title'\n                    defaultMessage='Authorization Error'\n                />\n            );\n            break;\n        case ErrorPageTypes.OAUTH_MISSING_CODE:\n            errorTitle = (\n                <FormattedMessage\n                    id='error.oauth_missing_code.title'\n                    defaultMessage='Mattermost needs your help'\n                />\n            );\n            break;\n        case ErrorPageTypes.TEAM_NOT_FOUND:\n            errorTitle = (\n                <FormattedMessage\n                    id='error.team_not_found.title'\n                    defaultMessage='Team Not Found'\n                />\n            );\n            break;\n        case ErrorPageTypes.CHANNEL_NOT_FOUND:\n            errorTitle = (\n                <FormattedMessage\n                    id='error.channel_not_found.title'\n                    defaultMessage='Channel Not Found'\n                />\n            );\n            break;\n        case ErrorPageTypes.PAGE_NOT_FOUND:\n        default:\n            errorTitle = (\n                <FormattedMessage\n                    id='error.not_found.title'\n                    defaultMessage='Page Not Found'\n                />\n            );\n        }\n    } else if (title) {\n        errorTitle = title;\n    } else {\n        errorTitle = Utils.localizeMessage('error.generic.title', 'Error');\n    }\n\n    return errorTitle;\n}\n\nErrorTitle.propTypes = {\n\n    /*\n    * Error type\n    */\n    type: PropTypes.string,\n\n    /*\n    * Error title\n    */\n    title: PropTypes.string,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {ErrorPageTypes} from 'utils/constants.jsx';\nimport {t} from 'utils/i18n';\n\nimport ErrorLink from './error_link.jsx';\n\nexport default function ErrorMessage({type, message, service}) {\n    let errorMessage = null;\n    if (type) {\n        switch (type) {\n        case ErrorPageTypes.LOCAL_STORAGE:\n            errorMessage = (\n                <div>\n                    <FormattedMessage\n                        id='error.local_storage.message'\n                        defaultMessage='Mattermost was unable to load because a setting in your browser prevents the use of its local storage features. To allow Mattermost to load, try the following actions:'\n                    />\n                    <ul>\n                        <li>\n                            <FormattedMessage\n                                id='error.local_storage.help1'\n                                defaultMessage='Enable cookies'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='error.local_storage.help2'\n                                defaultMessage='Turn off private browsing'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='error.local_storage.help3'\n                                defaultMessage='Use a supported browser (IE 11, Chrome 43+, Firefox 38+, Safari 9, Edge)'\n                            />\n                        </li>\n                    </ul>\n                </div>\n            );\n            break;\n        case ErrorPageTypes.PERMALINK_NOT_FOUND:\n            errorMessage = (\n                <p>\n                    <FormattedMessage\n                        id='permalink.error.access'\n                        defaultMessage='Permalink belongs to a deleted message or to a channel to which you do not have access.'\n                    />\n                </p>\n            );\n            break;\n        case ErrorPageTypes.TEAM_NOT_FOUND:\n            errorMessage = (\n                <p>\n                    <FormattedMessage\n                        id='error.team_not_found.message'\n                        defaultMessage=\"The team you're requesting is private or does not exist. Please contact your Administrator for an invitation.\"\n                    />\n                </p>\n            );\n            break;\n        case ErrorPageTypes.CHANNEL_NOT_FOUND:\n            errorMessage = (\n                <p>\n                    <FormattedMessage\n                        id='error.channel_not_found.message'\n                        defaultMessage=\"The team you're requesting is private or does not exist. Please contact your Administrator for an invitation.\"\n                    />\n                </p>\n            );\n            break;\n        case ErrorPageTypes.OAUTH_MISSING_CODE:\n            errorMessage = (\n                <div>\n                    <p>\n                        <FormattedMessage\n                            id='error.oauth_missing_code'\n                            defaultMessage='The service provider {service} did not provide an authorization code in the redirect URL.'\n                            values={{\n                                service,\n                            }}\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='error.oauth_missing_code.google'\n                            defaultMessage='For {link} make sure your administrator enabled the Google+ API.'\n                            values={{\n                                link: (\n                                    <ErrorLink\n                                        url={'https://docs.mattermost.com/deployment/sso-google.html'}\n                                        messageId={t('error.oauth_missing_code.google.link')}\n                                        defaultMessage={'Google Apps'}\n                                    />\n                                ),\n                            }}\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='error.oauth_missing_code.office365'\n                            defaultMessage='For {link} make sure the administrator of your Microsoft organization has enabled the Mattermost app.'\n                            values={{\n                                link: (\n                                    <ErrorLink\n                                        url={'https://docs.mattermost.com/deployment/sso-office.html'}\n                                        messageId={t('error.oauth_missing_code.office365.link')}\n                                        defaultMessage={'Office 365'}\n                                    />\n                                ),\n                            }}\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='error.oauth_missing_code.gitlab'\n                            defaultMessage='For {link} please make sure you followed the setup instructions.'\n                            values={{\n                                link: (\n                                    <ErrorLink\n                                        url={'https://docs.mattermost.com/deployment/sso-gitlab.html'}\n                                        messageId={t('error.oauth_missing_code.gitlab.link')}\n                                        defaultMessage={'GitLab'}\n                                    />\n                                ),\n                            }}\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='error.oauth_missing_code.forum'\n                            defaultMessage=\"If you reviewed the above and are still having trouble with configuration, you may post in our {link} where we'll be happy to help with issues during setup.\"\n                            values={{\n                                link: (\n                                    <ErrorLink\n                                        url={'https://forum.mattermost.org/c/trouble-shoot'}\n                                        messageId={t('error.oauth_missing_code.forum.link')}\n                                        defaultMessage={'Troubleshooting forum'}\n                                    />\n                                ),\n                            }}\n                        />\n                    </p>\n                </div>\n            );\n            break;\n        case ErrorPageTypes.OAUTH_ACCESS_DENIED:\n            errorMessage = (\n                <p>\n                    <FormattedMessage\n                        id='error.oauth_access_denied'\n                        defaultMessage='You must authorize Mattermost to log in with {service}.'\n                        values={{\n                            service,\n                        }}\n                    />\n                </p>\n            );\n            break;\n        case ErrorPageTypes.PAGE_NOT_FOUND:\n        default:\n            errorMessage = (\n                <p>\n                    <FormattedMessage\n                        id='error.not_found.message'\n                        defaultMessage='The page you were trying to reach does not exist'\n                    />\n                </p>\n            );\n        }\n    } else if (message) {\n        errorMessage = (\n            <p>\n                {message}\n            </p>\n        );\n    } else {\n        errorMessage = (\n            <p>\n                <FormattedMessage\n                    id='error.generic.message'\n                    defaultMessage='An error has occurred.'\n                />\n            </p>\n        );\n    }\n\n    return errorMessage;\n}\n\nErrorMessage.propTypes = {\n\n    /*\n    * Error type\n    */\n    type: PropTypes.string,\n\n    /*\n    * Error message\n    */\n    message: PropTypes.string,\n\n    /*\n    * Service provider\n    */\n    service: PropTypes.string,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default function ErrorLink({url, messageId, defaultMessage}) {\n    return (\n        <a\n            href={url}\n            rel='noopener noreferrer'\n            target='_blank'\n        >\n            <FormattedMessage\n                id={messageId}\n                defaultMessage={defaultMessage}\n            />\n        </a>\n    );\n}\n\nErrorLink.propTypes = {\n    url: PropTypes.string.isRequired,\n    messageId: PropTypes.string.isRequired,\n    defaultMessage: PropTypes.string.isRequired,\n};\n\nErrorLink.defaultProps = {\n    url: '',\n    messageId: '',\n    defaultMessage: '',\n};\n"],"sourceRoot":""}