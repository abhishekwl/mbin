{"version":3,"sources":["webpack:///./components/password_reset_form/index.js","webpack:///./components/password_reset_form/password_reset_form.jsx"],"names":["_reactRedux","__webpack_require__","_general","connect","state","siteName","getConfig","SiteName","PasswordResetForm","_reactIntl","_user_actions","Utils","props","_classCallCheck3","default","this","_this","_possibleConstructorReturn3","__proto__","_getPrototypeOf2","call","handlePasswordReset","e","preventDefault","password","ReactDOM","findDOMNode","refs","value","length","Constants","MIN_PASSWORD_LENGTH","setState","error","_react2","createElement","FormattedMessage","id","defaultMessage","values","chars","resetPassword","URLSearchParams","location","search","get","err","message","className","formClass","onSubmit","type","name","ref","placeholder","localizeMessage","spellCheck","React","Component","propTypes","PropTypes","object","isRequired","string"],"mappings":"6IAGA,IAAAA,EAAAC,EAAA,KACAC,EAAAD,EAAA,wDAEAA,EAAA,kBAWe,EAAAD,EAAAG,SATf,SAAyBC,GAIrB,OACIC,UAJW,EAAAH,EAAAI,WAAUF,GACDG,WAOb,CAAyBC,mKCdxCP,EAAA,QACAA,EAAA,QACAA,EAAA,MACAQ,EAAAR,EAAA,KAEAS,EAAAT,EAAA,SACAA,EAAA,KACYU,0JAAZV,EAAA,6DAEMO,cACF,SAAAA,EAAYI,IAAO,EAAAC,EAAAC,SAAAC,KAAAP,GAAA,IAAAQ,GAAA,EAAAC,EAAAH,SAAAC,MAAAP,EAAAU,YAAA,EAAAC,EAAAL,SAAAN,IAAAY,KAAAL,KACTH,IADS,OAAAI,EAMnBK,oBAAsB,SAACC,GACnBA,EAAEC,iBAEF,IAAMC,EAAWC,UAASC,YAAYV,EAAKW,KAAKH,UAAUI,OACrDJ,GAAYA,EAASK,OAASC,UAAUC,oBACzCf,EAAKgB,UACDC,MACIC,EAAApB,QAAAqB,cAAC1B,EAAA2B,kBACGC,GAAG,sBACHC,eAAe,4CACfC,QACIC,MAAOV,UAAUC,0BAQrCf,EAAKgB,UACDC,MAAO,QAGX,EAAAvB,EAAA+B,eACK,IAAIC,gBAAgB1B,EAAKJ,MAAM+B,SAASC,QAASC,IAAI,SACtDrB,EACA,WACIR,EAAKgB,UAAUC,MAAO,QAE1B,SAACa,GACG9B,EAAKgB,UAAUC,MAAOa,EAAIC,cAjClC/B,EAAKZ,SAHUY,2EA0Cf,IAAIiB,EAAQ,KACRlB,KAAKX,MAAM6B,QACXA,EACIC,EAAApB,QAAAqB,cAAA,OAAKa,UAAU,wBACXd,EAAApB,QAAAqB,cAAA,SAAOa,UAAU,iBACZjC,KAAKX,MAAM6B,SAM5B,IAAIgB,EAAY,aAKhB,OAJIhB,IACAgB,GAAa,cAIbf,EAAApB,QAAAqB,cAAA,OAAKa,UAAU,aACXd,EAAApB,QAAAqB,cAAA,OAAKa,UAAU,0BACXd,EAAApB,QAAAqB,cAAA,UACID,EAAApB,QAAAqB,cAAC1B,EAAA2B,kBACGC,GAAG,sBACHC,eAAe,oBAGvBJ,EAAApB,QAAAqB,cAAA,QAAMe,SAAUnC,KAAKM,qBACjBa,EAAApB,QAAAqB,cAAA,SACID,EAAApB,QAAAqB,cAAC1B,EAAA2B,kBACGC,GAAG,sBACHC,eAAe,oDACfC,QACIlC,SAAUU,KAAKH,MAAMP,aAIjC6B,EAAApB,QAAAqB,cAAA,OAAKa,UAAWC,GACZf,EAAApB,QAAAqB,cAAA,SACIgB,KAAK,WACLH,UAAU,eACVI,KAAK,WACLC,IAAI,WACJC,YAAa3C,EAAM4C,gBACf,oBACA,YAEJC,WAAW,WAGlBvB,EACDC,EAAApB,QAAAqB,cAAA,UACIgB,KAAK,SACLH,UAAU,mBAEVd,EAAApB,QAAAqB,cAAC1B,EAAA2B,kBACGC,GAAG,uBACHC,eAAe,kCAlGfmB,UAAMC,WA4GtClD,EAAkBmD,WACdhB,SAAUiB,UAAUC,OAAOC,WAC3BzD,SAAUuD,UAAUG,kBAGTvD","file":"17.876f8212ff4d330b1aa2.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport PasswordResetForm from './password_reset_form.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const siteName = config.SiteName;\n\n    return {\n        siteName,\n    };\n}\n\nexport default connect(mapStateToProps)(PasswordResetForm);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {resetPassword} from 'actions/user_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nclass PasswordResetForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    handlePasswordReset = (e) => {\n        e.preventDefault();\n\n        const password = ReactDOM.findDOMNode(this.refs.password).value;\n        if (!password || password.length < Constants.MIN_PASSWORD_LENGTH) {\n            this.setState({\n                error: (\n                    <FormattedMessage\n                        id='password_form.error'\n                        defaultMessage='Please enter at least {chars} characters.'\n                        values={{\n                            chars: Constants.MIN_PASSWORD_LENGTH,\n                        }}\n                    />\n                ),\n            });\n            return;\n        }\n\n        this.setState({\n            error: null,\n        });\n\n        resetPassword(\n            (new URLSearchParams(this.props.location.search)).get('token'),\n            password,\n            () => {\n                this.setState({error: null});\n            },\n            (err) => {\n                this.setState({error: err.message});\n            }\n        );\n    }\n\n    render() {\n        var error = null;\n        if (this.state.error) {\n            error = (\n                <div className='form-group has-error'>\n                    <label className='control-label'>\n                        {this.state.error}\n                    </label>\n                </div>\n            );\n        }\n\n        var formClass = 'form-group';\n        if (error) {\n            formClass += ' has-error';\n        }\n\n        return (\n            <div className='col-sm-12'>\n                <div className='signup-team__container'>\n                    <h3>\n                        <FormattedMessage\n                            id='password_form.title'\n                            defaultMessage='Password Reset'\n                        />\n                    </h3>\n                    <form onSubmit={this.handlePasswordReset}>\n                        <p>\n                            <FormattedMessage\n                                id='password_form.enter'\n                                defaultMessage='Enter a new password for your {siteName} account.'\n                                values={{\n                                    siteName: this.props.siteName,\n                                }}\n                            />\n                        </p>\n                        <div className={formClass}>\n                            <input\n                                type='password'\n                                className='form-control'\n                                name='password'\n                                ref='password'\n                                placeholder={Utils.localizeMessage(\n                                    'password_form.pwd',\n                                    'Password'\n                                )}\n                                spellCheck='false'\n                            />\n                        </div>\n                        {error}\n                        <button\n                            type='submit'\n                            className='btn btn-primary'\n                        >\n                            <FormattedMessage\n                                id='password_form.change'\n                                defaultMessage='Change my password'\n                            />\n                        </button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nPasswordResetForm.propTypes = {\n    location: PropTypes.object.isRequired,\n    siteName: PropTypes.string,\n};\n\nexport default PasswordResetForm;\n"],"sourceRoot":""}