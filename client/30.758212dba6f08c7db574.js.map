{"version":3,"sources":["webpack:///./components/mfa/mfa_controller/index.js","webpack:///./components/mfa/mfa_controller/mfa_controller.jsx","webpack:///./components/mfa/setup/index.js","webpack:///./components/mfa/setup/setup.jsx","webpack:///./components/mfa/confirm.jsx","webpack:///./components/common/back_button.jsx","webpack:///./images/logo.png"],"names":["_reactRedux","__webpack_require__","_general","connect","state","license","getLicense","config","getConfig","mfa","MFA","enableMultifactorAuthentication","EnableMultifactorAuthentication","enforceMultifactorAuthentication","EnforceMultifactorAuthentication","MFAController","_reactIntl","_reactRouterDom","_global_actions","_utils","handleOnClick","e","preventDefault","emitUserLoggedOutEvent","document","body","classList","add","getElementById","this","props","history","push","remove","_this2","backButton","_react2","default","createElement","className","onClick","title","localizeMessage","FormattedMessage","id","defaultMessage","_back_button2","src","logoImage","Switch","Route","path","match","url","render","_setup2","_extends3","updateParent","_confirm2","React","Component","propTypes","location","PropTypes","object","isRequired","children","node","bool","shape","string","siteName","SiteName","Setup","_user_actions","Utils","_classCallCheck3","_this","_possibleConstructorReturn3","__proto__","_getPrototypeOf2","call","submit","code","refs","value","replace","length","setState","error","activateMfa","err","message","secret","qrCode","user","UserStore","getCurrentUser","mfa_active","generateMfaSecret","data","qr_code","serverError","formClass","errorContent","mfaRequired","_formatted_markdown_message2","values","onSubmit","style","ref","placeholder","autoFocus","type","maxHeight","KeyCodes","Constants","Confirm","loadMe","then","onKeyPress","isKeyPressed","ENTER","addEventListener","removeEventListener","defaultProps","BackButton","Link","to","PureComponent","func","module","exports","p"],"mappings":"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","file":"30.758212dba6f08c7db574.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport MFAController from './mfa_controller.jsx';\n\nfunction mapStateToProps(state) {\n    const license = getLicense(state);\n    const config = getConfig(state);\n\n    const mfa = license.MFA === 'true';\n    const enableMultifactorAuthentication = config.EnableMultifactorAuthentication === 'true';\n    const enforceMultifactorAuthentication = config.EnforceMultifactorAuthentication === 'true';\n\n    return {\n        mfa,\n        enableMultifactorAuthentication,\n        enforceMultifactorAuthentication,\n    };\n}\n\nexport default connect(mapStateToProps)(MFAController);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Route, Switch} from 'react-router-dom';\n\nimport {emitUserLoggedOutEvent} from 'actions/global_actions.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport logoImage from 'images/logo.png';\nimport BackButton from 'components/common/back_button.jsx';\n\nimport Setup from '../setup';\nimport Confirm from '../confirm';\n\nexport default class MFAController extends React.Component {\n    componentDidMount() {\n        document.body.classList.add('sticky');\n        document.getElementById('root').classList.add('container-fluid');\n\n        if (!this.props.mfa || !this.props.enableMultifactorAuthentication) {\n            this.props.history.push('/');\n        }\n    }\n\n    componentWillUnmount() {\n        document.body.classList.remove('sticky');\n        document.getElementById('root').classList.remove('container-fluid');\n    }\n\n    handleOnClick = (e) => {\n        e.preventDefault();\n        emitUserLoggedOutEvent('/login');\n    }\n\n    render() {\n        let backButton;\n        if (this.props.enforceMultifactorAuthentication) {\n            backButton = (\n                <div className='signup-header'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.handleOnClick}\n                    >\n                        <span\n                            className='fa fa-chevron-left'\n                            title={localizeMessage('generic_icons.logout', 'Logout Icon')}\n                        />\n                        <FormattedMessage\n                            id='web.header.logout'\n                            defaultMessage='Logout'\n                        />\n                    </button>\n                </div>\n            );\n        } else {\n            backButton = (<BackButton/>);\n        }\n\n        return (\n            <div className='inner-wrap'>\n                <div className='row content'>\n                    <div>\n                        {backButton}\n                        <div className='col-sm-12'>\n                            <div className='signup-team__container'>\n                                <h3>\n                                    <FormattedMessage\n                                        id='mfa.setupTitle'\n                                        defaultMessage='Multi-factor Authentication Setup'\n                                    />\n                                </h3>\n                                <img\n                                    className='signup-team-logo'\n                                    src={logoImage}\n                                />\n                                <div id='mfa'>\n                                    <Switch>\n                                        <Route\n                                            path={`${this.props.match.url}/setup`}\n                                            render={(props) => (\n                                                <Setup\n                                                    state={this.state}\n                                                    updateParent={this.updateParent}\n                                                    {...props}\n                                                />\n                                            )}\n                                        />\n                                        <Route\n                                            path={`${this.props.match.url}/confirm`}\n                                            render={(props) => (\n                                                <Confirm\n                                                    state={this.state}\n                                                    updateParent={this.updateParent}\n                                                    {...props}\n                                                />\n                                            )}\n                                        />\n                                    </Switch>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMFAController.propTypes = {\n    location: PropTypes.object.isRequired,\n    children: PropTypes.node,\n    mfa: PropTypes.bool.isRequired,\n    enableMultifactorAuthentication: PropTypes.bool.isRequired,\n    enforceMultifactorAuthentication: PropTypes.bool.isRequired,\n\n    /*\n     * Object from react-router\n     */\n    match: PropTypes.shape({\n        url: PropTypes.string.isRequired,\n    }).isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport Setup from './setup.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    const siteName = config.SiteName;\n    const enforceMultifactorAuthentication = config.EnforceMultifactorAuthentication === 'true';\n\n    return {\n        siteName,\n        enforceMultifactorAuthentication,\n    };\n}\n\nexport default connect(mapStateToProps)(Setup);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport {activateMfa, generateMfaSecret} from 'actions/user_actions.jsx';\nimport UserStore from 'stores/user_store.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport default class Setup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {secret: '', qrCode: ''};\n    }\n\n    componentDidMount() {\n        const user = UserStore.getCurrentUser();\n        if (!user || user.mfa_active) {\n            this.props.history.push('/');\n            return;\n        }\n\n        generateMfaSecret(\n            (data) => this.setState({secret: data.secret, qrCode: data.qr_code}),\n            (err) => this.setState({serverError: err.message})\n        );\n    }\n\n    submit = (e) => {\n        e.preventDefault();\n        const code = this.refs.code.value.replace(/\\s/g, '');\n        if (!code || code.length === 0) {\n            this.setState({error: Utils.localizeMessage('mfa.setup.codeError', 'Please enter the code from Google Authenticator.')});\n            return;\n        }\n\n        this.setState({error: null});\n\n        activateMfa(\n            code,\n            () => {\n                this.props.history.push('/mfa/confirm');\n            },\n            (err) => {\n                if (err.id === 'ent.mfa.activate.authenticate.app_error') {\n                    this.setState({error: Utils.localizeMessage('mfa.setup.badCode', 'Invalid code. If this issue persists, contact your System Administrator.')});\n                    return;\n                }\n                this.setState({error: err.message});\n            }\n        );\n    }\n\n    render() {\n        let formClass = 'form-group';\n        let errorContent;\n        if (this.state.error) {\n            errorContent = <div className='form-group has-error'><label className='control-label'>{this.state.error}</label></div>;\n            formClass += ' has-error';\n        }\n\n        let mfaRequired;\n        if (this.props.enforceMultifactorAuthentication) {\n            mfaRequired = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='mfa.setup.required'\n                        defaultMessage='**Multi-factor authentication is required on {siteName}.**'\n                        values={{\n                            siteName: this.props.siteName,\n                        }}\n                    />\n                </p>\n            );\n        }\n\n        return (\n            <div>\n                <form\n                    onSubmit={this.submit}\n                    className={formClass}\n                >\n                    {mfaRequired}\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.setup.step1'\n                            defaultMessage=\"**Step 1: **On your phone, download Google Authenticator from [iTunes](!https://itunes.apple.com/us/app/google-authenticator/id388497605?mt=8') or [Google Play](!https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&hl=en)\"\n                        />\n                    </p>\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.setup.step2'\n                            defaultMessage='**Step 2: **Use Google Authenticator to scan this QR code, or manually type in the secret key'\n                        />\n                    </p>\n                    <div className='form-group'>\n                        <div className='col-sm-12'>\n                            <img\n                                style={style.qrCode}\n                                src={'data:image/png;base64,' + this.state.qrCode}\n                            />\n                        </div>\n                    </div>\n                    <br/>\n                    <div className='form-group'>\n                        <p className='col-sm-12'>\n                            <FormattedMessage\n                                id='mfa.setup.secret'\n                                defaultMessage='Secret: {secret}'\n                                values={{\n                                    secret: this.state.secret,\n                                }}\n                            />\n                        </p>\n                    </div>\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.setup.step3'\n                            defaultMessage='**Step 3: **Enter the code generated by Google Authenticator'\n                        />\n                    </p>\n                    <p>\n                        <input\n                            ref='code'\n                            className='form-control'\n                            placeholder={Utils.localizeMessage('mfa.setup.code', 'MFA Code')}\n                            autoFocus={true}\n                        />\n                    </p>\n                    {errorContent}\n                    <button\n                        type='submit'\n                        className='btn btn-primary'\n                    >\n                        <FormattedMessage\n                            id='mfa.setup.save'\n                            defaultMessage='Save'\n                        />\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nSetup.propTypes = {\n    siteName: PropTypes.string,\n    enforceMultifactorAuthentication: PropTypes.bool.isRequired,\n};\n\nconst style = {\n    qrCode: {maxHeight: 170},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {loadMe} from 'actions/user_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport Utils from 'utils/utils.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nconst KeyCodes = Constants.KeyCodes;\n\nexport default class Confirm extends React.Component {\n    componentDidMount() {\n        document.body.addEventListener('keydown', this.onKeyPress);\n    }\n\n    componentWillUnmount() {\n        document.body.removeEventListener('keydown', this.onKeyPress);\n    }\n\n    submit = (e) => {\n        e.preventDefault();\n        loadMe().then(() => {\n            this.props.history.push('/');\n        });\n    }\n\n    onKeyPress = (e) => {\n        if (Utils.isKeyPressed(e, KeyCodes.ENTER)) {\n            this.submit(e);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form\n                    onSubmit={this.submit}\n                    onKeyPress={this.onKeyPress}\n                    className='form-group'\n                >\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.confirm.complete'\n                            defaultMessage='**Set up complete!**'\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='mfa.confirm.secure'\n                            defaultMessage='Your account is now secure. Next time you sign in, you will be asked to enter a code from the Google Authenticator app on your phone.'\n                        />\n                    </p>\n                    <button\n                        type='submit'\n                        className='btn btn-primary'\n                    >\n                        <FormattedMessage\n                            id='mfa.confirm.okay'\n                            defaultMessage='Okay'\n                        />\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nConfirm.defaultProps = {\n};\nConfirm.propTypes = {\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class BackButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * URL to return to\n         */\n        url: PropTypes.string,\n\n        /**\n         * An optional click handler that will trigger when the user clicks on the back button\n         */\n        onClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        url: '/',\n    };\n\n    render() {\n        return (\n            <div className='signup-header'>\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <span\n                        className='fa fa-chevron-left'\n                        title={localizeMessage('generic_icons.back', 'Back Icon')}\n                    />\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/5d6be4015bde2a4e0358c8bc110deadc.png\";"],"sourceRoot":""}