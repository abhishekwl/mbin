{"version":3,"sources":["webpack:///./components/password_reset_send_link.jsx","webpack:///./components/common/back_button.jsx"],"names":["__webpack_require__","_reactIntl","_helpers","_user_actions","Utils","PasswordResetSendLink","props","_classCallCheck3","default","this","_this","_possibleConstructorReturn3","__proto__","_getPrototypeOf2","call","handleSendLink","bind","state","error","updateText","e","_this2","preventDefault","email","ReactDOM","findDOMNode","refs","value","trim","toLowerCase","isEmail","setState","sendPasswordResetEmail","_react2","createElement","className","FormattedMessage","id","defaultMessage","_jquery2","reset_form","hide","err","message","update_text","formClass","_back_button2","onSubmit","ref","type","name","placeholder","localizeMessage","spellCheck","React","Component","defaultProps","propTypes","params","PropTypes","object","isRequired","_reactRouterDom","_utils","BackButton","Link","onClick","to","url","title","PureComponent","string","func"],"mappings":"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","file":"16.963487cb301ff6300db3.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {isEmail} from 'mattermost-redux/utils/helpers';\n\nimport {sendPasswordResetEmail} from 'actions/user_actions.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport BackButton from 'components/common/back_button.jsx';\n\nclass PasswordResetSendLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSendLink = this.handleSendLink.bind(this);\n\n        this.state = {\n            error: '',\n            updateText: '',\n        };\n    }\n    handleSendLink(e) {\n        e.preventDefault();\n\n        var email = ReactDOM.findDOMNode(this.refs.email).value.trim().toLowerCase();\n        if (!email || !isEmail(email)) {\n            this.setState({\n                error: (\n                    <FormattedMessage\n                        id={'password_send.error'}\n                        defaultMessage={'Please enter a valid email address.'}\n                    />\n                ),\n            });\n            return;\n        }\n\n        // End of error checking clear error\n        this.setState({\n            error: '',\n        });\n\n        sendPasswordResetEmail(\n            email,\n            () => {\n                this.setState({\n                    error: null,\n                    updateText: (\n                        <div className='reset-form alert alert-success'>\n                            <FormattedMessage\n                                id='password_send.link'\n                                defaultMessage='If the account exists, a password reset email will be sent to:'\n                            />\n                            <div>\n                                <b>{email}</b>\n                            </div>\n                            <br/>\n                            <FormattedMessage\n                                id='password_send.checkInbox'\n                                defaultMessage='Please check your inbox.'\n                            />\n                        </div>\n                    ),\n                });\n                $(ReactDOM.findDOMNode(this.refs.reset_form)).hide();\n            },\n            (err) => {\n                this.setState({\n                    error: err.message,\n                    update_text: null,\n                });\n            }\n        );\n    }\n    render() {\n        var error = null;\n        if (this.state.error) {\n            error = <div className='form-group has-error'><label className='control-label'>{this.state.error}</label></div>;\n        }\n\n        var formClass = 'form-group';\n        if (error) {\n            formClass += ' has-error';\n        }\n\n        return (\n            <div>\n                <BackButton/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <h3>\n                            <FormattedMessage\n                                id='password_send.title'\n                                defaultMessage='Password Reset'\n                            />\n                        </h3>\n                        {this.state.updateText}\n                        <form\n                            onSubmit={this.handleSendLink}\n                            ref='reset_form'\n                        >\n                            <p>\n                                <FormattedMessage\n                                    id='password_send.description'\n                                    defaultMessage='To reset your password, enter the email address you used to sign up'\n                                />\n                            </p>\n                            <div className={formClass}>\n                                <input\n                                    type='email'\n                                    className='form-control'\n                                    name='email'\n                                    ref='email'\n                                    placeholder={Utils.localizeMessage(\n                                        'password_send.email',\n                                        'Email'\n                                    )}\n                                    spellCheck='false'\n                                />\n                            </div>\n                            {error}\n                            <button\n                                type='submit'\n                                className='btn btn-primary'\n                            >\n                                <FormattedMessage\n                                    id='password_send.reset'\n                                    defaultMessage='Reset my password'\n                                />\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPasswordResetSendLink.defaultProps = {\n};\nPasswordResetSendLink.propTypes = {\n    params: PropTypes.object.isRequired,\n};\n\nexport default PasswordResetSendLink;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class BackButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * URL to return to\n         */\n        url: PropTypes.string,\n\n        /**\n         * An optional click handler that will trigger when the user clicks on the back button\n         */\n        onClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        url: '/',\n    };\n\n    render() {\n        return (\n            <div className='signup-header'>\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <span\n                        className='fa fa-chevron-left'\n                        title={localizeMessage('generic_icons.back', 'Back Icon')}\n                    />\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n"],"sourceRoot":""}