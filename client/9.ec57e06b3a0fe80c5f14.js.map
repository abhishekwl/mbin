{"version":3,"sources":["webpack:///./components/backstage/components/backstage_list.jsx","webpack:///./components/integrations/delete_integration.jsx","webpack:///./components/delete_modal_trigger.jsx","webpack:///./components/integrations/abstract_incoming_webhook.jsx","webpack:///./components/channel_select.jsx","webpack:///./components/integrations/abstract_outgoing_webhook.jsx","webpack:///./components/integrations/abstract_oauth_app.jsx","webpack:///./components/integrations/abstract_command.jsx","webpack:///./components/integrations/confirm_integration/index.js","webpack:///./components/backstage/index.js","webpack:///./components/backstage/backstage_controller.jsx","webpack:///./components/integrations/index.js","webpack:///./components/integrations/integrations.jsx","webpack:///./images/incoming_webhook.jpg","webpack:///./images/oauth_icon.png","webpack:///./images/outgoing_webhook.jpg","webpack:///./images/slash_command_icon.jpg","webpack:///./components/integrations/integration_option.jsx","webpack:///./components/emoji/index.js","webpack:///./components/emoji/emoji_page.jsx","webpack:///./components/emoji/emoji_list/index.js","webpack:///./components/emoji/emoji_list/emoji_list.jsx","webpack:///./components/emoji/emoji_list_item/index.js","webpack:///./components/emoji/emoji_list_item/emoji_list_item.jsx","webpack:///./components/emoji/delete_emoji_modal.jsx","webpack:///./components/emoji/add_emoji.jsx","webpack:///./components/integrations/installed_incoming_webhooks/index.js","webpack:///./components/integrations/installed_incoming_webhooks/installed_incoming_webhooks.jsx","webpack:///./components/integrations/installed_incoming_webhook.jsx","webpack:///./components/integrations/add_incoming_webhook/index.js","webpack:///./components/integrations/add_incoming_webhook/add_incoming_webhook.jsx","webpack:///./components/integrations/edit_incoming_webhook/index.js","webpack:///./components/integrations/edit_incoming_webhook/edit_incoming_webhook.jsx","webpack:///./components/integrations/installed_outgoing_webhooks/index.js","webpack:///./components/integrations/installed_outgoing_webhooks/installed_outgoing_webhooks.jsx","webpack:///./components/integrations/installed_outgoing_webhook.jsx","webpack:///./components/integrations/add_outgoing_webhook/index.js","webpack:///./components/integrations/add_outgoing_webhook/add_outgoing_webhook.jsx","webpack:///./components/integrations/edit_outgoing_webhook/index.js","webpack:///./components/integrations/edit_outgoing_webhook/edit_outgoing_webhook.jsx","webpack:///./components/integrations/installed_oauth_apps/index.js","webpack:///./components/integrations/installed_oauth_apps/installed_oauth_apps.jsx","webpack:///./components/integrations/installed_oauth_app.jsx","webpack:///./components/integrations/add_oauth_app/index.js","webpack:///./components/integrations/add_oauth_app/add_oauth_app.jsx","webpack:///./components/integrations/edit_oauth_app/index.js","webpack:///./components/integrations/edit_oauth_app/edit_oauth_app.jsx","webpack:///./components/integrations/commands_container/index.js","webpack:///./components/integrations/commands_container/commands_container.jsx","webpack:///./components/integrations/installed_commands/index.js","webpack:///./components/integrations/installed_commands/installed_commands.jsx","webpack:///./components/integrations/installed_command.jsx","webpack:///./components/integrations/add_command/index.js","webpack:///./components/integrations/add_command/add_command.jsx","webpack:///./components/integrations/edit_command/index.js","webpack:///./components/integrations/edit_command/edit_command.jsx","webpack:///./components/integrations/confirm_integration/confirm_integration.jsx","webpack:///./components/backstage/components/backstage_sidebar.jsx","webpack:///./components/backstage/components/backstage_category.jsx","webpack:///./components/backstage/components/backstage_section.jsx","webpack:///./components/backstage/components/backstage_navbar.jsx","webpack:///./components/backstage/components/backstage_header.jsx","webpack:///./node_modules/mattermost-redux/selectors/entities/integrations.js","webpack:///./components/spinner_button.jsx","webpack:///./components/copy_text.jsx"],"names":["__webpack_require__","_reactRouterDom","Utils","BackstageList","props","_classCallCheck3","default","this","_this","_possibleConstructorReturn3","__proto__","_getPrototypeOf2","call","updateFilter","bind","state","filter","e","setState","target","value","toLowerCase","children","loading","_react2","createElement","_loading_screen2","React","Children","map","child","cloneElement","length","emptyText","className","addLink","addText","Link","to","type","header","title","localizeMessage","placeholder","searchPlaceholder","onChange","style","search","helpText","Component","propTypes","PropTypes","node","isRequired","string","bool","defaultProps","flexGrow","flexShrink","_reactIntl","_utils","DeleteIntegration","FormattedMessage","id","defaultMessage","messageId","DeleteModalTrigger","onDelete","func","handleOpenModal","preventDefault","showDeleteModal","handleConfirm","handleCancel","handleKeyDown","isKeyPressed","Constants","KeyCodes","ENTER","constructor","TypeError","onClick","triggerTitle","_confirm_modal2","show","modalTitle","message","modalMessage","confirmButtonText","modalConfirmButton","onConfirm","onCancel","onKeyDown","PureComponent","AbstractIncomingWebhook","getStateFromHook","hook","displayName","display_name","description","channelId","channel_id","channelLocked","channel_locked","username","iconURL","icon_url","saving","serverError","clientError","handleSubmit","action","then","updateDisplayName","updateDescription","updateChannelId","updateChannelLocked","checked","updateUsername","updateIconURL","initialHook","headerToRender","footerToRender","footer","_backstage_header2","team","name","onSubmit","htmlFor","maxLength","_channel_select2","selectOpen","selectPrivate","enablePostUsernameOverride","enablePostIconOverride","_form_error2","errors","_spinner_button2","spinning","object","_channel_utils","ChannelSelect","handleChannelChange","filterChannels","channels","ChannelStore","getAll","sort","sortChannelsByDisplayName","selectDm","addChangeListener","removeChangeListener","channel","_this2","options","key","forEach","OPEN_CHANNEL","push","PRIVATE_CHANNEL","DM_CHANNEL","AbstractOutgoingWebhook","triggerWords","trigger_words","i","callbackUrls","callback_urls","contentType","content_type","triggerWhen","trigger_when","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","_getIterator3","split","next","done","triggerWord","trim","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","callbackUrl","team_id","TeamStore","getCurrentId","parseInt","updateContentType","updateTriggerWords","updateTriggerWhen","updateCallbackUrls","renderExtra","rows","values","link","href","rel","_constants","AbstractOAuthApp","getStateFromApp","app","homepage","join","is_trusted","has_icon","Boolean","imageLoaded","refs","updateName","updateTrusted","updateHomepage","updateIconUrl","image","src","Image","onload","initialApp","icon","trusted","_system_permission_gate2","permissions","Permissions","MANAGE_SYSTEM","ref","REQUEST_POST","AbstractCommand","getStateFromCommand","command","trigger","url","method","iconUrl","autocomplete","auto_complete","autocompleteHint","auto_complete_hint","autocompleteDescription","auto_complete_desc","indexOf","substr","MIN_TRIGGER_LENGTH","MAX_TRIGGER_LENGTH","min","max","updateTrigger","updateUrl","updateMethod","updateAutocomplete","updateAutocompleteHint","updateAutocompleteDescription","initialCommand","_reactRedux","_integrations","connect","commands","getCommands","oauthApps","getOAuthApps","incomingHooks","getIncomingHooks","outgoingHooks","getOutgoingHooks","ConfirmIntegration","_users","_teams","_general","_roles","withRouter","user","getCurrentUser","getCurrentTeam","config","getConfig","siteName","SiteName","enableCustomEmoji","EnableCustomEmoji","enableIncomingWebhooks","EnableIncomingWebhooks","enableOutgoingWebhooks","EnableOutgoingWebhooks","enableCommands","EnableCommands","enableOAuthServiceProvider","EnableOAuthServiceProvider","canCreateCustomEmoji","haveISystemPermission","permission","MANAGE_EMOJIS","getMyTeams","t","haveITeamPermission","BackstageController","BackstageRoute","_ref","component","extraProps","rest","_objectWithoutProperties3","Route","_extends3","render","scrollToTop","listRef","scrollTop","setListRef","_announcement_bar2","_system_notice2","_backstage_navbar2","_pluggable2","pluggableName","_backstage_sidebar2","Switch","exact","path","Integrations","match","InstalledIncomingWebhooks","AddIncomingWehook","EditIncomingWebhook","InstalledOutgoingWebhooks","AddOutgoingWebhook","EditOutgoingWebhook","CommandsContainer","InstalledOauthApps","AddOauthApp","EditOauthApp","Emoji","AddEmoji","shape","enableOnlyAdminIntegrations","EnableOnlyAdminIntegrations","updateTitle","currentSiteName","document","_team_permission_gate2","teamId","MANAGE_WEBHOOKS","_integration_option2","IncomingWebhookIcon","OutgoingWebhookIcon","MANAGE_SLASH_COMMANDS","SlashCommandIcon","MANAGE_OAUTH","OAuthIcon","appDirectory","module","exports","p","IntegrationOption","_props","_redux","teamName","teamDisplayName","entities","general","dispatch","actions","bindActionCreators","loadRolesIfNeeded","EmojiPage","arguments","nextProps","_emoji_list2","_emojis","_emojis2","emojiIds","getCustomEmojiIdsSortedByName","getCustomEmojis","searchCustomEmojis","EmojiList","EMOJI_PER_PAGE","EMOJI_SEARCH_DELAY_MILLISECONDS","nextPage","page","nextLoading","SORT_BY_NAME","data","missingPages","previousPage","onSearchChange","term","clearTimeout","searchTimeout","setTimeout","_callee","_ref3","_regenerator2","wrap","_context","prev","searchEmojis","abrupt","sent","em","stop","deleteFromSearch","emojiId","index","newSearchEmojis","splice","_this3","_ref4","_this4","emojis","nextButton","previousButton","colSpan","_emoji_list_item2","pageStart","pageEnd","slice","buttonContents","_save_button2","btnClass","extraClasses","disabled","savingMessage","arrayOf","ownProps","emoji","customEmoji","creator","getUser","creator_id","creatorDisplayName","getDisplayNameByUser","creatorUsername","currentUserId","getCurrentUserId","currentTeam","deleteCustomEmoji","EmojiListItem","_client","handleDelete","deleteButton","_delete_emoji_modal2","MANAGE_OTHERS_EMOJIS","backgroundImage","Client4","getCustomEmojiImageUrl","DeleteEmoji","EmojiActions","updateImage","imageUrl","error","startsWith","endsWith","substring","test","EmojiStore","hasSystemEmoji","addEmoji","history","files","reader","FileReader","result","readAsDataURL","filename","preview","accept","multiple","contextTypes","router","Actions","_channels","_integrations2","getCurrentTeamId","canManageOthersWebhooks","MANAGE_OTHERS_WEBHOOKS","incomingWebhooks","_keys2","incomingWebhook","getAllChannels","users","getUsers","removeIncomingHook","deleteIncomingWebhook","incomingWebhookCompare","START_PAGE_NUM","PAGE_SIZE","a","b","displayNameA","channelA","displayNameB","localeCompare","canChange","user_id","_installed_incoming_webhook2","_backstage_list2","buildYourOwn","array","_url","_i18n","InstalledIncomingWebhook","matchesFilter","_delete_integration2","incomingWebhookId","getSiteURL","_copy_text2","createAt","create_at","EnablePostUsernameOverride","EnablePostIconOverride","createIncomingHookRequest","requests","integrations","createIncomingHook","AddIncomingWebhook","_browser_history","HEADER","FOOTER","addIncomingHook","_asyncToGenerator3","mark","_ref2","browserHistory","_x","apply","_abstract_incoming_webhook2","hookId","URLSearchParams","location","get","updateIncomingHookRequest","updateIncomingHook","getIncomingHook","editIncomingHook","newHook","token","submitHook","_callee2","_context2","showConfirmModal","outgoingWebhooks","outgoingWebhook","removeOutgoingHook","regenOutgoingHookToken","InstalledOutgoingWebhook","regenOutgoingWebhookToken","outgoingWebhookCompare","channelB","_installed_outgoing_webhook2","onRegenToken","handleRegenToken","makeDisplayName","urls","createOutgoingHookRequest","createOutgoingHook","addOutgoingHook","_abstract_outgoing_webhook2","updateOutgoingHookRequest","updateOutgoingHook","getOutgoingHook","editOutgoingHook","triggerWordsSame","callbackUrlsSame","every","v","handleConfirmModal","confirmModalDismissed","confirmButton","confirmTitle","confirmMessage","canManageOauth","regenOAuthAppSecretRequest","updateOAuthApp","regenOAuthAppSecret","deleteOAuthApp","InstalledOAuthApps","nameA","nameB","_values2","oauthAppCompare","_installed_oauth_app2","oauthApp","onRegenerateSecret","oauthApplications","FAKE_SECRET","InstalledOAuthApp","handleShowClientSecret","clientSecret","client_secret","handleHideClientSecret","handleRegenerate","isTrusted","showHide","_formatted_markdown_message2","idMessage","regen","clientId","getDisplayNameByUserId","addOAuthAppRequest","addOAuthApp","AddOAuthApp","_abstract_oauth_app2","oauthAppId","getOAuthApp","editOAuthApp","EditOAuthApp","newApp","submitOAuthApp","getCustomTeamCommands","CommandRoute","Redirect","InstalledCommands","AddCommand","EditCommand","canManageOthersSlashCommands","MANAGE_OTHERS_SLASH_COMMANDS","regenCommandToken","deleteCommand","commandCompare","_installed_command2","InstalledCommand","commandToken","addCommand","_abstract_command2","commandId","editCommand","newCommand","originalCommand","submitCommand","handleKeyPress","window","addEventListener","removeEventListener","headerText","tokenText","incomingHook","outgoingHook","COMMAND","INCOMING_WEBHOOK","incomingHookToken","OUTGOING_WEBHOOK","outgoingHookToken","OAUTH_APP","replace","ErrorPageTypes","PAGE_NOT_FOUND","oauthAppToken","oauthAppSecret","secret","BackstageSidebar","_backstage_category2","parentLink","_backstage_section2","renderCustomEmoji","renderIntegrations","BackstageCategory","NavLink","activeClassName","element","BackstageSection","subsection","getLink","clonedChildren","BackstageNavbar","DEFAULT_CHANNEL","BackstageHeader","Object","defineProperty","getAutocompleteCommandsList","getAllCommands","getOutgoingHooksInCurrentTeam","_extends","assign","source","prototype","hasOwnProperty","getSystemCommands","_reselect","systemCommands","createSelector","hooks","o","currentTeamId","_react","SpinnerButton","loadingGif","_reactBootstrap","CopyText","copyText","copyToClipboard","queryCommandSupported","tooltip","Tooltip","OverlayTrigger","delayShow","OVERLAY_TIME_DELAY","placement","overlay"],"mappings":"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","file":"9.ec57e06b3a0fe80c5f14.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport * as Utils from 'utils/utils.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\n\nexport default class BackstageList extends React.Component {\n    static propTypes = {\n        children: PropTypes.node,\n        header: PropTypes.node.isRequired,\n        addLink: PropTypes.string,\n        addText: PropTypes.node,\n        emptyText: PropTypes.node,\n        helpText: PropTypes.node,\n        loading: PropTypes.bool.isRequired,\n        searchPlaceholder: PropTypes.string,\n    }\n\n    static defaultProps = {\n        searchPlaceholder: Utils.localizeMessage('backstage_list.search', 'Search'),\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.updateFilter = this.updateFilter.bind(this);\n\n        this.state = {\n            filter: '',\n        };\n    }\n\n    updateFilter(e) {\n        this.setState({\n            filter: e.target.value,\n        });\n    }\n\n    render() {\n        const filter = this.state.filter.toLowerCase();\n\n        let children;\n        if (this.props.loading) {\n            children = <LoadingScreen/>;\n        } else {\n            children = React.Children.map(this.props.children, (child) => {\n                return React.cloneElement(child, {filter});\n            });\n\n            if (children.length === 0 && this.props.emptyText) {\n                children = (\n                    <span className='backstage-list__item backstage-list__empty'>\n                        {this.props.emptyText}\n                    </span>\n                );\n            }\n        }\n\n        let addLink = null;\n        if (this.props.addLink && this.props.addText) {\n            addLink = (\n                <Link\n                    className='add-link'\n                    to={this.props.addLink}\n                >\n                    <button\n                        type='button'\n                        className='btn btn-primary'\n                    >\n                        <span>\n                            {this.props.addText}\n                        </span>\n                    </button>\n                </Link>\n            );\n        }\n\n        return (\n            <div className='backstage-content'>\n                <div className='backstage-header'>\n                    <h1>\n                        {this.props.header}\n                    </h1>\n                    {addLink}\n                </div>\n                <div className='backstage-filters'>\n                    <div className='backstage-filter__search'>\n                        <i\n                            className='fa fa-search'\n                            title={Utils.localizeMessage('generic_icons.search', 'Search Icon')}\n                        />\n                        <input\n                            type='search'\n                            className='form-control'\n                            placeholder={this.props.searchPlaceholder}\n                            value={this.state.filter}\n                            onChange={this.updateFilter}\n                            style={style.search}\n                        />\n                    </div>\n                </div>\n                <span className='backstage-list__help'>\n                    {this.props.helpText}\n                </span>\n                <div className='backstage-list'>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    search: {flexGrow: 0, flexShrink: 0},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport DeleteModalTrigger from 'components/delete_modal_trigger.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class DeleteIntegration extends DeleteModalTrigger {\n    get triggerTitle() {\n        return (\n            <FormattedMessage\n                id='installed_integrations.delete'\n                defaultMessage='Delete'\n            />\n        );\n    }\n\n    get modalTitle() {\n        return (\n            <FormattedMessage\n                id='integrations.delete.confirm.title'\n                defaultMessage='Delete Integration'\n            />\n        );\n    }\n\n    get modalMessage() {\n        return (\n            <div className='alert alert-warning'>\n                <i\n                    className='fa fa-warning fa-margin--right'\n                    title={localizeMessage('generic_icons.warning', 'Warning Icon')}\n                />\n                <FormattedMessage\n                    id={this.props.messageId}\n                    defaultMessage='This action permanently deletes the integration and breaks any integrations using it. Are you sure you want to delete it?'\n                />\n            </div>\n        );\n    }\n\n    get modalConfirmButton() {\n        return (\n            <FormattedMessage\n                id='integrations.delete.confirm.button'\n                defaultMessage='Delete'\n            />\n        );\n    }\n}\n\nDeleteIntegration.propTypes = {\n    messageId: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport ConfirmModal from './confirm_modal.jsx';\n\nexport default class DeleteModalTrigger extends React.PureComponent {\n    static propTypes = {\n        onDelete: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        if (this.constructor === DeleteModalTrigger) {\n            throw new TypeError('Can not construct abstract class.');\n        }\n\n        this.state = {\n            showDeleteModal: false,\n        };\n    }\n\n    handleOpenModal = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            showDeleteModal: true,\n        });\n    }\n\n    handleConfirm = () => {\n        this.props.onDelete();\n    }\n\n    handleCancel = () => {\n        this.setState({\n            showDeleteModal: false,\n        });\n    }\n\n    handleKeyDown = (e) => {\n        if (Utils.isKeyPressed(e, Constants.KeyCodes.ENTER)) {\n            this.handleConfirm(e);\n        }\n    }\n\n    render() {\n        return (\n            <span>\n                <button\n                    className='color--link style--none'\n                    onClick={this.handleOpenModal}\n                >\n                    { this.triggerTitle }\n                </button>\n                <ConfirmModal\n                    show={this.state.showDeleteModal}\n                    title={this.modalTitle}\n                    message={this.modalMessage}\n                    confirmButtonText={this.modalConfirmButton}\n                    onConfirm={this.handleConfirm}\n                    onCancel={this.handleCancel}\n                    onKeyDown={this.handleKeyDown}\n                />\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport ChannelSelect from 'components/channel_select.jsx';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\n\nexport default class AbstractIncomingWebhook extends React.Component {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The hook used to set the initial state\n        */\n        initialHook: PropTypes.object,\n\n        /**\n        * Whether to allow configuration of the default post username.\n        */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post icon.\n        */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromHook(this.props.initialHook || {});\n    }\n\n    getStateFromHook = (hook) => {\n        return {\n            displayName: hook.display_name || '',\n            description: hook.description || '',\n            channelId: hook.channel_id || '',\n            channelLocked: hook.channel_locked || false,\n            username: hook.username || '',\n            iconURL: hook.icon_url || '',\n            saving: false,\n            serverError: '',\n            clientError: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            serverError: '',\n            clientError: '',\n        });\n\n        if (!this.state.channelId) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_incoming_webhook.channelRequired'\n                        defaultMessage='A valid channel is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const hook = {\n            channel_id: this.state.channelId,\n            channel_locked: this.state.channelLocked,\n            display_name: this.state.displayName,\n            description: this.state.description,\n            username: this.state.username,\n            icon_url: this.state.iconURL,\n        };\n\n        this.props.action(hook).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateChannelId = (e) => {\n        this.setState({\n            channelId: e.target.value,\n        });\n    }\n\n    updateChannelLocked = (e) => {\n        this.setState({\n            channelLocked: e.target.checked,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconURL = (e) => {\n        this.setState({\n            iconURL: e.target.value,\n        });\n    }\n\n    render() {\n        var headerToRender = this.props.header;\n        var footerToRender = this.props.footer;\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/incoming_webhooks`}>\n                        <FormattedMessage\n                            id='installed_incoming_webhooks.header'\n                            defaultMessage='Incoming Webhooks'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.displayName.help'\n                                        defaultMessage='Choose a title to be displayed on the webhook settings page. Maximum 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='500'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.description.help'\n                                        defaultMessage='Description for your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelId'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.channel'\n                                    defaultMessage='Channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <ChannelSelect\n                                    id='channelId'\n                                    value={this.state.channelId}\n                                    onChange={this.updateChannelId}\n                                    selectOpen={true}\n                                    selectPrivate={true}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.channel.help'\n                                        defaultMessage='The default public or private channel that receives the webhook payloads. You must belong to the private channel when setting up the webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelLocked'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.channelLocked'\n                                    defaultMessage='Lock to this channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <input\n                                    id='channelLocked'\n                                    type='checkbox'\n                                    checked={this.state.channelLocked}\n                                    onChange={this.updateChannelLocked}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.channelLocked.help'\n                                        defaultMessage='If set, the incoming webhook can only post to the channel selected above.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        { this.props.enablePostUsernameOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='username'\n                                >\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.username'\n                                        defaultMessage='Username'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='username'\n                                        type='text'\n                                        maxLength='22'\n                                        className='form-control'\n                                        value={this.state.username}\n                                        onChange={this.updateUsername}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_incoming_webhook.username.help'\n                                            defaultMessage='Choose the username this integration will post as. Usernames can be up to 22 characters, and may contain lowercase letters, numbers and the symbols \"-\", \"_\", and \".\".'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        { this.props.enablePostIconOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='iconURL'\n                                >\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.icon_url'\n                                        defaultMessage='Profile Picture'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='iconURL'\n                                        type='text'\n                                        maxLength='1024'\n                                        className='form-control'\n                                        value={this.state.iconURL}\n                                        onChange={this.updateIconURL}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_incoming_webhook.icon_url.help'\n                                            defaultMessage='Choose the profile picture this integration will use when posting. Enter the URL of a .png or .jpg file at least 128 pixels by 128 pixels.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-sm'\n                                to={`/${this.props.team.name}/integrations/incoming_webhooks`}\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                onClick={this.handleSubmit}\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport ChannelStore from 'stores/channel_store.jsx';\nimport {sortChannelsByDisplayName} from 'utils/channel_utils.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class ChannelSelect extends React.Component {\n    static get propTypes() {\n        return {\n            onChange: PropTypes.func,\n            value: PropTypes.string,\n            selectOpen: PropTypes.bool.isRequired,\n            selectPrivate: PropTypes.bool.isRequired,\n            selectDm: PropTypes.bool.isRequired,\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            selectOpen: false,\n            selectPrivate: false,\n            selectDm: false,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleChannelChange = this.handleChannelChange.bind(this);\n        this.filterChannels = this.filterChannels.bind(this);\n\n        this.state = {\n            channels: ChannelStore.getAll().filter(this.filterChannels).sort(sortChannelsByDisplayName),\n        };\n    }\n\n    componentDidMount() {\n        ChannelStore.addChangeListener(this.handleChannelChange);\n    }\n\n    componentWillUnmount() {\n        ChannelStore.removeChangeListener(this.handleChannelChange);\n    }\n\n    handleChannelChange() {\n        this.setState({\n            channels: ChannelStore.getAll().\n                filter(this.filterChannels).sort(sortChannelsByDisplayName),\n        });\n    }\n\n    filterChannels(channel) {\n        if (channel.display_name) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const options = [\n            <option\n                key=''\n                value=''\n            >\n                {Utils.localizeMessage('channel_select.placeholder', '--- Select a channel ---')}\n            </option>,\n        ];\n\n        this.state.channels.forEach((channel) => {\n            if (channel.type === Constants.OPEN_CHANNEL && this.props.selectOpen) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channel.display_name}\n                    </option>\n                );\n            } else if (channel.type === Constants.PRIVATE_CHANNEL && this.props.selectPrivate) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channel.display_name}\n                    </option>\n                );\n            } else if (channel.type === Constants.DM_CHANNEL && this.props.selectDm) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channel.display_name}\n                    </option>\n                );\n            }\n        });\n\n        return (\n            <select\n                className='form-control'\n                value={this.props.value}\n                onChange={this.props.onChange}\n            >\n                {options}\n            </select>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport TeamStore from 'stores/team_store.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport ChannelSelect from 'components/channel_select.jsx';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\n\nexport default class AbstractOutgoingWebhook extends React.Component {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * The header text to render, has id and defaultMessage\n         */\n        header: PropTypes.object.isRequired,\n\n        /**\n         * The footer text to render, has id and defaultMessage\n         */\n        footer: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n         * The server error text after a failed action\n         */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n         * The hook used to set the initial state\n         */\n        initialHook: PropTypes.object,\n\n        /**\n         * The async function to run when the action button is pressed\n         */\n        action: PropTypes.func.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post username.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post icon.\n         */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromHook(this.props.initialHook || {});\n    }\n\n    getStateFromHook = (hook) => {\n        let triggerWords = '';\n        if (hook.trigger_words) {\n            let i = 0;\n            for (i = 0; i < hook.trigger_words.length; i++) {\n                triggerWords += hook.trigger_words[i] + '\\n';\n            }\n        }\n\n        let callbackUrls = '';\n        if (hook.callback_urls) {\n            let i = 0;\n            for (i = 0; i < hook.callback_urls.length; i++) {\n                callbackUrls += hook.callback_urls[i] + '\\n';\n            }\n        }\n\n        return {\n            displayName: hook.display_name || '',\n            description: hook.description || '',\n            contentType: hook.content_type || 'application/x-www-form-urlencoded',\n            channelId: hook.channel_id || '',\n            triggerWords,\n            triggerWhen: hook.trigger_when || 0,\n            callbackUrls,\n            saving: false,\n            clientError: null,\n            username: hook.username || '',\n            iconURL: hook.icon_url || '',\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        const triggerWords = [];\n        if (this.state.triggerWords) {\n            for (let triggerWord of this.state.triggerWords.split('\\n')) {\n                triggerWord = triggerWord.trim();\n\n                if (triggerWord.length > 0) {\n                    triggerWords.push(triggerWord);\n                }\n            }\n        }\n\n        if (!this.state.channelId && triggerWords.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_outgoing_webhook.triggerWordsOrChannelRequired'\n                        defaultMessage='A valid channel or a list of trigger words is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const callbackUrls = [];\n        for (let callbackUrl of this.state.callbackUrls.split('\\n')) {\n            callbackUrl = callbackUrl.trim();\n\n            if (callbackUrl.length > 0) {\n                callbackUrls.push(callbackUrl);\n            }\n        }\n\n        if (callbackUrls.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_outgoing_webhook.callbackUrlsRequired'\n                        defaultMessage='One or more callback URLs are required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const hook = {\n            team_id: TeamStore.getCurrentId(),\n            channel_id: this.state.channelId,\n            trigger_words: triggerWords,\n            trigger_when: parseInt(this.state.triggerWhen, 10),\n            callback_urls: callbackUrls,\n            display_name: this.state.displayName,\n            content_type: this.state.contentType,\n            description: this.state.description,\n            username: this.state.username,\n            icon_url: this.state.iconURL,\n        };\n\n        this.props.action(hook).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateContentType = (e) => {\n        this.setState({\n            contentType: e.target.value,\n        });\n    }\n\n    updateChannelId = (e) => {\n        this.setState({\n            channelId: e.target.value,\n        });\n    }\n\n    updateTriggerWords = (e) => {\n        this.setState({\n            triggerWords: e.target.value,\n        });\n    }\n\n    updateTriggerWhen = (e) => {\n        this.setState({\n            triggerWhen: e.target.value,\n        });\n    }\n\n    updateCallbackUrls = (e) => {\n        this.setState({\n            callbackUrls: e.target.value,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconURL = (e) => {\n        this.setState({\n            iconURL: e.target.value,\n        });\n    }\n\n    render() {\n        const contentTypeOption1 = 'application/x-www-form-urlencoded';\n        const contentTypeOption2 = 'application/json';\n\n        var headerToRender = this.props.header;\n        var footerToRender = this.props.footer;\n        var renderExtra = this.props.renderExtra;\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/outgoing_webhooks`}>\n                        <FormattedMessage\n                            id='installed_outgoing_webhooks.header'\n                            defaultMessage='Outgoing Webhooks'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.displayName.help'\n                                        defaultMessage='Choose a title to be displayed on the webhook settings page. Maximum 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='500'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.description.help'\n                                        defaultMessage='Description for your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='contentType'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.content_Type'\n                                    defaultMessage='Content Type'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    className='form-control'\n                                    value={this.state.contentType}\n                                    onChange={this.updateContentType}\n                                >\n                                    <option\n                                        value={contentTypeOption1}\n                                    >\n                                        {contentTypeOption1}\n                                    </option>\n                                    <option\n                                        value={contentTypeOption2}\n                                    >\n                                        {contentTypeOption2}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help1'\n                                        defaultMessage='Choose the content type by which the request will be sent.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help2'\n                                        defaultMessage='If application/x-www-form-urlencoded is chosen, the server will encode the parameters in a URL format in the request body.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help3'\n                                        defaultMessage='If application/json is chosen, the server will format the request body as JSON.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelId'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.channel'\n                                    defaultMessage='Channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <ChannelSelect\n                                    id='channelId'\n                                    value={this.state.channelId}\n                                    onChange={this.updateChannelId}\n                                    selectOpen={true}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.channel.help'\n                                        defaultMessage='Public channel that delivers payload to webhook. Optional if at least one Trigger Word is specified.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='triggerWords'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.triggerWords'\n                                    defaultMessage='Trigger Words (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='triggerWords'\n                                    rows='3'\n                                    maxLength='1000'\n                                    className='form-control'\n                                    value={this.state.triggerWords}\n                                    onChange={this.updateTriggerWords}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.triggerWords.help'\n                                        defaultMessage='Messages that start with one of the specified words will trigger the outgoing webhook. Optional if Channel is selected.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='triggerWords'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.triggerWordsTriggerWhen'\n                                    defaultMessage='Trigger When'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    className='form-control'\n                                    value={this.state.triggerWhen}\n                                    onChange={this.updateTriggerWhen}\n                                >\n                                    <option\n                                        value='0'\n                                    >\n                                        {localizeMessage('add_outgoing_webhook.triggerWordsTriggerWhenFullWord', 'First word matches a trigger word exactly')}\n                                    </option>\n                                    <option\n                                        value='1'\n                                    >\n                                        {localizeMessage('add_outgoing_webhook.triggerWordsTriggerWhenStartsWith', 'First word starts with a trigger word')}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.triggerWordsTriggerWhen.help'\n                                        defaultMessage='Choose when to trigger the outgoing webhook; if the first word of a message matches a Trigger Word exactly, or if it starts with a Trigger Word.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='callbackUrls'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.callbackUrls'\n                                    defaultMessage='Callback URLs (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='callbackUrls'\n                                    rows='3'\n                                    maxLength='1000'\n                                    className='form-control'\n                                    value={this.state.callbackUrls}\n                                    onChange={this.updateCallbackUrls}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.callbackUrls.help'\n                                        defaultMessage='The URL that messages will be sent to. If the URL is private, add it as a {link}.'\n                                        values={{\n                                            link: (\n                                                <a\n                                                    href='https://about.mattermost.com/default-allow-internal-connections-settings-documentation/'\n                                                    target='_blank'\n                                                    rel='noopener noreferrer'\n                                                >\n                                                    <FormattedMessage\n                                                        id='add_outgoing_webhook.callbackUrls.helpLinkText'\n                                                        defaultMessage='trusted internal connection'\n                                                    />\n                                                </a>\n                                            ),\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {this.props.enablePostUsernameOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='username'\n                                >\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.username'\n                                        defaultMessage='Username'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='username'\n                                        type='text'\n                                        maxLength='22'\n                                        className='form-control'\n                                        value={this.state.username}\n                                        onChange={this.updateUsername}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_outgoing_webhook.username.help'\n                                            defaultMessage='Choose the username this integration will post as. Usernames can be up to 22 characters, and may contain lowercase letters, numbers and the symbols \"-\", \"_\", and \".\".'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        {this.props.enablePostIconOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='iconURL'\n                                >\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.icon_url'\n                                        defaultMessage='Profile Picture'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='iconURL'\n                                        type='text'\n                                        maxLength='1024'\n                                        className='form-control'\n                                        value={this.state.iconURL}\n                                        onChange={this.updateIconURL}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_outgoing_webhook.icon_url.help'\n                                            defaultMessage='Choose the profile picture this integration will use when posting. Enter the URL of a .png or .jpg file at least 128 pixels by 128 pixels.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-sm'\n                                to={`/${this.props.team.name}/integrations/outgoing_webhooks`}\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                onClick={this.handleSubmit}\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\n\nexport default class AbstractOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The OAuthApp used to set the initial state\n        */\n        initialApp: PropTypes.object,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.image = new Image();\n        this.image.onload = this.imageLoaded;\n        this.state = this.getStateFromApp(this.props.initialApp || {});\n    }\n\n    getStateFromApp = (app) => {\n        return {\n            name: app.name || '',\n            description: app.description || '',\n            homepage: app.homepage || '',\n            icon_url: app.icon_url || '',\n            callbackUrls: app.callback_urls ? app.callback_urls.join('\\n') : '',\n            is_trusted: app.is_trusted || false,\n            has_icon: Boolean(app.icon_url),\n            saving: false,\n            clientError: null,\n        };\n    }\n\n    imageLoaded = () => {\n        this.setState({\n            has_icon: true,\n            icon_url: this.refs.icon_url.value,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        if (!this.state.name) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.nameRequired'\n                        defaultMessage='Name for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!this.state.description) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.descriptionRequired'\n                        defaultMessage='Description for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!this.state.homepage) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.homepageRequired'\n                        defaultMessage='Homepage for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const callbackUrls = [];\n        for (let callbackUrl of this.state.callbackUrls.split('\\n')) {\n            callbackUrl = callbackUrl.trim();\n\n            if (callbackUrl.length > 0) {\n                callbackUrls.push(callbackUrl);\n            }\n        }\n\n        if (callbackUrls.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.callbackUrlsRequired'\n                        defaultMessage='One or more callback URLs are required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const app = {\n            name: this.state.name,\n            callback_urls: callbackUrls,\n            homepage: this.state.homepage,\n            description: this.state.description,\n            is_trusted: this.state.is_trusted,\n            icon_url: this.state.icon_url,\n        };\n\n        this.props.action(app).then(() => this.setState({saving: false}));\n    }\n\n    updateName = (e) => {\n        this.setState({\n            name: e.target.value,\n        });\n    }\n\n    updateTrusted = (e) => {\n        this.setState({\n            is_trusted: e.target.value === 'true',\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateHomepage = (e) => {\n        this.setState({\n            homepage: e.target.value,\n        });\n    }\n\n    updateIconUrl = (e) => {\n        this.setState({\n            has_icon: false,\n            icon_url: e.target.value,\n        });\n        this.image.src = e.target.value;\n    }\n\n    updateCallbackUrls = (e) => {\n        this.setState({\n            callbackUrls: e.target.value,\n        });\n    }\n\n    render() {\n        const headerToRender = this.props.header;\n        const footerToRender = this.props.footer;\n        const renderExtra = this.props.renderExtra;\n\n        let icon;\n        if (this.state.has_icon) {\n            icon = (\n                <div className='integration__icon'>\n                    <img src={this.state.icon_url}/>\n                </div>\n            );\n        }\n\n        const trusted = (\n            <SystemPermissionGate permissions={[Permissions.MANAGE_SYSTEM]}>\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='is_trusted'\n                    >\n                        <FormattedMessage\n                            id='installed_oauth_apps.trusted'\n                            defaultMessage='Is Trusted'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <label className='radio-inline'>\n                            <input\n                                type='radio'\n                                value='true'\n                                name='is_trusted'\n                                checked={this.state.is_trusted}\n                                onChange={this.updateTrusted}\n                            />\n                            <FormattedMessage\n                                id='installed_oauth_apps.trusted.yes'\n                                defaultMessage='Yes'\n                            />\n                        </label>\n                        <label className='radio-inline'>\n                            <input\n                                type='radio'\n                                value='false'\n                                name='is_trusted'\n                                checked={!this.state.is_trusted}\n                                onChange={this.updateTrusted}\n                            />\n                            <FormattedMessage\n                                id='installed_oauth_apps.trusted.no'\n                                defaultMessage='No'\n                            />\n                        </label>\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_oauth_app.trusted.help'\n                                defaultMessage=\"When true, the OAuth 2.0 application is considered trusted by the Mattermost server and doesn't require the user to accept authorization. When false, an additional window will appear, asking the user to accept or deny the authorization.\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </SystemPermissionGate>\n        );\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/oauth2-apps`}>\n                        <FormattedMessage\n                            id='installed_oauth_apps.header'\n                            defaultMessage='Installed OAuth2 Apps'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    {icon}\n                    <form className='form-horizontal'>\n                        {trusted}\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='name'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.name'\n                                    defaultMessage='Display Name'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='name'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.name}\n                                    onChange={this.updateName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.name.help'\n                                        defaultMessage='Display name for your OAuth 2.0 application made of up to 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='512'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.description.help'\n                                        defaultMessage='Description for your OAuth 2.0 application.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='homepage'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.homepage'\n                                    defaultMessage='Homepage'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='homepage'\n                                    type='url'\n                                    maxLength='256'\n                                    className='form-control'\n                                    value={this.state.homepage}\n                                    onChange={this.updateHomepage}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.homepage.help'\n                                        defaultMessage='The URL for the homepage of the OAuth 2.0 application. Make sure you use HTTP or HTTPS in your URL depending on your server configuration.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='icon_url'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.iconUrl'\n                                    defaultMessage='Icon URL'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='icon_url'\n                                    ref='icon_url'\n                                    type='url'\n                                    maxLength='512'\n                                    className='form-control'\n                                    value={this.state.icon_url}\n                                    onChange={this.updateIconUrl}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.icon.help'\n                                        defaultMessage='The URL for the homepage of the OAuth 2.0 application. Make sure you use HTTP or HTTPS in your URL depending on your server configuration.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='callbackUrls'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.callbackUrls'\n                                    defaultMessage='Callback URLs (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='callbackUrls'\n                                    rows='3'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.callbackUrls}\n                                    onChange={this.updateCallbackUrls}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.callbackUrls.help'\n                                        defaultMessage='The redirect URIs to which the service will redirect users after accepting or denying authorization of your application, and which will handle authorization codes or access tokens. Must be a valid URL and start with http:// or https://.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-sm'\n                                to={`/${this.props.team.name}/integrations/oauth2-apps`}\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                onClick={this.handleSubmit}\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\n\nconst REQUEST_POST = 'P';\nconst REQUEST_GET = 'G';\n\nexport default class AbstractCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The Command used to set the initial state\n        */\n        initialCommand: PropTypes.object,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromCommand(this.props.initialCommand || {});\n    }\n\n    getStateFromCommand = (command) => {\n        return {\n            displayName: command.display_name || '',\n            description: command.description || '',\n            trigger: command.trigger || '',\n            url: command.url || '',\n            method: command.method || REQUEST_POST,\n            username: command.username || '',\n            iconUrl: command.icon_url || '',\n            autocomplete: command.auto_complete || false,\n            autocompleteHint: command.auto_complete_hint || '',\n            autocompleteDescription: command.auto_complete_desc || '',\n            saving: false,\n            clientError: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        let triggerWord = this.state.trigger.trim().toLowerCase();\n        if (triggerWord.indexOf('/') === 0) {\n            triggerWord = triggerWord.substr(1);\n        }\n\n        const command = {\n            display_name: this.state.displayName,\n            description: this.state.description,\n            trigger: triggerWord,\n            url: this.state.url.trim(),\n            method: this.state.method,\n            username: this.state.username,\n            icon_url: this.state.iconUrl,\n            auto_complete: this.state.autocomplete,\n            team_id: this.props.team.id,\n        };\n\n        if (command.auto_complete) {\n            command.auto_complete_desc = this.state.autocompleteDescription;\n            command.auto_complete_hint = this.state.autocompleteHint;\n        }\n\n        if (!command.trigger) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerRequired'\n                        defaultMessage='A trigger word is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (command.trigger.indexOf('/') === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidSlash'\n                        defaultMessage='A trigger word cannot begin with a /'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (command.trigger.indexOf(' ') !== -1) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidSpace'\n                        defaultMessage='A trigger word must not contain spaces'\n                    />\n                ),\n            });\n            return;\n        }\n\n        if (command.trigger.length < Constants.MIN_TRIGGER_LENGTH ||\n            command.trigger.length > Constants.MAX_TRIGGER_LENGTH) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidLength'\n                        defaultMessage='A trigger word must contain between {min} and {max} characters'\n                        values={{\n                            min: Constants.MIN_TRIGGER_LENGTH,\n                            max: Constants.MAX_TRIGGER_LENGTH,\n                        }}\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!command.url) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.urlRequired'\n                        defaultMessage='A request URL is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        this.props.action(command).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateTrigger = (e) => {\n        this.setState({\n            trigger: e.target.value,\n        });\n    }\n\n    updateUrl = (e) => {\n        this.setState({\n            url: e.target.value,\n        });\n    }\n\n    updateMethod = (e) => {\n        this.setState({\n            method: e.target.value,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconUrl = (e) => {\n        this.setState({\n            iconUrl: e.target.value,\n        });\n    }\n\n    updateAutocomplete = (e) => {\n        this.setState({\n            autocomplete: e.target.checked,\n        });\n    }\n\n    updateAutocompleteHint = (e) => {\n        this.setState({\n            autocompleteHint: e.target.value,\n        });\n    }\n\n    updateAutocompleteDescription = (e) => {\n        this.setState({\n            autocompleteDescription: e.target.value,\n        });\n    }\n\n    render() {\n        let autocompleteHint = null;\n        let autocompleteDescription = null;\n\n        if (this.state.autocomplete) {\n            autocompleteHint = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='autocompleteHint'\n                    >\n                        <FormattedMessage\n                            id='add_command.autocompleteHint'\n                            defaultMessage='Autocomplete Hint'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <input\n                            id='autocompleteHint'\n                            type='text'\n                            maxLength='1024'\n                            className='form-control'\n                            value={this.state.autocompleteHint}\n                            onChange={this.updateAutocompleteHint}\n                            placeholder={Utils.localizeMessage('add_command.autocompleteHint.placeholder', 'Example: [Patient Name]')}\n                        />\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_command.autocompleteHint.help'\n                                defaultMessage='(Optional) Arguments associated with your slash command, displayed as help in the autocomplete list.'\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n\n            autocompleteDescription = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='autocompleteDescription'\n                    >\n                        <FormattedMessage\n                            id='add_command.autocompleteDescription'\n                            defaultMessage='Autocomplete Description'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <input\n                            id='description'\n                            type='text'\n                            maxLength='128'\n                            className='form-control'\n                            value={this.state.autocompleteDescription}\n                            onChange={this.updateAutocompleteDescription}\n                            placeholder={Utils.localizeMessage('add_command.autocompleteDescription.placeholder', 'Example: \"Returns search results for patient records\"')}\n                        />\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_command.autocompleteDescription.help'\n                                defaultMessage='(Optional) Short description of slash command for the autocomplete list.'\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/integrations/commands'}>\n                        <FormattedMessage\n                            id='installed_command.header'\n                            defaultMessage='Slash Commands'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={this.props.header.id}\n                        defaultMessage={this.props.header.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_command.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.displayName.help'\n                                        defaultMessage='Choose a title to be displayed on the slash command settings page. Maximum 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_command.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='128'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.description.help'\n                                        defaultMessage='Description for your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='trigger'\n                            >\n                                <FormattedMessage\n                                    id='add_command.trigger'\n                                    defaultMessage='Command Trigger Word'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='trigger'\n                                    type='text'\n                                    maxLength={Constants.MAX_TRIGGER_LENGTH}\n                                    className='form-control'\n                                    value={this.state.trigger}\n                                    onChange={this.updateTrigger}\n                                    placeholder={Utils.localizeMessage('add_command.trigger.placeholder', 'Command trigger e.g. \"hello\" not including the slash')}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.help'\n                                        defaultMessage='Trigger word must be unique, and cannot begin with a slash or contain any spaces.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.helpExamples'\n                                        defaultMessage='Examples: client, employee, patient, weather'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.helpReserved'\n                                        defaultMessage='Reserved: {link}'\n                                        values={{\n                                            link: (\n                                                <a\n                                                    href='https://docs.mattermost.com/help/messaging/executing-commands.html#built-in-commands'\n                                                    target='_blank'\n                                                    rel='noopener noreferrer'\n                                                >\n                                                    <FormattedMessage\n                                                        id='add_command.trigger.helpReservedLinkText'\n                                                        defaultMessage='see list of built-in slash commands'\n                                                    />\n                                                </a>\n                                            ),\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='url'\n                            >\n                                <FormattedMessage\n                                    id='add_command.url'\n                                    defaultMessage='Request URL'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='url'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.url}\n                                    onChange={this.updateUrl}\n                                    placeholder={Utils.localizeMessage('add_command.url.placeholder', 'Must start with http:// or https://')}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.url.help'\n                                        defaultMessage='The callback URL to receive the HTTP POST or GET event request when the slash command is run.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='method'\n                            >\n                                <FormattedMessage\n                                    id='add_command.method'\n                                    defaultMessage='Request Method'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    id='method'\n                                    className='form-control'\n                                    value={this.state.method}\n                                    onChange={this.updateMethod}\n                                >\n                                    <option value={REQUEST_POST}>\n                                        {Utils.localizeMessage('add_command.method.post', 'POST')}\n                                    </option>\n                                    <option value={REQUEST_GET}>\n                                        {Utils.localizeMessage('add_command.method.get', 'GET')}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.method.help'\n                                        defaultMessage='The type of command request issued to the Request URL.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='username'\n                            >\n                                <FormattedMessage\n                                    id='add_command.username'\n                                    defaultMessage='Response Username'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='username'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.username}\n                                    onChange={this.updateUsername}\n                                    placeholder={Utils.localizeMessage('add_command.username.placeholder', 'Username')}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.username.help'\n                                        defaultMessage='(Optional) Choose a username override for responses for this slash command. Usernames can consist of up to 22 characters consisting of lowercase letters, numbers and they symbols \"-\", \"_\", and \".\" .'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='iconUrl'\n                            >\n                                <FormattedMessage\n                                    id='add_command.iconUrl'\n                                    defaultMessage='Response Icon'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='iconUrl'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.iconUrl}\n                                    onChange={this.updateIconUrl}\n                                    placeholder={Utils.localizeMessage('add_command.iconUrl.placeholder', 'https://www.example.com/myicon.png')}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.iconUrl.help'\n                                        defaultMessage='(Optional) Choose a profile picture override for the post responses to this slash command. Enter the URL of a .png or .jpg file at least 128 pixels by 128 pixels.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='autocomplete'\n                            >\n                                <FormattedMessage\n                                    id='add_command.autocomplete'\n                                    defaultMessage='Autocomplete'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <input\n                                    id='autocomplete'\n                                    type='checkbox'\n                                    checked={this.state.autocomplete}\n                                    onChange={this.updateAutocomplete}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.autocomplete.help'\n                                        defaultMessage='(Optional) Show slash command in autocomplete list.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {autocompleteHint}\n                        {autocompleteDescription}\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-sm'\n                                to={'/' + this.props.team.name + '/integrations/commands'}\n                            >\n                                <FormattedMessage\n                                    id='add_command.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                onClick={this.handleSubmit}\n                            >\n                                <FormattedMessage\n                                    id={this.props.footer.id}\n                                    defaultMessage={this.props.footer.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {this.props.renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getCommands, getOAuthApps, getIncomingHooks, getOutgoingHooks} from 'mattermost-redux/selectors/entities/integrations';\n\nimport ConfirmIntegration from './confirm_integration.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        commands: getCommands(state),\n        oauthApps: getOAuthApps(state),\n        incomingHooks: getIncomingHooks(state),\n        outgoingHooks: getOutgoingHooks(state),\n    };\n}\n\nexport default connect(mapStateToProps)(ConfirmIntegration);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\n\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {getMyTeams, getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {haveITeamPermission, haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport BackstageController from './backstage_controller.jsx';\n\nfunction mapStateToProps(state) {\n    const user = getCurrentUser(state);\n    const team = getCurrentTeam(state);\n\n    const config = getConfig(state);\n\n    const siteName = config.SiteName;\n    const enableCustomEmoji = config.EnableCustomEmoji === 'true';\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enableCommands = config.EnableCommands === 'true';\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    let canCreateCustomEmoji = haveISystemPermission(state, {permission: Permissions.MANAGE_EMOJIS});\n    if (!canCreateCustomEmoji) {\n        for (const t of getMyTeams(state)) {\n            if (haveITeamPermission(state, {team: t.id, permission: Permissions.MANAGE_EMOJIS})) {\n                canCreateCustomEmoji = true;\n                break;\n            }\n        }\n    }\n\n    return {\n        user,\n        team,\n        siteName,\n        enableCustomEmoji,\n        enableIncomingWebhooks,\n        enableOutgoingWebhooks,\n        enableCommands,\n        enableOAuthServiceProvider,\n        canCreateCustomEmoji,\n    };\n}\n\nexport default withRouter(connect(mapStateToProps)(BackstageController));\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Route, Switch} from 'react-router-dom';\n\nimport Pluggable from 'plugins/pluggable';\nimport AnnouncementBar from 'components/announcement_bar';\nimport SystemNotice from 'components/system_notice';\nimport Integrations from 'components/integrations';\nimport Emoji from 'components/emoji';\nimport AddEmoji from 'components/emoji/add_emoji';\nimport InstalledIncomingWebhooks from 'components/integrations/installed_incoming_webhooks';\nimport AddIncomingWehook from 'components/integrations/add_incoming_webhook';\nimport EditIncomingWebhook from 'components/integrations/edit_incoming_webhook';\nimport InstalledOutgoingWebhooks from 'components/integrations/installed_outgoing_webhooks';\nimport AddOutgoingWebhook from 'components/integrations/add_outgoing_webhook';\nimport EditOutgoingWebhook from 'components/integrations/edit_outgoing_webhook';\nimport InstalledOauthApps from 'components/integrations/installed_oauth_apps';\nimport AddOauthApp from 'components/integrations/add_oauth_app';\nimport EditOauthApp from 'components/integrations/edit_oauth_app';\nimport CommandsContainer from 'components/integrations/commands_container';\nimport ConfirmIntegration from 'components/integrations/confirm_integration';\n\nimport BackstageSidebar from './components/backstage_sidebar.jsx';\nimport BackstageNavbar from './components/backstage_navbar';\n\nconst BackstageRoute = ({component: Component, extraProps, ...rest}) => ( //eslint-disable-line react/prop-types\n    <Route\n        {...rest}\n        render={(props) => (\n            <Component\n                {...extraProps}\n                {...props}\n            />\n        )}\n    />\n);\n\nexport default class BackstageController extends React.Component {\n    static propTypes = {\n\n        /**\n         * Current user.\n         */\n        user: PropTypes.object,\n\n        /**\n         * Current team.\n         */\n        team: PropTypes.object,\n\n        /**\n         * Object from react-router\n         */\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n\n        siteName: PropTypes.string,\n        enableCustomEmoji: PropTypes.bool.isRequired,\n        enableIncomingWebhooks: PropTypes.bool.isRequired,\n        enableOutgoingWebhooks: PropTypes.bool.isRequired,\n        enableCommands: PropTypes.bool.isRequired,\n        enableOAuthServiceProvider: PropTypes.bool.isRequired,\n        canCreateCustomEmoji: PropTypes.bool.isRequired,\n    }\n\n    scrollToTop = () => {\n        if (this.listRef) {\n            this.listRef.scrollTop = 0;\n        }\n    }\n\n    setListRef = (ref) => {\n        this.listRef = ref;\n    }\n\n    render() {\n        if (this.props.team == null || this.props.user == null) {\n            return <div/>;\n        }\n        const extraProps = {\n            team: this.props.team,\n            user: this.props.user,\n            scrollToTop: this.scrollToTop,\n        };\n        return (\n            <div className='backstage'>\n                <AnnouncementBar/>\n                <SystemNotice/>\n                <BackstageNavbar\n                    team={this.props.team}\n                    siteName={this.props.siteName}\n                />\n                <Pluggable pluggableName='Root'/>\n                <div\n                    className='backstage-body'\n                    ref={this.setListRef}\n                >\n                    <BackstageSidebar\n                        team={this.props.team}\n                        user={this.props.user}\n                        enableCustomEmoji={this.props.enableCustomEmoji}\n                        enableIncomingWebhooks={this.props.enableIncomingWebhooks}\n                        enableOutgoingWebhooks={this.props.enableOutgoingWebhooks}\n                        enableCommands={this.props.enableCommands}\n                        enableOAuthServiceProvider={this.props.enableOAuthServiceProvider}\n                        canCreateCustomEmoji={this.props.canCreateCustomEmoji}\n                    />\n                    <Switch>\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={'/:team/integrations'}\n                            component={Integrations}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/incoming_webhooks`}\n                            component={InstalledIncomingWebhooks}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/incoming_webhooks/add`}\n                            component={AddIncomingWehook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/incoming_webhooks/edit`}\n                            component={EditIncomingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/outgoing_webhooks`}\n                            component={InstalledOutgoingWebhooks}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/outgoing_webhooks/add`}\n                            component={AddOutgoingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/outgoing_webhooks/edit`}\n                            component={EditOutgoingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/commands`}\n                            component={CommandsContainer}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/oauth2-apps`}\n                            component={InstalledOauthApps}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/oauth2-apps/add`}\n                            component={AddOauthApp}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/oauth2-apps/edit`}\n                            component={EditOauthApp}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/confirm`}\n                            component={ConfirmIntegration}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={'/:team/emoji'}\n                            component={Emoji}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/add`}\n                            component={AddEmoji}\n                        />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport Integrations from './integrations.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const siteName = config.SiteName;\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enableCommands = config.EnableCommands === 'true';\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n    const enableOnlyAdminIntegrations = config.EnableOnlyAdminIntegrations === 'true';\n\n    return {\n        siteName,\n        enableIncomingWebhooks,\n        enableOutgoingWebhooks,\n        enableCommands,\n        enableOAuthServiceProvider,\n        enableOnlyAdminIntegrations,\n    };\n}\n\nexport default connect(mapStateToProps)(Integrations);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport * as Utils from 'utils/utils.jsx';\nimport IncomingWebhookIcon from 'images/incoming_webhook.jpg';\nimport OAuthIcon from 'images/oauth_icon.png';\nimport OutgoingWebhookIcon from 'images/outgoing_webhook.jpg';\nimport SlashCommandIcon from 'images/slash_command_icon.jpg';\n\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nimport IntegrationOption from './integration_option.jsx';\n\nexport default class Integrations extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object,\n            user: PropTypes.object,\n            siteName: PropTypes.string,\n            enableIncomingWebhooks: PropTypes.bool,\n            enableOutgoingWebhooks: PropTypes.bool,\n            enableCommands: PropTypes.bool,\n            enableOAuthServiceProvider: PropTypes.bool,\n            enableOnlyAdminIntegrations: PropTypes.bool,\n        };\n    }\n\n    componentDidMount() {\n        this.updateTitle();\n    }\n\n    updateTitle = () => {\n        const currentSiteName = this.props.siteName || '';\n        document.title = Utils.localizeMessage('admin.sidebar.integrations', 'Integrations') + ' - ' + this.props.team.display_name + ' ' + currentSiteName;\n    }\n\n    render() {\n        const options = [];\n\n        if (this.props.enableIncomingWebhooks) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_WEBHOOKS]}\n                    key='incomingWebhookPermission'\n                >\n                    <IntegrationOption\n                        key='incomingWebhook'\n                        image={IncomingWebhookIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.incomingWebhook.title'\n                                defaultMessage='Incoming Webhook'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.incomingWebhook.description'\n                                defaultMessage='Incoming webhooks allow external integrations to send messages'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/incoming_webhooks'}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        if (this.props.enableOutgoingWebhooks) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_WEBHOOKS]}\n                    key='outgoingWebhookPermission'\n                >\n                    <IntegrationOption\n                        key='outgoingWebhook'\n                        image={OutgoingWebhookIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.outgoingWebhook.title'\n                                defaultMessage='Outgoing Webhook'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.outgoingWebhook.description'\n                                defaultMessage='Outgoing webhooks allow external integrations to receive and respond to messages'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/outgoing_webhooks'}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        if (this.props.enableCommands) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_SLASH_COMMANDS]}\n                    key='commandPermission'\n                >\n                    <IntegrationOption\n                        key='command'\n                        image={SlashCommandIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.command.title'\n                                defaultMessage='Slash Command'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.command.description'\n                                defaultMessage='Slash commands send events to an external integration'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/commands'}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        if (this.props.enableOAuthServiceProvider) {\n            options.push(\n                <SystemPermissionGate\n                    permissions={[Permissions.MANAGE_OAUTH]}\n                    key='oauth2AppsPermission'\n                >\n                    <IntegrationOption\n                        key='oauth2Apps'\n                        image={OAuthIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.oauthApps.title'\n                                defaultMessage='OAuth 2.0 Applications'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.oauthApps.description'\n                                defaultMessage='Auth 2.0 allows external applications to make authorized requests to the Mattermost API.'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/oauth2-apps'}\n                    />\n                </SystemPermissionGate>\n            );\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <div className='backstage-header'>\n                    <h1>\n                        <FormattedMessage\n                            id='integrations.header'\n                            defaultMessage='Integrations'\n                        />\n                    </h1>\n                </div>\n                <div className='backstage-list__help'>\n                    <FormattedMessage\n                        id='integrations.help'\n                        defaultMessage='Visit the {appDirectory} to find self-hosted, third-party apps and integrations for Mattermost.'\n                        values={{\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='integrations.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                </div>\n                <div>\n                    {options}\n                </div>\n            </div>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/fd69f7891f867c2aa14011da92b728ac.jpg\";","module.exports = __webpack_public_path__ + \"files/ce81936d829c1ac530749ba2fe913de0.png\";","module.exports = __webpack_public_path__ + \"files/2aa264fb1956b8be41f2047d428a1a1e.jpg\";","module.exports = __webpack_public_path__ + \"files/d184fcdb23c1e24bfd7132950ceb4f68.jpg\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport default class IntegrationOption extends React.Component {\n    static get propTypes() {\n        return {\n            image: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            description: PropTypes.node.isRequired,\n            link: PropTypes.string.isRequired,\n        };\n    }\n\n    render() {\n        const {image, title, description, link} = this.props;\n\n        return (\n            <Link\n                to={link}\n                className='integration-option'\n            >\n                <img\n                    className='integration-option__image'\n                    src={image}\n                />\n                <div className='integration-option__title'>\n                    {title}\n                </div>\n                <div className='integration-option__description'>\n                    {description}\n                </div>\n            </Link>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {loadRolesIfNeeded} from 'mattermost-redux/actions/roles';\n\nimport EmojiPage from './emoji_page.jsx';\n\nfunction mapStateToProps(state) {\n    const team = getCurrentTeam(state) || {};\n\n    return {\n        teamId: team.id,\n        teamName: team.name,\n        teamDisplayName: team.display_name,\n        siteName: state.entities.general.config.SiteName,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadRolesIfNeeded,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiPage);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport * as Utils from 'utils/utils.jsx';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nimport EmojiList from './emoji_list';\n\nexport default class EmojiPage extends React.Component {\n    static propTypes = {\n        teamId: PropTypes.string.isRequired,\n        teamName: PropTypes.string.isRequired,\n        teamDisplayName: PropTypes.string.isRequired,\n        siteName: PropTypes.string,\n        scrollToTop: PropTypes.func.isRequired,\n        actions: PropTypes.shape({\n            loadRolesIfNeeded: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        teamName: '',\n        teamDisplayName: '',\n        siteName: '',\n    }\n\n    componentDidMount() {\n        this.updateTitle();\n        this.props.actions.loadRolesIfNeeded(['system_admin', 'team_admin', 'system_user', 'team_user']);\n    }\n\n    updateTitle = (props = this.props) => {\n        document.title = Utils.localizeMessage('custom_emoji.header', 'Custom Emoji') + ' - ' + props.teamDisplayName + ' ' + props.siteName;\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.siteName !== nextProps.siteName) {\n            this.updateTitle(nextProps);\n        }\n    }\n\n    render() {\n        return (\n            <div className='backstage-content emoji-list'>\n                <div className='backstage-header'>\n                    <h1>\n                        <FormattedMessage\n                            id='emoji_list.header'\n                            defaultMessage='Custom Emoji'\n                        />\n                    </h1>\n                    <TeamPermissionGate\n                        teamId={this.props.teamId}\n                        permissions={[Permissions.MANAGE_EMOJIS]}\n                    >\n                        <Link\n                            className='add-link'\n                            to={'/' + this.props.teamName + '/emoji/add'}\n                        >\n                            <button\n                                type='button'\n                                className='btn btn-primary'\n                            >\n                                <FormattedMessage\n                                    id='emoji_list.add'\n                                    defaultMessage='Add Custom Emoji'\n                                />\n                            </button>\n                        </Link>\n                    </TeamPermissionGate>\n                    <EmojiList scrollToTop={this.props.scrollToTop}/>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getCustomEmojiIdsSortedByName} from 'mattermost-redux/selectors/entities/emojis';\n\nimport {getCustomEmojis, searchCustomEmojis} from 'mattermost-redux/actions/emojis';\n\nimport EmojiList from './emoji_list.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        emojiIds: getCustomEmojiIdsSortedByName(state) || [],\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getCustomEmojis,\n            searchCustomEmojis,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Emoji} from 'mattermost-redux/constants';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport LoadingScreen from 'components/loading_screen.jsx';\nimport SaveButton from 'components/save_button.jsx';\nimport EmojiListItem from 'components/emoji/emoji_list_item';\n\nconst EMOJI_PER_PAGE = 50;\nconst EMOJI_SEARCH_DELAY_MILLISECONDS = 200;\n\nexport default class EmojiList extends React.Component {\n    static propTypes = {\n\n        /**\n         * Custom emojis on the system.\n         */\n        emojiIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n        /**\n         * Function to scroll list to top.\n         */\n        scrollToTop: PropTypes.func.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * Get pages of custom emojis.\n             */\n            getCustomEmojis: PropTypes.func.isRequired,\n\n            /**\n             * Search custom emojis.\n             */\n            searchCustomEmojis: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.searchTimeout = null;\n\n        this.state = {\n            loading: true,\n            page: 0,\n            nextLoading: false,\n            searchEmojis: null,\n            missingPages: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getCustomEmojis(0, EMOJI_PER_PAGE + 1, Emoji.SORT_BY_NAME, true).then(({data}) => {\n            this.setState({loading: false});\n            if (data && data.length < EMOJI_PER_PAGE) {\n                this.setState({missingPages: false});\n            }\n        });\n    }\n\n    nextPage = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        const next = this.state.page + 1;\n        this.setState({nextLoading: true});\n        this.props.actions.getCustomEmojis(next, EMOJI_PER_PAGE, Emoji.SORT_BY_NAME, true).then(({data}) => {\n            this.setState({page: next, nextLoading: false});\n            if (data && data.length < EMOJI_PER_PAGE) {\n                this.setState({missingPages: false});\n            }\n\n            this.props.scrollToTop();\n        });\n    }\n\n    previousPage = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        this.setState({page: this.state.page - 1, nextLoading: false});\n        this.props.scrollToTop();\n    }\n\n    onSearchChange = (e) => {\n        if (!e || !e.target) {\n            return;\n        }\n\n        const term = e.target.value || '';\n\n        clearTimeout(this.searchTimeout);\n\n        this.searchTimeout = setTimeout(async () => {\n            if (term.trim() === '') {\n                this.setState({searchEmojis: null, page: 0});\n                return;\n            }\n\n            this.setState({loading: true});\n\n            const {data} = await this.props.actions.searchCustomEmojis(term, {}, true);\n\n            if (data) {\n                this.setState({searchEmojis: data.map((em) => em.id), loading: false});\n            } else {\n                this.setState({searchEmojis: [], loading: false});\n            }\n        }, EMOJI_SEARCH_DELAY_MILLISECONDS);\n    }\n\n    deleteFromSearch = (emojiId) => {\n        if (!this.state.searchEmojis) {\n            return;\n        }\n\n        const index = this.state.searchEmojis.indexOf(emojiId);\n\n        if (index < 0) {\n            return;\n        }\n\n        const newSearchEmojis = [...this.state.searchEmojis];\n        newSearchEmojis.splice(index, 1);\n        this.setState({searchEmojis: newSearchEmojis});\n    }\n\n    render() {\n        const searchEmojis = this.state.searchEmojis;\n        const emojis = [];\n        let nextButton;\n        let previousButton;\n\n        if (this.state.loading) {\n            emojis.push(\n                <tr\n                    key='loading'\n                    className='backstage-list__item backstage-list__empty'\n                >\n                    <td colSpan='4'>\n                        <LoadingScreen key='loading'/>\n                    </td>\n                </tr>\n            );\n        } else if (this.props.emojiIds.length === 0 || (searchEmojis && searchEmojis.length === 0)) {\n            emojis.push(\n                <tr\n                    key='empty'\n                    className='backstage-list__item backstage-list__empty'\n                >\n                    <td colSpan='4'>\n                        <FormattedMessage\n                            id='emoji_list.empty'\n                            defaultMessage='No custom emoji found'\n                        />\n                    </td>\n                </tr>\n            );\n        } else if (searchEmojis) {\n            searchEmojis.forEach((emojiId) => {\n                emojis.push(\n                    <EmojiListItem\n                        key={'emoji_search_item' + emojiId}\n                        emojiId={emojiId}\n                        onDelete={this.deleteFromSearch}\n                    />\n                );\n            });\n        } else {\n            const pageStart = this.state.page * EMOJI_PER_PAGE;\n            const pageEnd = pageStart + EMOJI_PER_PAGE;\n            const emojisToDisplay = this.props.emojiIds.slice(pageStart, pageEnd);\n\n            emojisToDisplay.forEach((emojiId) => {\n                emojis.push(\n                    <EmojiListItem\n                        key={'emoji_list_item' + emojiId}\n                        emojiId={emojiId}\n                    />\n                );\n            });\n\n            if (this.state.missingPages) {\n                const buttonContents = (\n                    <span>\n                        <FormattedMessage\n                            id='filtered_user_list.next'\n                            defaultMessage='Next'\n                        />\n                        <i\n                            className='fa fa-chevron-right margin-left'\n                            title={localizeMessage('generic_icons.next', 'Next Icon')}\n                        />\n                    </span>\n                );\n\n                nextButton = (\n                    <SaveButton\n                        btnClass='btn-link'\n                        extraClasses='pull-right'\n                        onClick={this.nextPage}\n                        saving={this.state.nextLoading}\n                        disabled={this.state.nextLoading}\n                        defaultMessage={buttonContents}\n                        savingMessage={buttonContents}\n                    />\n                );\n            }\n\n            if (this.state.page > 0) {\n                previousButton = (\n                    <button\n                        className='btn btn-link'\n                        onClick={this.previousPage}\n                    >\n                        <i\n                            className='fa fa-chevron-left margin-right'\n                            title={localizeMessage('generic_icons.previous', 'Previous Icon')}\n                        />\n                        <FormattedMessage\n                            id='filtered_user_list.prev'\n                            defaultMessage='Previous'\n                        />\n                    </button>\n                );\n            }\n        }\n\n        return (\n            <div>\n                <div className='backstage-filters'>\n                    <div className='backstage-filter__search'>\n                        <i\n                            className='fa fa-search'\n                            title={localizeMessage('generic_icons.search', 'Search Icon')}\n                        />\n                        <input\n                            type='search'\n                            className='form-control'\n                            placeholder={localizeMessage('emoji_list.search', 'Search Custom Emoji')}\n                            onChange={this.onSearchChange}\n                            style={style.search}\n                        />\n                    </div>\n                </div>\n                <span className='backstage-list__help'>\n                    <p>\n                        <FormattedMessage\n                            id='emoji_list.help'\n                            defaultMessage=\"Custom emoji are available to everyone on your server. Type ':' followed by two characters in a message box to bring up the emoji selection menu.\"\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='emoji_list.help2'\n                            defaultMessage=\"Tip: If you add #, ##, or ### as the first character on a new line containing emoji, you can use larger sized emoji. To try it out, send a message such as: '# :smile:'.\"\n                        />\n                    </p>\n                </span>\n                <div className='backstage-list'>\n                    <table className='emoji-list__table'>\n                        <thead>\n                            <tr className='backstage-list__item emoji-list__table-header'>\n                                <th className='emoji-list__name'>\n                                    <FormattedMessage\n                                        id='emoji_list.name'\n                                        defaultMessage='Name'\n                                    />\n                                </th>\n                                <th className='emoji-list__image'>\n                                    <FormattedMessage\n                                        id='emoji_list.image'\n                                        defaultMessage='Image'\n                                    />\n                                </th>\n                                <th className='emoji-list__creator'>\n                                    <FormattedMessage\n                                        id='emoji_list.creator'\n                                        defaultMessage='Creator'\n                                    />\n                                </th>\n                                <th className='emoji-list_actions'>\n                                    <FormattedMessage\n                                        id='emoji_list.actions'\n                                        defaultMessage='Actions'\n                                    />\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {emojis}\n                        </tbody>\n                    </table>\n                </div>\n                <div className='filter-controls padding-top x2'>\n                    {previousButton}\n                    {nextButton}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    search: {flexGrow: 0, flexShrink: 0},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getUser, getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {deleteCustomEmoji} from 'mattermost-redux/actions/emojis';\n\nimport {getDisplayNameByUser} from 'utils/utils.jsx';\n\nimport EmojiListItem from './emoji_list_item.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const emoji = state.entities.emojis.customEmoji[ownProps.emojiId];\n    const creator = getUser(state, emoji.creator_id);\n\n    return {\n        emoji,\n        creatorDisplayName: getDisplayNameByUser(creator),\n        creatorUsername: creator ? creator.username : '',\n        currentUserId: getCurrentUserId(state),\n        currentTeam: getCurrentTeam(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            deleteCustomEmoji,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiListItem);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\nimport {Client4} from 'mattermost-redux/client';\n\nimport DeleteEmoji from 'components/emoji/delete_emoji_modal.jsx';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nexport default class EmojiListItem extends React.Component {\n    static propTypes = {\n        emoji: PropTypes.object.isRequired,\n        currentUserId: PropTypes.string.isRequired,\n        creatorDisplayName: PropTypes.string.isRequired,\n        creatorUsername: PropTypes.string,\n        currentTeam: PropTypes.object,\n        onDelete: PropTypes.func,\n        actions: PropTypes.shape({\n            deleteCustomEmoji: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        emoji: {},\n        currentUserId: '',\n        currentTeam: {},\n        creatorDisplayName: '',\n    }\n\n    handleDelete = () => {\n        if (this.props.onDelete) {\n            this.props.onDelete(this.props.emoji.id);\n        }\n\n        this.props.actions.deleteCustomEmoji(this.props.emoji.id);\n    }\n\n    render() {\n        const emoji = this.props.emoji;\n        const creatorUsername = this.props.creatorUsername;\n        let creatorDisplayName = this.props.creatorDisplayName;\n\n        if (creatorUsername && creatorUsername !== creatorDisplayName) {\n            creatorDisplayName += ' (@' + creatorUsername + ')';\n        }\n\n        let deleteButton = null;\n        if (emoji.creator_id === this.props.currentUserId) {\n            deleteButton = (\n                <TeamPermissionGate\n                    teamId={this.props.currentTeam.id}\n                    permissions={[Permissions.MANAGE_EMOJIS]}\n                >\n                    <DeleteEmoji onDelete={this.handleDelete}/>\n                </TeamPermissionGate>\n            );\n        } else {\n            deleteButton = (\n                <TeamPermissionGate\n                    teamId={this.props.currentTeam.id}\n                    permissions={[Permissions.MANAGE_EMOJIS]}\n                >\n                    <TeamPermissionGate\n                        teamId={this.props.currentTeam.id}\n                        permissions={[Permissions.MANAGE_OTHERS_EMOJIS]}\n                    >\n                        <DeleteEmoji onDelete={this.handleDelete}/>\n                    </TeamPermissionGate>\n                </TeamPermissionGate>\n            );\n        }\n\n        return (\n            <tr className='backstage-list__item'>\n                <td className='emoji-list__name'>\n                    {':' + emoji.name + ':'}\n                </td>\n                <td className='emoji-list__image'>\n                    <span\n                        className='emoticon'\n                        style={{backgroundImage: 'url(' + Client4.getCustomEmojiImageUrl(emoji.id) + ')'}}\n                    />\n                </td>\n                <td className='emoji-list__creator'>\n                    {creatorDisplayName}\n                </td>\n                <td className='emoji-list-item_actions'>\n                    {deleteButton}\n                </td>\n            </tr>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport DeleteModalTrigger from 'components/delete_modal_trigger.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class DeleteEmoji extends DeleteModalTrigger {\n    static propTypes = {\n        onDelete: PropTypes.func.isRequired,\n    }\n\n    get triggerTitle() {\n        return (\n            <FormattedMessage\n                id='emoji_list.delete'\n                defaultMessage='Delete'\n            />\n        );\n    }\n\n    get modalTitle() {\n        return (\n            <FormattedMessage\n                id='emoji_list.delete.confirm.title'\n                defaultMessage='Delete Custom Emoji'\n            />\n        );\n    }\n\n    get modalMessage() {\n        return (\n            <div className='alert alert-warning'>\n                <i\n                    className='fa fa-warning fa-margin--right'\n                    title={localizeMessage('generic_icons.warning', 'Warning Icon')}\n                />\n                <FormattedMessage\n                    id='emoji_list.delete.confirm.msg'\n                    defaultMessage='This action permanently deletes the custom emoji. Are you sure you want to delete it?'\n                />\n            </div>\n        );\n    }\n\n    get modalConfirmButton() {\n        return (\n            <FormattedMessage\n                id='emoji_list.delete.confirm.button'\n                defaultMessage='Delete'\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport * as EmojiActions from 'actions/emoji_actions.jsx';\nimport EmojiStore from 'stores/emoji_store.jsx';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\n\nexport default class AddEmoji extends React.Component {\n    static propTypes = {\n        team: PropTypes.object,\n        user: PropTypes.object,\n    };\n\n    static contextTypes = {\n        router: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.updateName = this.updateName.bind(this);\n        this.updateImage = this.updateImage.bind(this);\n\n        this.state = {\n            name: '',\n            image: null,\n            imageUrl: '',\n            saving: false,\n            error: null,\n        };\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            error: null,\n        });\n\n        const emoji = {\n            creator_id: this.props.user.id,\n            name: this.state.name.trim().toLowerCase(),\n        };\n\n        // trim surrounding colons if the user accidentally included them in the name\n        if (emoji.name.startsWith(':') && emoji.name.endsWith(':')) {\n            emoji.name = emoji.name.substring(1, emoji.name.length - 1);\n        }\n\n        if (!emoji.name) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameRequired'\n                        defaultMessage='A name is required for the emoji'\n                    />\n                ),\n            });\n\n            return;\n        } else if ((/[^a-z0-9_-]/).test(emoji.name)) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameInvalid'\n                        defaultMessage=\"An emoji's name can only contain lowercase letters, numbers, and the symbols '-' and '_'.\"\n                    />\n                ),\n            });\n\n            return;\n        } else if (EmojiStore.hasSystemEmoji(emoji.name)) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameTaken'\n                        defaultMessage='This name is already in use by a system emoji. Please choose another name.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!this.state.image) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.imageRequired'\n                        defaultMessage='An image is required for the emoji'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        EmojiActions.addEmoji(\n            emoji,\n            this.state.image,\n            () => {\n                this.props.history.push('/' + this.props.team.name + '/emoji');\n            },\n            (err) => {\n                this.setState({\n                    saving: false,\n                    error: err.message,\n                });\n            }\n        );\n    }\n\n    updateName(e) {\n        this.setState({\n            name: e.target.value,\n        });\n    }\n\n    updateImage(e) {\n        if (e.target.files.length === 0) {\n            this.setState({\n                image: null,\n                imageUrl: '',\n            });\n\n            return;\n        }\n\n        const image = e.target.files[0];\n\n        const reader = new FileReader();\n        reader.onload = () => {\n            this.setState({\n                image,\n                imageUrl: reader.result,\n            });\n        };\n        reader.readAsDataURL(image);\n    }\n\n    render() {\n        let filename = null;\n        if (this.state.image) {\n            filename = (\n                <span className='add-emoji__filename'>\n                    {this.state.image.name}\n                </span>\n            );\n        }\n\n        let preview = null;\n        if (this.state.imageUrl) {\n            preview = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='preview'\n                    >\n                        <FormattedMessage\n                            id='add_emoji.preview'\n                            defaultMessage='Preview'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8 add-emoji__preview'>\n                        <FormattedMessage\n                            id='add_emoji.preview.sentence'\n                            defaultMessage='This is a sentence with {image} in it.'\n                            values={{\n                                image: (\n                                    <span\n                                        className='emoticon'\n                                        style={{backgroundImage: 'url(' + this.state.imageUrl + ')'}}\n                                    />\n                                ),\n                            }}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/emoji'}>\n                        <FormattedMessage\n                            id='emoji_list.header'\n                            defaultMessage='Custom Emoji'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id='add_emoji.header'\n                        defaultMessage='Add'\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='name'\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.name'\n                                    defaultMessage='Name'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='name'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.name}\n                                    onChange={this.updateName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_emoji.name.help'\n                                        defaultMessage=\"Choose a name for your emoji made of up to 64 characters consisting of lowercase letters, numbers, and the symbols '-' and '_'.\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='image'\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.image'\n                                    defaultMessage='Image'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <div>\n                                    <div className='add-emoji__upload'>\n                                        <button className='btn btn-primary'>\n                                            <FormattedMessage\n                                                id='add_emoji.image.button'\n                                                defaultMessage='Select'\n                                            />\n                                        </button>\n                                        <input\n                                            type='file'\n                                            accept='.jpg,.png,.gif'\n                                            multiple={false}\n                                            onChange={this.updateImage}\n                                        />\n                                    </div>\n                                    {filename}\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_emoji.image.help'\n                                            defaultMessage='Choose the image for your emoji. The image can be a gif, png, or jpeg file with a max size of 64 KB and dimensions up to 128 by 128 pixels.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {preview}\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                error={this.state.error}\n                            />\n                            <Link\n                                className='btn btn-sm'\n                                to={'/' + this.props.team.name + '/emoji'}\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                onClick={this.handleSubmit}\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.save'\n                                    defaultMessage='Save'\n                                />\n                            </SpinnerButton>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'mattermost-redux/actions/integrations';\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getIncomingHooks} from 'mattermost-redux/selectors/entities/integrations';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport InstalledIncomingWebhooks from './installed_incoming_webhooks.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const teamId = getCurrentTeamId(state);\n    const canManageOthersWebhooks = haveITeamPermission(state, {team: teamId, permission: Permissions.MANAGE_OTHERS_WEBHOOKS});\n    const incomingHooks = getIncomingHooks(state);\n    const incomingWebhooks = Object.keys(incomingHooks).\n        map((key) => incomingHooks[key]).\n        filter((incomingWebhook) => incomingWebhook.team_id === teamId);\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n\n    return {\n        incomingWebhooks,\n        channels: getAllChannels(state),\n        users: getUsers(state),\n        teamId,\n        canManageOthersWebhooks,\n        enableIncomingWebhooks,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getIncomingHooks: Actions.getIncomingHooks,\n            removeIncomingHook: Actions.removeIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledIncomingWebhooks);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledIncomingWebhook from 'components/integrations/installed_incoming_webhook.jsx';\n\nexport default class InstalledIncomingWebhooks extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Data used in passing down as props for webhook modifications\n        */\n        team: PropTypes.object,\n\n        /**\n        * Data used for checking if webhook is created by current user\n        */\n        user: PropTypes.object,\n\n        /**\n        *  Data used for checking modification privileges\n        */\n        canManageOthersWebhooks: PropTypes.bool,\n\n        /**\n        * Data used in passing down as props for showing webhook details\n        */\n        incomingWebhooks: PropTypes.array,\n\n        /**\n        * Data used in sorting for displaying list and as props channel details\n        */\n        channels: PropTypes.object,\n\n        /**\n        *  Data used in passing down as props for webhook -created by label\n        */\n        users: PropTypes.object,\n\n        /**\n        *  Data used in passing as argument for loading webhooks\n        */\n\n        teamId: PropTypes.string,\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call for removing incomingWebhook\n            */\n            removeIncomingHook: PropTypes.func,\n\n            /**\n            * The function to call for incomingWebhook List and for the status of api\n            */\n            getIncomingHooks: PropTypes.func,\n        }),\n\n        /**\n        * Whether or not incoming webhooks are enabled.\n        */\n        enableIncomingWebhooks: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.deleteIncomingWebhook = this.deleteIncomingWebhook.bind(this);\n        this.incomingWebhookCompare = this.incomingWebhookCompare.bind(this);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableIncomingWebhooks) {\n            this.props.actions.getIncomingHooks(\n                this.props.teamId,\n                Constants.Integrations.START_PAGE_NUM,\n                Constants.Integrations.PAGE_SIZE\n            ).then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    deleteIncomingWebhook = (incomingWebhook) => {\n        this.props.actions.removeIncomingHook(incomingWebhook.id);\n    }\n\n    incomingWebhookCompare(a, b) {\n        let displayNameA = a.display_name;\n        if (!displayNameA) {\n            const channelA = this.props.channels[a.channel_id];\n            if (channelA) {\n                displayNameA = channelA.display_name;\n            } else {\n                displayNameA = Utils.localizeMessage('installed_incoming_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n\n        const displayNameB = b.display_name;\n\n        return displayNameA.localeCompare(displayNameB);\n    }\n\n    render() {\n        const incomingWebhooks = this.props.incomingWebhooks.sort(this.incomingWebhookCompare).map((incomingWebhook) => {\n            const canChange = this.props.canManageOthersWebhooks || this.props.user.id === incomingWebhook.user_id;\n            const channel = this.props.channels[incomingWebhook.channel_id];\n            return (\n                <InstalledIncomingWebhook\n                    key={incomingWebhook.id}\n                    incomingWebhook={incomingWebhook}\n                    onDelete={this.deleteIncomingWebhook}\n                    creator={this.props.users[incomingWebhook.user_id] || {}}\n                    canChange={canChange}\n                    team={this.props.team}\n                    channel={channel}\n                />\n            );\n        });\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.header'\n                        defaultMessage='Installed Incoming Webhooks'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.add'\n                        defaultMessage='Add Incoming Webhook'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/incoming_webhooks/add'}\n                emptyText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.empty'\n                        defaultMessage='No incoming webhooks found'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.help'\n                        defaultMessage='Use incoming webhooks to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='http://docs.mattermost.com/developer/webhooks-incoming.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_incoming_webhooks.help.buildYourOwn'\n                                        defaultMessage='Build your own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_incoming_webhooks.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_incoming_webhooks.search', 'Search Incoming Webhooks')}\n                loading={this.state.loading}\n            >\n                {incomingWebhooks}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {getSiteURL} from 'utils/url.jsx';\nimport {t} from 'utils/i18n';\n\nimport CopyText from 'components/copy_text.jsx';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nexport default class InstalledIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Data used for showing webhook details\n        */\n        incomingWebhook: PropTypes.object.isRequired,\n\n        /**\n        * Function to call when webhook delete button is pressed\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * String used for filtering webhook item\n        */\n        filter: PropTypes.string,\n\n        /**\n        * Data used for showing created by details\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        *  Set to show available actions on webhook\n        */\n        canChange: PropTypes.bool.isRequired,\n\n        /**\n        *  Data used in routing of webhook for modifications\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        *  Data used for filtering of webhook based on filter prop\n        */\n        channel: PropTypes.object,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    handleDelete() {\n        this.props.onDelete(this.props.incomingWebhook);\n    }\n\n    static matchesFilter(incomingWebhook, channel, filter) {\n        if (!filter) {\n            return true;\n        }\n\n        if (incomingWebhook.display_name.toLowerCase().indexOf(filter) !== -1 ||\n            incomingWebhook.description.toLowerCase().indexOf(filter) !== -1) {\n            return true;\n        }\n\n        if (incomingWebhook.channel_id) {\n            if (channel && channel.name.toLowerCase().indexOf(filter) !== -1) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    render() {\n        const incomingWebhook = this.props.incomingWebhook;\n        const channel = this.props.channel;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n\n        if (!InstalledIncomingWebhook.matchesFilter(incomingWebhook, channel, filter)) {\n            return null;\n        }\n\n        let displayName;\n        if (incomingWebhook.display_name) {\n            displayName = incomingWebhook.display_name;\n        } else if (channel) {\n            displayName = channel.display_name;\n        } else {\n            displayName = (\n                <FormattedMessage\n                    id='installed_incoming_webhooks.unknown_channel'\n                    defaultMessage='A Private Webhook'\n                />\n            );\n        }\n\n        let description = null;\n        if (incomingWebhook.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {incomingWebhook.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <Link to={`/${this.props.team.name}/integrations/incoming_webhooks/edit?id=${incomingWebhook.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId={t('installed_incoming_webhooks.delete.confirm')}\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        const incomingWebhookId = getSiteURL() + '/hooks/' + incomingWebhook.id;\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row'>\n                        <span className='item-details__name'>\n                            {displayName}\n                        </span>\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__url'>\n                            <FormattedMessage\n                                id='installed_integrations.url'\n                                defaultMessage='URL: {url}'\n                                values={{\n                                    url: incomingWebhookId,\n                                }}\n                            />\n                            <span>\n                                <CopyText\n                                    value={incomingWebhookId}\n                                />\n                            </span>\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: incomingWebhook.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n                {actions}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createIncomingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport AddIncomingWebhook from './add_incoming_webhook.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n\n    return {\n        createIncomingHookRequest: state.requests.integrations.createIncomingHook,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddIncomingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractIncomingWebhook from 'components/integrations/abstract_incoming_webhook.jsx';\n\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('add_incoming_webhook.save'), defaultMessage: 'Save'};\n\nexport default class AddIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The request state for createIncomingHook action. Contains status and error\n        */\n        createIncomingHookRequest: PropTypes.object.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post username.\n        */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post icon.\n        */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add a new incoming webhook\n            */\n            createIncomingHook: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addIncomingHook = async (hook) => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.createIncomingHook(hook);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=incoming_webhooks&id=${data.id}`);\n            return;\n        }\n\n        if (this.props.createIncomingHookRequest.error) {\n            this.setState({serverError: this.props.createIncomingHookRequest.error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractIncomingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n                action={this.addIncomingHook}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getIncomingHook, updateIncomingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditIncomingWebhook from './edit_incoming_webhook.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n    const hookId = (new URLSearchParams(ownProps.location.search)).get('id');\n\n    return {\n        hookId,\n        hook: state.entities.integrations.incomingHooks[hookId],\n        updateIncomingHookRequest: state.requests.integrations.updateIncomingHook,\n        enableIncomingWebhooks,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateIncomingHook,\n            getIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditIncomingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractIncomingWebhook from 'components/integrations/abstract_incoming_webhook.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\n\nconst HEADER = {id: t('integrations.edit'), defaultMessage: 'Edit'};\nconst FOOTER = {id: t('update_incoming_webhook.update'), defaultMessage: 'Update'};\n\nexport default class EditIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The incoming webhook to edit\n        */\n        hook: PropTypes.object,\n\n        /**\n        * The id of the incoming webhook to edit\n        */\n        hookId: PropTypes.string.isRequired,\n\n        /**\n        * The request state for updateIncomingHook action. Contains status and error\n        */\n        updateIncomingHookRequest: PropTypes.object.isRequired,\n\n        /**\n        * Whether or not incoming webhooks are enabled.\n        */\n        enableIncomingWebhooks: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post username.\n        */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post icon.\n        */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to update an incoming webhook\n            */\n            updateIncomingHook: PropTypes.func.isRequired,\n\n            /**\n            * The function to call to get an incoming webhook\n            */\n            getIncomingHook: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableIncomingWebhooks) {\n            this.props.actions.getIncomingHook(this.props.hookId);\n        }\n    }\n\n    editIncomingHook = async (hook) => {\n        this.newHook = hook;\n\n        if (this.props.hook.id) {\n            hook.id = this.props.hook.id;\n        }\n\n        if (this.props.hook.token) {\n            hook.token = this.props.hook.token;\n        }\n\n        await this.submitHook();\n    }\n\n    submitHook = async () => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.updateIncomingHook(this.newHook);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/incoming_webhooks`);\n            return;\n        }\n\n        if (this.props.updateIncomingHookRequest.error) {\n            this.setState({serverError: this.props.updateIncomingHookRequest.error.message});\n        }\n    }\n\n    render() {\n        if (!this.props.hook) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractIncomingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n                action={this.editIncomingHook}\n                serverError={this.state.serverError}\n                initialHook={this.props.hook}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'mattermost-redux/actions/integrations';\nimport {getOutgoingHooks} from 'mattermost-redux/selectors/entities/integrations';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport InstalledOutgoingWebhook from './installed_outgoing_webhooks.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const teamId = getCurrentTeamId(state);\n    const canManageOthersWebhooks = haveITeamPermission(state, {team: teamId, permission: Permissions.MANAGE_OTHERS_WEBHOOKS});\n    const outgoingHooks = getOutgoingHooks(state);\n    const outgoingWebhooks = Object.keys(outgoingHooks).\n        map((key) => outgoingHooks[key]).\n        filter((outgoingWebhook) => outgoingWebhook.team_id === teamId);\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n\n    return {\n        outgoingWebhooks,\n        channels: getAllChannels(state),\n        users: getUsers(state),\n        teamId,\n        canManageOthersWebhooks,\n        enableOutgoingWebhooks,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getOutgoingHooks: Actions.getOutgoingHooks,\n            removeOutgoingHook: Actions.removeOutgoingHook,\n            regenOutgoingHookToken: Actions.regenOutgoingHookToken,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledOutgoingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport Constants from 'utils/constants.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledOutgoingWebhook from 'components/integrations/installed_outgoing_webhook.jsx';\n\nexport default class InstalledOutgoingWebhooks extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Data used in passing down as props for webhook modifications\n        */\n        team: PropTypes.object,\n\n        /**\n        * Data used for checking if webhook is created by current user\n        */\n        user: PropTypes.object,\n\n        /**\n        *  Data used for checking modification privileges\n        */\n        canManageOthersWebhooks: PropTypes.bool,\n\n        /**\n        * Data used in passing down as props for showing webhook details\n        */\n        outgoingWebhooks: PropTypes.array,\n\n        /**\n        * Data used in sorting for displaying list and as props channel details\n        */\n        channels: PropTypes.object,\n\n        /**\n        *  Data used in passing down as props for webhook -created by label\n        */\n        users: PropTypes.object,\n\n        /**\n        *  Data used in passing as argument for loading webhooks\n        */\n        teamId: PropTypes.string,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call for removing outgoingWebhook\n            */\n            removeOutgoingHook: PropTypes.func,\n\n            /**\n            * The function to call for outgoingWebhook List and for the status of api\n            */\n            getOutgoingHooks: PropTypes.func,\n\n            /**\n            * The function to call for regeneration of webhook token\n            */\n            regenOutgoingHookToken: PropTypes.func,\n        }),\n\n        /**\n        * Whether or not outgoing webhooks are enabled.\n        */\n        enableOutgoingWebhooks: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.outgoingWebhookCompare = this.outgoingWebhookCompare.bind(this);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOutgoingWebhooks) {\n            this.props.actions.getOutgoingHooks(\n                '',\n                this.props.teamId,\n                Constants.Integrations.START_PAGE_NUM,\n                Constants.Integrations.PAGE_SIZE\n            ).then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    regenOutgoingWebhookToken = (outgoingWebhook) => {\n        this.props.actions.regenOutgoingHookToken(outgoingWebhook.id);\n    }\n\n    removeOutgoingHook = (outgoingWebhook) => {\n        this.props.actions.removeOutgoingHook(outgoingWebhook.id);\n    }\n\n    outgoingWebhookCompare(a, b) {\n        let displayNameA = a.display_name;\n        if (!displayNameA) {\n            const channelA = this.props.channels[a.channel_id];\n            if (channelA) {\n                displayNameA = channelA.display_name;\n            } else {\n                displayNameA = Utils.localizeMessage('installed_outgoing_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n\n        let displayNameB = b.display_name;\n        if (!displayNameB) {\n            const channelB = this.props.channels[b.channel_id];\n            if (channelB) {\n                displayNameB = channelB.display_name;\n            } else {\n                displayNameB = Utils.localizeMessage('installed_outgoing_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n        return displayNameA.localeCompare(displayNameB);\n    }\n\n    render() {\n        const outgoingWebhooks = this.props.outgoingWebhooks.sort(this.outgoingWebhookCompare).map((outgoingWebhook) => {\n            const canChange = this.props.canManageOthersWebhooks || this.props.user.id === outgoingWebhook.creator_id;\n            const channel = this.props.channels[outgoingWebhook.channel_id];\n            return (\n                <InstalledOutgoingWebhook\n                    key={outgoingWebhook.id}\n                    outgoingWebhook={outgoingWebhook}\n                    onRegenToken={this.regenOutgoingWebhookToken}\n                    onDelete={this.removeOutgoingHook}\n                    creator={this.props.users[outgoingWebhook.creator_id] || {}}\n                    canChange={canChange}\n                    team={this.props.team}\n                    channel={channel}\n                />\n            );\n        });\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.header'\n                        defaultMessage='Installed Outgoing Webhooks'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.add'\n                        defaultMessage='Add Outgoing Webhook'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/outgoing_webhooks/add'}\n                emptyText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.empty'\n                        defaultMessage='No outgoing webhooks found'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.help'\n                        defaultMessage='Use outgoing webhooks to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='http://docs.mattermost.com/developer/webhooks-outgoing.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_outgoing_webhooks.help.buildYourOwn'\n                                        defaultMessage='Build your own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_outgoing_webhooks.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_outgoing_webhooks.search', 'Search Outgoing Webhooks')}\n                loading={this.state.loading}\n            >\n                {outgoingWebhooks}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {t} from 'utils/i18n';\nimport CopyText from 'components/copy_text.jsx';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nexport default class InstalledOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Data used for showing webhook details\n        */\n        outgoingWebhook: PropTypes.object.isRequired,\n\n        /**\n        * Function used for webhook token regeneration\n        */\n        onRegenToken: PropTypes.func.isRequired,\n\n        /**\n        * Function to call when webhook delete button is pressed\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * String used for filtering webhook item\n        */\n        filter: PropTypes.string,\n\n        /**\n        * Data used for showing created by details\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        *  Set to show available actions on webhook\n        */\n        canChange: PropTypes.bool.isRequired,\n\n        /**\n        *  Data used in routing of webhook for modifications\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        *  Data used for filtering of webhooks based in filter prop\n        */\n        channel: PropTypes.object,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleRegenToken = this.handleRegenToken.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    handleRegenToken(e) {\n        e.preventDefault();\n\n        this.props.onRegenToken(this.props.outgoingWebhook);\n    }\n\n    handleDelete() {\n        this.props.onDelete(this.props.outgoingWebhook);\n    }\n\n    makeDisplayName(outgoingWebhook, channel) {\n        if (outgoingWebhook.display_name) {\n            return outgoingWebhook.display_name;\n        } else if (channel) {\n            return channel.display_name;\n        }\n        return (\n            <FormattedMessage\n                id='installed_outgoing_webhooks.unknown_channel'\n                defaultMessage='A Private Webhook'\n            />\n        );\n    }\n\n    matchesFilter(outgoingWebhook, channel, filter) {\n        if (!filter) {\n            return true;\n        }\n\n        const {\n            display_name: displayName,\n            description,\n            trigger_words: triggerWords,\n        } = outgoingWebhook;\n\n        if (\n            (displayName && displayName.toLowerCase().indexOf(filter) !== -1) ||\n            (description && description.toLowerCase().indexOf(filter) !== -1)\n        ) {\n            return true;\n        }\n\n        if (triggerWords) {\n            for (const triggerWord of triggerWords) {\n                if (triggerWord.toLowerCase().indexOf(filter) !== -1) {\n                    return true;\n                }\n            }\n        }\n\n        if (channel && channel.name) {\n            if (channel.name.toLowerCase().indexOf(filter) !== -1) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    render() {\n        const outgoingWebhook = this.props.outgoingWebhook;\n        const channel = this.props.channel;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n        const triggerWordsFull = 0;\n        const triggerWordsStartsWith = 1;\n\n        if (outgoingWebhook && !this.matchesFilter(outgoingWebhook, channel, filter)) {\n            return null;\n        }\n\n        const displayName = this.makeDisplayName(outgoingWebhook, channel);\n\n        let description = null;\n        if (outgoingWebhook.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {outgoingWebhook.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let triggerWords = null;\n        if (outgoingWebhook.trigger_words && outgoingWebhook.trigger_words.length > 0) {\n            triggerWords = (\n                <div className='item-details__row'>\n                    <span className='item-details__trigger-words'>\n                        <FormattedMessage\n                            id='installed_integrations.triggerWords'\n                            defaultMessage='Trigger Words: {triggerWords}'\n                            values={{\n                                triggerWords: outgoingWebhook.trigger_words.join(', '),\n                            }}\n                        />\n                    </span>\n                </div>\n            );\n        }\n\n        const urls = (\n            <div className='item-details__row'>\n                <span className='item-details__url'>\n                    <FormattedMessage\n                        id='installed_integrations.callback_urls'\n                        defaultMessage='Callback URLs: {urls}'\n                        values={{\n                            urls: outgoingWebhook.callback_urls.join(', '),\n                        }}\n                    />\n                </span>\n            </div>\n        );\n\n        let triggerWhen;\n        if (outgoingWebhook.trigger_when === triggerWordsFull) {\n            triggerWhen = (\n                <FormattedMessage\n                    id='add_outgoing_webhook.triggerWordsTriggerWhenFullWord'\n                    defaultMessage='First word matches a trigger word exactly'\n                />\n            );\n        } else if (outgoingWebhook.trigger_when === triggerWordsStartsWith) {\n            triggerWhen = (\n                <FormattedMessage\n                    id='add_outgoing_webhook.triggerWordsTriggerWhenStartsWith'\n                    defaultMessage='First word starts with a trigger word'\n                />\n            );\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.handleRegenToken}\n                    >\n                        <FormattedMessage\n                            id='installed_integrations.regenToken'\n                            defaultMessage='Regen Token'\n                        />\n                    </button>\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/outgoing_webhooks/edit?id=${outgoingWebhook.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId={t('installed_outgoing_webhooks.delete.confirm')}\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row'>\n                        <span className='item-details__name'>\n                            {displayName}\n                        </span>\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__content_type'>\n                            <FormattedMessage\n                                id='installed_integrations.content_type'\n                                defaultMessage='Content-Type: {contentType}'\n                                values={{\n                                    contentType: outgoingWebhook.content_type || 'application/x-www-form-urlencoded',\n                                }}\n                            />\n                        </span>\n                    </div>\n                    {triggerWords}\n                    <div className='item-details__row'>\n                        <span className='item-details__trigger-when'>\n                            <FormattedMessage\n                                id='installed_integrations.triggerWhen'\n                                defaultMessage='Trigger When: {triggerWhen}'\n                                values={{\n                                    triggerWhen,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMessage\n                                id='installed_integrations.token'\n                                defaultMessage='Token: {token}'\n                                values={{\n                                    token: outgoingWebhook.token,\n                                }}\n                            />\n                            <CopyText\n                                value={outgoingWebhook.token}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: outgoingWebhook.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    {urls}\n                </div>\n                {actions}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createOutgoingHook} from 'mattermost-redux/actions/integrations';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport AddOutgoingWebhook from './add_outgoing_webhook.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n    return {\n        createOutgoingHookRequest: state.requests.integrations.createOutgoingHook,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createOutgoingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOutgoingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractOutgoingWebhook from 'components/integrations/abstract_outgoing_webhook.jsx';\n\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('add_outgoing_webhook.save'), defaultMessage: 'Save'};\n\nexport default class AddOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * The request state for createOutgoingHook action. Contains status and error\n         */\n        createOutgoingHookRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * The function to call to add a new outgoing webhook\n             */\n            createOutgoingHook: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n         * Whether to allow configuration of the default post username.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post icon.\n         */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addOutgoingHook = async (hook) => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.createOutgoingHook(hook);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=outgoing_webhooks&id=${data.id}`);\n            return;\n        }\n\n        if (this.props.createOutgoingHookRequest.error) {\n            this.setState({serverError: this.props.createOutgoingHookRequest.error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractOutgoingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                renderExtra={''}\n                action={this.addOutgoingHook}\n                serverError={this.state.serverError}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getOutgoingHook, updateOutgoingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditOutgoingWebhook from './edit_outgoing_webhook.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const hookId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n\n    return {\n        hookId,\n        hook: state.entities.integrations.outgoingHooks[hookId],\n        updateOutgoingHookRequest: state.requests.integrations.createOutgoingHook,\n        enableOutgoingWebhooks,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateOutgoingHook,\n            getOutgoingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOutgoingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport AbstractOutgoingWebhook from 'components/integrations/abstract_outgoing_webhook.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\n\nconst HEADER = {id: 'integrations.edit', defaultMessage: 'Edit'};\nconst FOOTER = {id: 'update_outgoing_webhook.update', defaultMessage: 'Update'};\n\nexport default class EditOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * The outgoing webhook to edit\n         */\n        hook: PropTypes.object,\n\n        /**\n         * The id of the outgoing webhook to edit\n         */\n        hookId: PropTypes.string.isRequired,\n\n        /**\n         * The request state for updateOutgoingHook action. Contains status and error\n         */\n        updateOutgoingHookRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * The function to call to update an outgoing webhook\n             */\n            updateOutgoingHook: PropTypes.func.isRequired,\n\n            /**\n             * The function to call to get an outgoing webhook\n             */\n            getOutgoingHook: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not outgoing webhooks are enabled.\n        */\n        enableOutgoingWebhooks: PropTypes.bool,\n\n        /**\n         * Whether to allow configuration of the default post username.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post icon.\n         */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOutgoingWebhooks) {\n            this.props.actions.getOutgoingHook(this.props.hookId);\n        }\n    }\n\n    editOutgoingHook = async (hook) => {\n        this.newHook = hook;\n\n        if (this.props.hook.id) {\n            hook.id = this.props.hook.id;\n        }\n\n        if (this.props.hook.token) {\n            hook.token = this.props.hook.token;\n        }\n\n        const triggerWordsSame = (this.props.hook.trigger_words.length === hook.trigger_words.length) &&\n            this.props.hook.trigger_words.every((v, i) => v === hook.trigger_words[i]);\n\n        const callbackUrlsSame = (this.props.hook.callback_urls.length === hook.callback_urls.length) &&\n            this.props.hook.callback_urls.every((v, i) => v === hook.callback_urls[i]);\n\n        if (this.props.hook.content_type !== hook.content_type ||\n            !triggerWordsSame || !callbackUrlsSame) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitHook();\n        }\n    }\n\n    handleConfirmModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitHook = async () => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.updateOutgoingHook(this.newHook);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/outgoing_webhooks`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (this.props.updateOutgoingHookRequest.error) {\n            this.setState({serverError: this.props.updateOutgoingHookRequest.error.message});\n        }\n    }\n\n    renderExtra = () => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_outgoing_webhook.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_outgoing_webhook.confirm'\n                defaultMessage='Edit Outgoing Webhook'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_outgoing_webhook.question'\n                defaultMessage='Your changes may break the existing outgoing webhook. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitHook}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render() {\n        if (!this.props.hook) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractOutgoingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                renderExtra={this.renderExtra()}\n                action={this.editOutgoingHook}\n                serverError={this.state.serverError}\n                initialHook={this.props.hook}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'mattermost-redux/actions/integrations';\nimport {getOAuthApps} from 'mattermost-redux/selectors/entities/integrations';\nimport {haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport InstalledOAuthApps from './installed_oauth_apps.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n    const enableOnlyAdminIntegrations = config.EnableOnlyAdminIntegrations === 'true';\n\n    return {\n        canManageOauth: haveISystemPermission(state, {permission: Permissions.MANAGE_OAUTH}),\n        oauthApps: getOAuthApps(state),\n        regenOAuthAppSecretRequest: state.requests.integrations.updateOAuthApp,\n        enableOAuthServiceProvider,\n        enableOnlyAdminIntegrations,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getOAuthApps: Actions.getOAuthApps,\n            regenOAuthAppSecret: Actions.regenOAuthAppSecret,\n            deleteOAuthApp: Actions.deleteOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledOAuthApps);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {localizeMessage} from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledOAuthApp from '../installed_oauth_app.jsx';\n\nexport default class InstalledOAuthApps extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        /**\n        * The oauthApps data\n        */\n        oauthApps: PropTypes.object,\n\n        /**\n        * Set if user can manage oath\n        */\n        canManageOauth: PropTypes.bool,\n\n        /**\n        * The request state for regenOAuthAppSecret action. Contains status and error\n        */\n        regenOAuthAppSecretRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to fetch OAuth apps\n            */\n            getOAuthApps: PropTypes.func.isRequired,\n\n            /**\n            * The function to call when Regenerate Secret link is clicked\n            */\n            regenOAuthAppSecret: PropTypes.func.isRequired,\n\n            /**\n            * The function to call when Delete link is clicked\n            */\n            deleteOAuthApp: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not OAuth applications are enabled.\n        */\n        enableOAuthServiceProvider: PropTypes.bool,\n\n        /**\n        * Whether or not integration configuration is restricted to admins.\n        */\n        enableOnlyAdminIntegrations: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOAuthServiceProvider) {\n            this.props.actions.getOAuthApps().then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    deleteOAuthApp = (app) => {\n        if (app && app.id) {\n            this.props.actions.deleteOAuthApp(app.id);\n        }\n    }\n\n    oauthAppCompare(a, b) {\n        let nameA = a.name;\n        if (!nameA) {\n            nameA = localizeMessage('installed_integrations.unnamed_oauth_app', 'Unnamed OAuth 2.0 Application');\n        }\n\n        let nameB = b.name;\n        if (!nameB) {\n            nameB = localizeMessage('installed_integrations.unnamed_oauth_app', 'Unnamed OAuth 2.0 Application');\n        }\n\n        return nameA.localeCompare(nameB);\n    }\n\n    render() {\n        const oauthApps = Object.values(this.props.oauthApps).sort(this.oauthAppCompare).map((app) => {\n            return (\n                <InstalledOAuthApp\n                    key={app.id}\n                    team={this.props.team}\n                    oauthApp={app}\n                    regenOAuthAppSecretRequest={this.props.regenOAuthAppSecretRequest}\n                    onRegenerateSecret={this.props.actions.regenOAuthAppSecret}\n                    onDelete={this.deleteOAuthApp}\n                />\n            );\n        });\n\n        const integrationsEnabled = this.props.enableOAuthServiceProvider && this.props.canManageOauth;\n        let props;\n        if (integrationsEnabled) {\n            props = {\n                addLink: '/' + this.props.team.name + '/integrations/oauth2-apps/add',\n                addText: localizeMessage('installed_oauth_apps.add', 'Add OAuth 2.0 Application'),\n            };\n        }\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_oauth_apps.header'\n                        defaultMessage='OAuth 2.0 Applications'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_oauth_apps.help'\n                        defaultMessage='Create {oauthApplications} to securely integrate bots and third-party apps with Mattermost. Visit the {appDirectory} to find available self-hosted apps.'\n                        values={{\n                            oauthApplications: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://docs.mattermost.com/developer/oauth-2-0-applications.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_oauth_apps.help.oauthApplications'\n                                        defaultMessage='OAuth 2.0 applications'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_oauth_apps.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                emptyText={\n                    <FormattedMessage\n                        id='installed_oauth_apps.empty'\n                        defaultMessage='No OAuth 2.0 Applications found'\n                    />\n                }\n                searchPlaceholder={localizeMessage('installed_oauth_apps.search', 'Search OAuth 2.0 Applications')}\n                loading={this.state.loading}\n                {...props}\n            >\n                {oauthApps}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\nimport FormError from 'components/form_error.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport CopyText from 'components/copy_text.jsx';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nconst FAKE_SECRET = '***************';\n\nexport default class InstalledOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        /**\n        * The oauthApp data\n        */\n        oauthApp: PropTypes.object.isRequired,\n\n        /**\n        * The request state for regenOAuthAppSecret action. Contains status and error\n        */\n        regenOAuthAppSecretRequest: PropTypes.object.isRequired,\n\n        /**\n        * The function to call when Regenerate Secret link is clicked\n        */\n        onRegenerateSecret: PropTypes.func.isRequired,\n\n        /**\n        * The function to call when Delete link is clicked\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * Set to filter OAuthApp\n        */\n        filter: PropTypes.string,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            clientSecret: FAKE_SECRET,\n        };\n    }\n\n    handleShowClientSecret = (e) => {\n        if (e && e.preventDefault) {\n            e.preventDefault();\n        }\n        this.setState({clientSecret: this.props.oauthApp.client_secret});\n    }\n\n    handleHideClientSecret = (e) => {\n        e.preventDefault();\n        this.setState({clientSecret: FAKE_SECRET});\n    }\n\n    handleRegenerate = (e) => {\n        e.preventDefault();\n        this.props.onRegenerateSecret(this.props.oauthApp.id).then(\n            () => {\n                const {error} = this.props.regenOAuthAppSecretRequest;\n                if (error) {\n                    this.setState({error: error.message});\n                } else {\n                    this.setState({error: null});\n                    this.handleShowClientSecret();\n                }\n            }\n        );\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.oauthApp);\n    }\n\n    matchesFilter = (oauthApp, filter) => {\n        if (!filter) {\n            return true;\n        }\n\n        return oauthApp.name.toLowerCase().indexOf(filter) !== -1;\n    }\n\n    render() {\n        const oauthApp = this.props.oauthApp;\n        let error;\n\n        if (this.state.error) {\n            error = (\n                <FormError\n                    error={this.state.error}\n                />\n            );\n        }\n\n        if (!this.matchesFilter(oauthApp, this.props.filter)) {\n            return null;\n        }\n\n        let name;\n        if (oauthApp.name) {\n            name = oauthApp.name;\n        } else {\n            name = (\n                <FormattedMessage\n                    id='installed_integrations.unnamed_oauth_app'\n                    defaultMessage='Unnamed OAuth 2.0 Application'\n                />\n            );\n        }\n\n        let description;\n        if (oauthApp.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {oauthApp.description}\n                    </span>\n                </div>\n            );\n        }\n\n        const urls = (\n            <div className='item-details__row'>\n                <span className='item-details__url'>\n                    <FormattedMessage\n                        id='installed_integrations.callback_urls'\n                        defaultMessage='Callback URLs: {urls}'\n                        values={{\n                            urls: oauthApp.callback_urls.join(', '),\n                        }}\n                    />\n                </span>\n            </div>\n        );\n\n        let isTrusted;\n        if (oauthApp.is_trusted) {\n            isTrusted = Utils.localizeMessage('installed_oauth_apps.trusted.yes', 'Yes');\n        } else {\n            isTrusted = Utils.localizeMessage('installed_oauth_apps.trusted.no', 'No');\n        }\n\n        let showHide;\n        let clientSecret;\n        if (this.state.clientSecret === FAKE_SECRET) {\n            showHide = (\n                <button\n                    id='showSecretButton'\n                    className='style--none color--link'\n                    onClick={this.handleShowClientSecret}\n                >\n                    <FormattedMessage\n                        id='installed_integrations.showSecret'\n                        defaultMessage='Show Secret'\n                    />\n                </button>\n            );\n            clientSecret = (\n                <span className='item-details__token'>\n                    <FormattedMessage\n                        id='installed_integrations.client_secret'\n                        defaultMessage='Client Secret: **{clientSecret}**'\n                        values={{\n                            clientSecret: this.state.clientSecret,\n                        }}\n                    />\n                </span>\n            );\n        } else {\n            showHide = (\n                <button\n                    id='hideSecretButton'\n                    className='style--none color--link'\n                    onClick={this.handleHideClientSecret}\n                >\n                    <FormattedMessage\n                        id='installed_integrations.hideSecret'\n                        defaultMessage='Hide Secret'\n                    />\n                </button>\n            );\n            clientSecret = (\n                <span className='item-details__token'>\n                    <FormattedMarkdownMessage\n                        id='installed_integrations.client_secret'\n                        defaultMessage='Client Secret: **{clientSecret}**'\n                        values={{\n                            clientSecret: this.state.clientSecret,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_secret'\n                        defaultMessage='Copy Client Secret'\n                        value={this.state.clientSecret}\n                    />\n                </span>\n            );\n        }\n\n        const regen = (\n            <button\n                id='regenerateSecretButton'\n                className='style--none color--link'\n                onClick={this.handleRegenerate}\n            >\n                <FormattedMessage\n                    id='installed_integrations.regenSecret'\n                    defaultMessage='Regenerate Secret'\n                />\n            </button>\n        );\n\n        let icon;\n        if (oauthApp.icon_url) {\n            icon = (\n                <div className='integration__icon integration-list__icon'>\n                    <img src={oauthApp.icon_url}/>\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-list__item'>\n                {icon}\n                <div className='item-details'>\n                    <div className='item-details__row'>\n                        <span className='item-details__name'>\n                            {name}\n                        </span>\n                    </div>\n                    {error}\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__url'>\n                            <FormattedMarkdownMessage\n                                id='installed_oauth_apps.is_trusted'\n                                defaultMessage='Is Trusted: **{isTrusted}**'\n                                values={{\n                                    isTrusted,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMarkdownMessage\n                                id='installed_integrations.client_id'\n                                defaultMessage='Client ID: **{clientId}**'\n                                values={{\n                                    clientId: oauthApp.id,\n                                }}\n                            />\n                            <CopyText\n                                idMessage='integrations.copy_client_id'\n                                defaultMessage='Copy Client Id'\n                                value={oauthApp.id}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        {clientSecret}\n                    </div>\n                    {urls}\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: Utils.getDisplayNameByUserId(oauthApp.creator_id),\n                                    createAt: oauthApp.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n                <div className='item-actions'>\n                    {showHide}\n                    {' - '}\n                    {regen}\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/oauth2-apps/edit?id=${oauthApp.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId={t('installed_oauth_apps.delete.confirm')}\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {addOAuthApp} from 'mattermost-redux/actions/integrations';\n\nimport AddOAuthApp from './add_oauth_app.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        addOAuthAppRequest: state.requests.integrations.addOAuthApp,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOAuthApp);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractOAuthApp from '../abstract_oauth_app.jsx';\n\nconst HEADER = {id: t('add_oauth_app.header'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('installed_oauth_apps.save'), defaultMessage: 'Save'};\n\nexport default class AddOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        /**\n        * The request state for addOAuthApp action. Contains status and error\n        */\n        addOAuthAppRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add new OAuthApp\n            */\n            addOAuthApp: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addOAuthApp = async (app) => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.addOAuthApp(app);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=oauth2-apps&id=${data.id}`);\n            return;\n        }\n\n        if (this.props.addOAuthAppRequest.error) {\n            this.setState({serverError: this.props.addOAuthAppRequest.error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractOAuthApp\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                renderExtra={''}\n                action={this.addOAuthApp}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getOAuthApp, editOAuthApp} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditOAuthApp from './edit_oauth_app.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const oauthAppId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    return {\n        oauthAppId,\n        oauthApp: state.entities.integrations.oauthApps[oauthAppId],\n        enableOAuthServiceProvider,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getOAuthApp,\n            editOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOAuthApp);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport LoadingScreen from 'components/loading_screen.jsx';\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport AbstractOAuthApp from '../abstract_oauth_app.jsx';\n\nconst HEADER = {id: 'integrations.edit', defaultMessage: 'Edit'};\nconst FOOTER = {id: 'update_incoming_webhook.update', defaultMessage: 'Update'};\n\nexport default class EditOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The id of the OAuthApp to edit\n        */\n        oauthAppId: PropTypes.string.isRequired,\n\n        /**\n        * The OAuthApp data\n        */\n        oauthApp: PropTypes.object,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to get OAuthApp\n            */\n            getOAuthApp: PropTypes.func.isRequired,\n\n            /**\n            * The function to call to edit OAuthApp\n            */\n            editOAuthApp: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not OAuth applications are enabled.\n        */\n        enableOAuthServiceProvider: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOAuthServiceProvider) {\n            this.props.actions.getOAuthApp(this.props.oauthAppId);\n        }\n    }\n\n    editOAuthApp = async (app) => {\n        this.newApp = app;\n\n        if (this.props.oauthApp.id) {\n            app.id = this.props.oauthApp.id;\n        }\n\n        if (this.props.oauthApp.token) {\n            app.token = this.props.oauthApp.token;\n        }\n\n        const callbackUrlsSame = (this.props.oauthApp.callback_urls.length === app.callback_urls.length) &&\n            this.props.oauthApp.callback_urls.every((v, i) => v === app.callback_urls[i]);\n\n        if (callbackUrlsSame === false) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitOAuthApp();\n        }\n    }\n\n    handleConfirmModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitOAuthApp = async () => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.editOAuthApp(this.newApp);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/oauth2-apps`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    renderExtra = () => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_command.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_oauth_app.confirm'\n                defaultMessage='Edit OAuth 2.0 application'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_oauth_app.question'\n                defaultMessage='Your changes may break the existing OAuth 2.0 application. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitOAuthApp}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render() {\n        if (!this.props.oauthApp) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractOAuthApp\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                renderExtra={this.renderExtra()}\n                action={this.editOAuthApp}\n                serverError={this.state.serverError}\n                initialApp={this.props.oauthApp}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getCustomTeamCommands} from 'mattermost-redux/actions/integrations';\nimport {getCommands} from 'mattermost-redux/selectors/entities/integrations';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport CommandsContainer from './commands_container.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enableCommands = config.EnableCommands === 'true';\n\n    return {\n        commands: Object.values(getCommands(state)),\n        users: getUsers(state),\n        enableCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getCustomTeamCommands,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommandsContainer);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport InstalledCommands from 'components/integrations/installed_commands';\nimport AddCommand from 'components/integrations/add_command';\nimport EditCommand from 'components/integrations/edit_command';\nimport ConfirmIntegration from 'components/integrations/confirm_integration';\n\nconst CommandRoute = ({component: Component, extraProps, ...rest}) => ( //eslint-disable-line react/prop-types\n    <Route\n        {...rest}\n        render={(props) => (\n            <Component\n                {...extraProps}\n                {...props}\n            />\n        )}\n    />\n);\n\nexport default class CommandsContainer extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data needed to pass into child components\n        */\n        team: PropTypes.object,\n\n        /**\n        * The user data needed to pass into child components\n        */\n        user: PropTypes.object,\n\n        /**\n        * The users collection\n        */\n        users: PropTypes.object,\n\n        /**\n        * Installed slash commands to display\n        */\n        commands: PropTypes.array,\n\n        /**\n        * Object from react-router\n        */\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to fetch team commands\n            */\n            getCustomTeamCommands: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not commands are enabled.\n        */\n        enableCommands: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableCommands) {\n            this.props.actions.getCustomTeamCommands(this.props.team.id).then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    render() {\n        const extraProps = {\n            loading: this.state.loading,\n            commands: this.props.commands || [],\n            users: this.props.users,\n            team: this.props.team,\n            user: this.props.user,\n        };\n        return (\n            <div>\n                <Switch>\n                    <Route\n                        exact={true}\n                        path={`${this.props.match.url}/`}\n                        render={() => (<Redirect to={`${this.props.match.url}/installed`}/>)}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/installed`}\n                        component={InstalledCommands}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/add`}\n                        component={AddCommand}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/edit`}\n                        component={EditCommand}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/confirm`}\n                        component={ConfirmIntegration}\n                    />\n                </Switch>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {deleteCommand, regenCommandToken} from 'mattermost-redux/actions/integrations';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport InstalledCommands from './installed_commands.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const canManageOthersSlashCommands = haveITeamPermission(state, {team: ownProps.team.id, permission: Permissions.MANAGE_OTHERS_SLASH_COMMANDS});\n\n    return {\n        canManageOthersSlashCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            regenCommandToken,\n            deleteCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledCommands);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledCommand from '../installed_command.jsx';\n\nexport default class InstalledCommands extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team object\n        */\n        team: PropTypes.object,\n\n        /**\n        * The user object\n        */\n        user: PropTypes.object,\n\n        /**\n        * The users collection\n        */\n        users: PropTypes.object,\n\n        /**\n        * Installed slash commands to display\n        */\n        commands: PropTypes.array,\n\n        /**\n        * Set whether to show the loading... animation or not\n        */\n        loading: PropTypes.bool,\n\n        /**\n        * Set to allow changes to installed slash commands\n        */\n        canManageOthersSlashCommands: PropTypes.bool,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call when Regenerate Token link is clicked\n            */\n            regenCommandToken: PropTypes.func.isRequired,\n\n            /**\n            * The function to call when Delete link is clicked\n            */\n            deleteCommand: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    regenCommandToken = (command) => {\n        this.props.actions.regenCommandToken(command.id);\n    }\n\n    deleteCommand = (command) => {\n        this.props.actions.deleteCommand(command.id);\n    }\n\n    commandCompare(a, b) {\n        let nameA = a.display_name;\n        if (!nameA) {\n            nameA = Utils.localizeMessage('installed_commands.unnamed_command', 'Unnamed Slash Command');\n        }\n\n        let nameB = b.display_name;\n        if (!nameB) {\n            nameB = Utils.localizeMessage('installed_commands.unnamed_command', 'Unnamed Slash Command');\n        }\n\n        return nameA.localeCompare(nameB);\n    }\n\n    render() {\n        const commands = this.props.commands.\n            filter((command) => command.team_id === this.props.team.id).\n            sort(this.commandCompare).map((command) => {\n                const canChange = this.props.canManageOthersSlashCommands || this.props.user.id === command.creator_id;\n\n                return (\n                    <InstalledCommand\n                        key={command.id}\n                        team={this.props.team}\n                        command={command}\n                        onRegenToken={this.regenCommandToken}\n                        onDelete={this.deleteCommand}\n                        creator={this.props.users[command.creator_id] || {}}\n                        canChange={canChange}\n                    />\n                );\n            });\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_commands.header'\n                        defaultMessage='Installed Slash Commands'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_commands.add'\n                        defaultMessage='Add Slash Command'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/commands/add'}\n                emptyText={\n                    <FormattedMessage\n                        id='installed_commands.empty'\n                        defaultMessage='No slash commands found'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_commands.help'\n                        defaultMessage='Use slash commands to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='http://docs.mattermost.com/developer/slash-commands.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_commands.help.buildYourOwn'\n                                        defaultMessage='Build your own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_commands.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_commands.search', 'Search Slash Commands')}\n                loading={this.props.loading}\n            >\n                {commands}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {t} from 'utils/i18n';\nimport CopyText from '../copy_text.jsx';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nexport default class InstalledCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * Installed slash command to display\n        */\n        command: PropTypes.object.isRequired,\n\n        /**\n        * The function to call when Regenerate Token link is clicked\n        */\n        onRegenToken: PropTypes.func.isRequired,\n\n        /**\n        * The function to call when Delete link is clicked\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * Set to filter command, comes from BackstageList\n        */\n        filter: PropTypes.string,\n\n        /**\n        * The creator user data\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        * Set to show edit link\n        */\n        canChange: PropTypes.bool.isRequired,\n    }\n\n    handleRegenToken = (e) => {\n        e.preventDefault();\n\n        this.props.onRegenToken(this.props.command);\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.command);\n    }\n\n    matchesFilter(command, filter) {\n        if (!filter) {\n            return true;\n        }\n\n        return command.display_name.toLowerCase().indexOf(filter) !== -1 ||\n            command.description.toLowerCase().indexOf(filter) !== -1 ||\n            command.trigger.toLowerCase().indexOf(filter) !== -1;\n    }\n\n    render() {\n        const command = this.props.command;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n\n        if (!this.matchesFilter(command, filter)) {\n            return null;\n        }\n\n        let name;\n\n        if (command.display_name) {\n            name = command.display_name;\n        } else {\n            name = (\n                <FormattedMessage\n                    id='installed_commands.unnamed_command'\n                    defaultMessage='Unnamed Slash Command'\n                />\n            );\n        }\n\n        let description = null;\n        if (command.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {command.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let trigger = '- /' + command.trigger;\n        if (command.auto_complete && command.auto_complete_hint) {\n            trigger += ' ' + command.auto_complete_hint;\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.handleRegenToken}\n                    >\n                        <FormattedMessage\n                            id='installed_integrations.regenToken'\n                            defaultMessage='Regenerate Token'\n                        />\n                    </button>\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/commands/edit?id=${command.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId={t('installed_commands.delete.confirm')}\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        const commandToken = command.token;\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row'>\n                        <span className='item-details__name'>\n                            {name}\n                        </span>\n                        <span className='item-details__trigger'>\n                            {trigger}\n                        </span>\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMessage\n                                id='installed_integrations.token'\n                                defaultMessage='Token: {token}'\n                                values={{\n                                    token: commandToken,\n                                }}\n                            />\n                            <CopyText\n                                value={commandToken}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: command.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n                {actions}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {addCommand} from 'mattermost-redux/actions/integrations';\n\nimport AddCommand from './add_command.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddCommand);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractCommand from '../abstract_command.jsx';\n\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('add_command.save'), defaultMessage: 'Save'};\n\nexport default class AddCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add new command\n            */\n            addCommand: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addCommand = async (command) => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.addCommand(command);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/commands/confirm?type=commands&id=${data.id}`);\n            return;\n        }\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractCommand\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                renderExtra={''}\n                action={this.addCommand}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {editCommand, getCustomTeamCommands} from 'mattermost-redux/actions/integrations';\nimport {getCommands} from 'mattermost-redux/selectors/entities/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditCommand from './edit_command.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const commandId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableCommands = config.EnableCommands === 'true';\n\n    return {\n        commandId,\n        commands: getCommands(state),\n        enableCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getCustomTeamCommands,\n            editCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditCommand);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport LoadingScreen from 'components/loading_screen.jsx';\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport AbstractCommand from '../abstract_command.jsx';\n\nconst HEADER = {id: t('integrations.edit'), defaultMessage: 'Edit'};\nconst FOOTER = {id: t('edit_command.save'), defaultMessage: 'Update'};\n\nexport default class EditCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The id of the command to edit\n        */\n        commandId: PropTypes.string.isRequired,\n\n        /**\n        * Installed slash commands to display\n        */\n        commands: PropTypes.object,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to fetch team commands\n            */\n            getCustomTeamCommands: PropTypes.func.isRequired,\n\n            /**\n            * The function to call to edit command\n            */\n            editCommand: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not commands are enabled.\n        */\n        enableCommands: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            originalCommand: null,\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableCommands) {\n            this.props.actions.getCustomTeamCommands(this.props.team.id).then(\n                () => {\n                    this.setState({\n                        originalCommand: Object.values(this.props.commands).filter((command) => command.id === this.props.commandId)[0],\n                    });\n                }\n            );\n        }\n    }\n\n    editCommand = async (command) => {\n        this.newCommand = command;\n\n        if (this.state.originalCommand.id) {\n            command.id = this.state.originalCommand.id;\n        }\n\n        if (this.state.originalCommand.url !== this.newCommand.url ||\n            this.state.originalCommand.trigger !== this.newCommand.trigger ||\n            this.state.originalCommand.method !== this.newCommand.method) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitCommand();\n        }\n    }\n\n    handleConfirmModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitCommand = async () => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.editCommand(this.newCommand);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/commands`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    renderExtra = () => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_command.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_command.confirm'\n                defaultMessage='Edit Slash Command'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_command.question'\n                defaultMessage='Your changes may break the existing slash command. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitCommand}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render() {\n        if (!this.state.originalCommand) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractCommand\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                renderExtra={this.renderExtra()}\n                action={this.editCommand}\n                serverError={this.state.serverError}\n                initialCommand={this.state.originalCommand}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {Constants, ErrorPageTypes} from 'utils/constants.jsx';\nimport CopyText from 'components/copy_text.jsx';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport {getSiteURL} from 'utils/url.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class ConfirmIntegration extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object,\n            location: PropTypes.object,\n            commands: PropTypes.object,\n            oauthApps: PropTypes.object,\n            incomingHooks: PropTypes.object,\n            outgoingHooks: PropTypes.object,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (new URLSearchParams(this.props.location.search)).get('type'),\n            id: (new URLSearchParams(this.props.location.search)).get('id'),\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('keypress', this.handleKeyPress);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keypress', this.handleKeyPress);\n    }\n\n    handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            browserHistory.push('/' + this.props.team.name + '/integrations/' + this.state.type);\n        }\n    }\n\n    render() {\n        let headerText = null;\n        let helpText = null;\n        let tokenText = null;\n\n        const command = this.props.commands[this.state.id];\n        const incomingHook = this.props.incomingHooks[this.state.id];\n        const outgoingHook = this.props.outgoingHooks[this.state.id];\n        const oauthApp = this.props.oauthApps[this.state.id];\n\n        if (this.state.type === Constants.Integrations.COMMAND && command) {\n            const commandToken = command.token;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_commands.header'}\n                    defaultMessage='Slash Commands'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='add_command.doneHelp'\n                        defaultMessage='Your slash command has been set up. The following token will be sent in the outgoing payload. Please use it to verify the request came from your Mattermost team (see [documentation](!https://docs.mattermost.com/developer/slash-commands.html) for further details).'\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_command.token'\n                        defaultMessage='**Token**: {token}'\n                        values={{\n                            token: commandToken,\n                        }}\n                    />\n                    <CopyText\n                        value={commandToken}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.INCOMING_WEBHOOK && incomingHook) {\n            const incomingHookToken = getSiteURL() + '/hooks/' + incomingHook.id;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_incoming_webhooks.header'}\n                    defaultMessage='Incoming Webhooks'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='add_incoming_webhook.doneHelp'\n                        defaultMessage='Your incoming webhook has been set up. Please send data to the following URL (see [documentation](!https://docs.mattermost.com/developer/webhooks-incoming.html) for further details).'\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_incoming_webhook.url'\n                        defaultMessage='**URL**: {url}'\n                        values={{\n                            url: incomingHookToken,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_secret'\n                        defaultMessage='Copy Client Secret'\n                        value={incomingHookToken}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.OUTGOING_WEBHOOK && outgoingHook) {\n            const outgoingHookToken = outgoingHook.token;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_outgoing_webhooks.header'}\n                    defaultMessage='Outgoing Webhooks'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='add_outgoing_webhook.doneHelp'\n                        defaultMessage='Your outgoing webhook has been set up. The following token will be sent in the outgoing payload. Please use it to verify the request came from your Mattermost team (see [documentation](!https://docs.mattermost.com/developer/webhooks-outgoing.html) for further details).'\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_outgoing_webhook.token'\n                        defaultMessage='**Token**: {token}'\n                        values={{\n                            token: outgoingHookToken,\n                        }}\n                    />\n                    <CopyText\n                        value={outgoingHookToken}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.OAUTH_APP && oauthApp) {\n            const oauthAppToken = oauthApp.id;\n            const oauthAppSecret = oauthApp.client_secret;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_oauth_apps.header'}\n                    defaultMessage='OAuth 2.0 Applications'\n                />\n            );\n\n            helpText = [];\n            helpText.push(\n                <p key='add_oauth_app.doneHelp'>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.doneHelp'\n                        defaultMessage='Your OAuth 2.0 application has been set up. Please use the following Client ID and Client Secret when requesting authorization for your application (see [documentation](!https://docs.mattermost.com/developer/oauth-2-0-applications.html) for further details).'\n                    />\n                </p>\n            );\n            helpText.push(\n                <p key='add_oauth_app.clientId'>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.clientId'\n                        defaultMessage='**Client ID**: {id}'\n                        values={{\n                            id: oauthAppToken,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_id'\n                        defaultMessage='Copy Client Id'\n                        value={oauthAppToken}\n                    />\n                    <br/>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.clientSecret'\n                        defaultMessage='**Client Secret**: {secret}'\n                        values={{\n                            secret: oauthAppSecret,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_secret'\n                        defaultMessage='Copy Client Secret'\n                        value={oauthAppSecret}\n                    />\n                </p>\n            );\n\n            helpText.push(\n                <p key='add_oauth_app.doneUrlHelp'>\n                    <FormattedMessage\n                        id='add_oauth_app.doneUrlHelp'\n                        defaultMessage='The following are your authorized redirect URL(s).'\n                    />\n                </p>\n            );\n\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.url'\n                        defaultMessage='**URL(s)**: {url}'\n                        values={{\n                            url: oauthApp.callback_urls,\n                        }}\n                    />\n                </p>\n            );\n        } else {\n            browserHistory.replace(`/error?type=${ErrorPageTypes.PAGE_NOT_FOUND}`);\n            return '';\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/integrations/' + this.state.type}>\n                        {headerText}\n                    </Link>\n                    <FormattedMessage\n                        id='integrations.add'\n                        defaultMessage='Add'\n                    />\n                </BackstageHeader>\n                <div className='backstage-form backstage-form__confirmation'>\n                    <h4 className='backstage-form__title'>\n                        <FormattedMessage\n                            id='integrations.successful'\n                            defaultMessage='Setup Successful'\n                        />\n                    </h4>\n                    {helpText}\n                    {tokenText}\n                    <div className='backstage-form__footer'>\n                        <Link\n                            className='btn btn-primary'\n                            type='submit'\n                            to={'/' + this.props.team.name + '/integrations/' + this.state.type}\n                        >\n                            <FormattedMessage\n                                id='integrations.done'\n                                defaultMessage='Done'\n                            />\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nimport BackstageCategory from './backstage_category.jsx';\nimport BackstageSection from './backstage_section.jsx';\n\nexport default class BackstageSidebar extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object.isRequired,\n            user: PropTypes.object.isRequired,\n            enableCustomEmoji: PropTypes.bool.isRequired,\n            enableIncomingWebhooks: PropTypes.bool.isRequired,\n            enableOutgoingWebhooks: PropTypes.bool.isRequired,\n            enableCommands: PropTypes.bool.isRequired,\n            enableOAuthServiceProvider: PropTypes.bool.isRequired,\n            canCreateCustomEmoji: PropTypes.bool.isRequired,\n        };\n    }\n\n    renderCustomEmoji() {\n        if (!this.props.enableCustomEmoji || !this.props.canCreateCustomEmoji) {\n            return null;\n        }\n\n        return (\n            <BackstageCategory\n                name='emoji'\n                parentLink={'/' + this.props.team.name}\n                icon='fa-smile-o'\n                title={\n                    <FormattedMessage\n                        id='backstage_sidebar.emoji'\n                        defaultMessage='Custom Emoji'\n                    />\n                }\n            />\n        );\n    }\n\n    renderIntegrations() {\n        if (!this.props.enableIncomingWebhooks &&\n            !this.props.enableOutgoingWebhooks &&\n            !this.props.enableCommands &&\n            !this.props.enableOAuthServiceProvider) {\n            return null;\n        }\n\n        let incomingWebhooks = null;\n        if (this.props.enableIncomingWebhooks) {\n            incomingWebhooks = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_WEBHOOKS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='incoming_webhooks'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.incoming_webhooks'\n                                defaultMessage='Incoming Webhooks'\n                            />\n                        )}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let outgoingWebhooks = null;\n        if (this.props.enableOutgoingWebhooks) {\n            outgoingWebhooks = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_WEBHOOKS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='outgoing_webhooks'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.outgoing_webhooks'\n                                defaultMessage='Outgoing Webhooks'\n                            />\n                        )}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let commands = null;\n        if (this.props.enableCommands) {\n            commands = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_SLASH_COMMANDS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='commands'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.commands'\n                                defaultMessage='Slash Commands'\n                            />\n                        )}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let oauthApps = null;\n        if (this.props.enableOAuthServiceProvider) {\n            oauthApps = (\n                <SystemPermissionGate permissions={[Permissions.MANAGE_OAUTH]}>\n                    <BackstageSection\n                        name='oauth2-apps'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.oauthApps'\n                                defaultMessage='OAuth 2.0 Applications'\n                            />\n                        }\n                    />\n                </SystemPermissionGate>\n            );\n        }\n\n        return (\n            <TeamPermissionGate\n                permissions={[Permissions.MANAGE_WEBHOOKS, Permissions.MANAGE_SLASH_COMMANDS, Permissions.MANAGE_OAUTH]}\n                teamId={this.props.team.id}\n            >\n                <BackstageCategory\n                    name='integrations'\n                    icon='fa-link'\n                    parentLink={'/' + this.props.team.name}\n                    title={\n                        <FormattedMessage\n                            id='backstage_sidebar.integrations'\n                            defaultMessage='Integrations'\n                        />\n                    }\n                >\n                    {incomingWebhooks}\n                    {outgoingWebhooks}\n                    {commands}\n                    {oauthApps}\n                </BackstageCategory>\n            </TeamPermissionGate>\n        );\n    }\n\n    render() {\n        return (\n            <div className='backstage-sidebar'>\n                <ul>\n                    {this.renderCustomEmoji()}\n                    {this.renderIntegrations()}\n                </ul>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, NavLink} from 'react-router-dom';\n\nexport default class BackstageCategory extends React.Component {\n    static get propTypes() {\n        return {\n            name: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            icon: PropTypes.string.isRequired,\n            parentLink: PropTypes.string,\n            children: PropTypes.arrayOf(PropTypes.element),\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n            children: [],\n        };\n    }\n\n    static get contextTypes() {\n        return {\n            router: PropTypes.object.isRequired,\n        };\n    }\n\n    render() {\n        const {name, title, icon, parentLink, children} = this.props;\n\n        const link = parentLink + '/' + name;\n\n        return (\n            <li className='backstage-sidebar__category'>\n                <NavLink\n                    to={link}\n                    className='category-title'\n                    activeClassName='category-title--active'\n                >\n                    <i className={'fa ' + icon}/>\n                    <span className='category-title__text'>\n                        {title}\n                    </span>\n                </NavLink>\n                <Route\n                    path={link}\n                    render={() => (\n                        <ul className='sections'>\n                            {\n                                React.Children.map(children, (child) => {\n                                    if (!child) {\n                                        return child;\n                                    }\n\n                                    return React.cloneElement(child, {\n                                        parentLink: link,\n                                    });\n                                })\n                            }\n                        </ul>\n                    )}\n                />\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nexport default class BackstageSection extends React.Component {\n    static get propTypes() {\n        return {\n            name: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            parentLink: PropTypes.string,\n            subsection: PropTypes.bool,\n            children: PropTypes.arrayOf(PropTypes.element),\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n            subsection: false,\n            children: [],\n        };\n    }\n\n    static get contextTypes() {\n        return {\n            router: PropTypes.object.isRequired,\n        };\n    }\n\n    getLink() {\n        return this.props.parentLink + '/' + this.props.name;\n    }\n\n    render() {\n        const {title, subsection, children} = this.props;\n\n        const link = this.getLink();\n\n        let clonedChildren = null;\n        if (children.length > 0) {\n            clonedChildren = (\n                <ul className='subsections'>\n                    {\n                        React.Children.map(children, (child) => {\n                            return React.cloneElement(child, {\n                                parentLink: link,\n                                subsection: true,\n                            });\n                        })\n                    }\n                </ul>\n            );\n        }\n\n        let className = 'section';\n        if (subsection) {\n            className = 'subsection';\n        }\n\n        return (\n            <li className={className}>\n                <NavLink\n                    className={`${className}-title`}\n                    activeClassName={`${className}-title--active`}\n                    to={link}\n                >\n                    <span className={`${className}-title__text`}>\n                        {title}\n                    </span>\n                </NavLink>\n                {clonedChildren}\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {Constants} from 'utils/constants.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class BackstageNavbar extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object.isRequired,\n            siteName: PropTypes.string,\n        };\n    }\n\n    render() {\n        if (!this.props.team) {\n            return null;\n        }\n\n        return (\n            <div className='backstage-navbar'>\n                <Link\n                    className='backstage-navbar__back'\n                    to={`/${this.props.team.name}/channels/${Constants.DEFAULT_CHANNEL}`}\n                >\n                    <i\n                        className='fa fa-angle-left'\n                        title={localizeMessage('generic_icons.back', 'Back Icon')}\n                    />\n                    <span>\n                        <FormattedMessage\n                            id='backstage_navbar.backToMattermost'\n                            defaultMessage='Back to {siteName}'\n                            values={{\n                                siteName: this.props.siteName,\n                            }}\n                        />\n                    </span>\n                </Link>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class BackstageHeader extends React.Component {\n    static get propTypes() {\n        return {\n            children: PropTypes.node,\n        };\n    }\n\n    render() {\n        const children = [];\n\n        React.Children.forEach(this.props.children, (child, index) => {\n            if (index !== 0) {\n                children.push(\n                    <span\n                        key={'divider' + index}\n                        className='backstage-header__divider'\n                    >\n                        <i\n                            className='fa fa-angle-right'\n                            title={localizeMessage('generic_icons.breadcrumb', 'Breadcrumb Icon')}\n                        />\n                    </span>\n                );\n            }\n\n            children.push(child);\n        });\n\n        return (\n            <div className='backstage-header'>\n                <h1>\n                    {children}\n                </h1>\n            </div>\n        );\n    }\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getAutocompleteCommandsList = exports.getAllCommands = exports.getOutgoingHooksInCurrentTeam = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nexports.getIncomingHooks = getIncomingHooks;\nexports.getOutgoingHooks = getOutgoingHooks;\nexports.getCommands = getCommands;\nexports.getOAuthApps = getOAuthApps;\nexports.getSystemCommands = getSystemCommands;\n\nvar _reselect = require('reselect');\n\nvar _teams = require('./teams');\n\nfunction getIncomingHooks(state) {\n    return state.entities.integrations.incomingHooks;\n}\n\nfunction getOutgoingHooks(state) {\n    return state.entities.integrations.outgoingHooks;\n}\n\nfunction getCommands(state) {\n    return state.entities.integrations.commands;\n}\n\nfunction getOAuthApps(state) {\n    return state.entities.integrations.oauthApps;\n}\n\nfunction getSystemCommands(state) {\n    return state.entities.integrations.systemCommands;\n}\n\n/**\n * get outgoing hooks in current team\n */\nvar getOutgoingHooksInCurrentTeam = exports.getOutgoingHooksInCurrentTeam = (0, _reselect.createSelector)(_teams.getCurrentTeamId, getOutgoingHooks, function (teamId, hooks) {\n    return Object.values(hooks).filter(function (o) {\n        return o.teamId === teamId;\n    });\n});\n\nvar getAllCommands = exports.getAllCommands = (0, _reselect.createSelector)(getCommands, getSystemCommands, function (commands, systemCommands) {\n    return _extends({}, commands, systemCommands);\n});\n\nvar getAutocompleteCommandsList = exports.getAutocompleteCommandsList = (0, _reselect.createSelector)(getAllCommands, _teams.getCurrentTeamId, function (commands, currentTeamId) {\n    return Object.values(commands).filter(function (command) {\n        return command && (!command.team_id || command.team_id === currentTeamId) && command.auto_complete;\n    }).sort(function (a, b) {\n        return a.display_name.localeCompare(b.display_name);\n    });\n});","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React, {PureComponent} from 'react';\n\nimport loadingGif from 'images/load.gif';\n\nexport default class SpinnerButton extends PureComponent {\n    static defaultProps = {\n        spinning: false,\n    }\n\n    static propTypes = {\n\n        /**\n         * Children to show when not spinning\n         */\n        children: PropTypes.node,\n\n        /**\n         * Set to true to spin\n         */\n        spinning: PropTypes.bool.isRequired,\n\n        /**\n         * Callback function when button is clicked\n         */\n        onClick: PropTypes.func,\n    }\n\n    render() {\n        const {spinning, children, ...props} = this.props; // eslint-disable-line no-use-before-define\n\n        if (spinning) {\n            return (\n                <img\n                    className='spinner-button__gif'\n                    src={loadingGif}\n                />\n            );\n        }\n\n        return (\n            <button\n                className='btn btn-primary'\n                {...props}\n            >\n                {children}\n            </button>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\n\nimport Constants from 'utils/constants.jsx';\nimport {copyToClipboard} from 'utils/utils.jsx';\n\nexport default class CopyText extends React.PureComponent {\n    static propTypes = {\n        value: PropTypes.string.isRequired,\n\n        defaultMessage: PropTypes.string,\n\n        idMessage: PropTypes.string,\n    };\n\n    static get defaultProps() {\n        return {\n            idMessage: 'integrations.copy',\n            defaultMessage: 'Copy',\n        };\n    }\n\n    copyText = (e) => {\n        e.preventDefault();\n        copyToClipboard(this.props.value);\n    };\n\n    render() {\n        if (!document.queryCommandSupported('copy')) {\n            return null;\n        }\n\n        const tooltip = (\n            <Tooltip id='copy'>\n                <FormattedMessage\n                    id={this.props.idMessage}\n                    defaultMessage={this.props.defaultMessage}\n                />\n            </Tooltip>\n        );\n\n        return (\n            <OverlayTrigger\n                trigger={['hover', 'focus']}\n                delayShow={Constants.OVERLAY_TIME_DELAY}\n                placement='top'\n                overlay={tooltip}\n            >\n                <a\n                    href='#'\n                    className='fa fa-copy margin-left'\n                    onClick={this.copyText}\n                />\n            </OverlayTrigger>\n        );\n    }\n}\n"],"sourceRoot":""}