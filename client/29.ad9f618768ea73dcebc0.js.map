{"version":3,"sources":["webpack:///./components/create_team/index.js","webpack:///./components/create_team/create_team.jsx","webpack:///./components/create_team/components/display_name.jsx","webpack:///./components/create_team/components/team_url/index.js","webpack:///./components/create_team/components/team_url/team_url.jsx","webpack:///./components/common/back_button.jsx","webpack:///./images/logo.png","webpack:///./components/common/site_name_and_description.jsx"],"names":["_reactRedux","__webpack_require__","_general","_channels","_teams","connect","state","config","getConfig","currentChannel","getCurrentChannel","currentTeam","getCurrentTeam","customDescriptionText","CustomDescriptionText","siteName","SiteName","CreateTeam","_reactRouterDom","props","_classCallCheck3","default","this","_this","_possibleConstructorReturn3","__proto__","_getPrototypeOf2","call","_initialiseProps","_this2","_props","match","url","name","_react2","createElement","_announcement_bar2","_back_button2","className","_site_name_and_description2","Switch","Route","path","render","_display_name2","_extends3","updateParent","_team_url2","Redirect","to","React","PureComponent","propTypes","PropTypes","object","string","shape","isRequired","_this3","setState","history","push","wizard","_reactIntl","_diagnostics_actions","_url","_utils","TeamSignupDisplayNamePage","submitNext","e","preventDefault","displayName","ReactDOM","findDOMNode","refs","value","trim","length","Constants","MIN_TEAMNAME_LENGTH","MAX_TEAMNAME_LENGTH","nameError","FormattedMessage","id","defaultMessage","values","min","max","newState","team","display_name","cleanUpUrlable","handleFocus","currentTarget","select","trackEvent","nameDivClass","src","logoImage","type","ref","placeholder","maxLength","defaultValue","autoFocus","onFocus","spellCheck","onClick","title","localizeMessage","func","_redux","dispatch","actions","bindActionCreators","checkIfTeamExists","createTeam","TeamUrl","_reactBootstrap","URL","submitBack","_ref","_asyncToGenerator3","_regenerator2","mark","_callee","cleanedName","urlRegex","_this$props$actions","index","teamSignup","_ref2","_ref3","data","error","wrap","_context","prev","next","abrupt","test","RESERVED_TEAM_NAMES","indexOf","_formatted_markdown_message2","isLoading","JSON","parse","_stringify2","sent","exists","message","stop","_x","apply","arguments","getSiteURL","urlTooltip","Tooltip","finishMessage","OverlayTrigger","trigger","delayShow","OVERLAY_TIME_DELAY","placement","overlay","Button","bsStyle","disabled","href","BackButton","Link","defaultProps","module","exports","p","SiteNameAndDescription","description","Fragment"],"mappings":"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","file":"29.ad9f618768ea73dcebc0.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport CreateTeam from './create_team';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const currentChannel = getCurrentChannel(state);\n    const currentTeam = getCurrentTeam(state);\n\n    const customDescriptionText = config.CustomDescriptionText;\n    const siteName = config.SiteName;\n\n    return {\n        currentChannel,\n        currentTeam,\n        customDescriptionText,\n        siteName,\n    };\n}\n\nexport default connect(mapStateToProps)(CreateTeam);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport AnnouncementBar from 'components/announcement_bar';\nimport BackButton from 'components/common/back_button.jsx';\nimport DisplayName from 'components/create_team/components/display_name';\nimport SiteNameAndDescription from 'components/common/site_name_and_description';\nimport TeamUrl from 'components/create_team/components/team_url';\n\nexport default class CreateTeam extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Object containing information on the current team, used to define BackButton's url\n         */\n        currentTeam: PropTypes.object,\n\n        /*\n         * Object containing information on the current selected channel, used to define BackButton's url\n         */\n        currentChannel: PropTypes.object,\n\n        /*\n         * String containing the custom branding's text\n         */\n        customDescriptionText: PropTypes.string,\n\n        /*\n         * String containing the custom branding's Site Name\n         */\n        siteName: PropTypes.string,\n\n        /*\n         * Object from react-router\n         */\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        const state = {};\n        state.team = {};\n        state.wizard = 'display_name';\n        this.state = state;\n    }\n\n    updateParent = (state) => {\n        this.setState(state);\n        this.props.history.push('/create_team/' + state.wizard);\n    }\n\n    render() {\n        const {\n            currentChannel,\n            currentTeam,\n            customDescriptionText,\n            match,\n            siteName,\n        } = this.props;\n\n        let url = '/select_team';\n        if (currentTeam) {\n            url = `/${currentTeam.name}`;\n            if (currentChannel) {\n                url += `/channels/${currentChannel.name}`;\n            }\n        }\n\n        return (\n            <div>\n                <AnnouncementBar/>\n                <BackButton url={url}/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <SiteNameAndDescription\n                            customDescriptionText={customDescriptionText}\n                            siteName={siteName}\n                        />\n                        <div className='signup__content'>\n                            <Switch>\n                                <Route\n                                    path={`${this.props.match.url}/display_name`}\n                                    render={(props) => (\n                                        <DisplayName\n                                            state={this.state}\n                                            updateParent={this.updateParent}\n                                            {...props}\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path={`${this.props.match.url}/team_url`}\n                                    render={(props) => (\n                                        <TeamUrl\n                                            state={this.state}\n                                            updateParent={this.updateParent}\n                                            {...props}\n                                        />\n                                    )}\n                                />\n                                <Redirect to={`${match.url}/display_name`}/>\n                            </Switch>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport {cleanUpUrlable} from 'utils/url.jsx';\nimport logoImage from 'images/logo.png';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class TeamSignupDisplayNamePage extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Object containing team's display_name and name\n         */\n        state: PropTypes.object,\n\n        /*\n         * Function that updates parent component with state props\n         */\n        updateParent: PropTypes.func,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        trackEvent('signup', 'signup_team_01_name');\n    }\n\n    submitNext = (e) => {\n        e.preventDefault();\n\n        var displayName = ReactDOM.findDOMNode(this.refs.name).value.trim();\n        if (!displayName) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.display_name.required'\n                    defaultMessage='This field is required'\n                />),\n            });\n            return;\n        } else if (displayName.length < Constants.MIN_TEAMNAME_LENGTH || displayName.length > Constants.MAX_TEAMNAME_LENGTH) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.display_name.charLength'\n                    defaultMessage='Name must be {min} or more characters up to a maximum of {max}. You can add a longer team description later.'\n                    values={{\n                        min: Constants.MIN_TEAMNAME_LENGTH,\n                        max: Constants.MAX_TEAMNAME_LENGTH,\n                    }}\n                />),\n            });\n            return;\n        }\n\n        const newState = this.props.state;\n        newState.wizard = 'team_url';\n        newState.team.display_name = displayName;\n        newState.team.name = cleanUpUrlable(displayName);\n        this.props.updateParent(newState);\n    }\n\n    handleFocus = (e) => {\n        e.preventDefault();\n        e.currentTarget.select();\n    }\n\n    render() {\n        var nameError = null;\n        var nameDivClass = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameDivClass += ' has-error';\n        }\n\n        return (\n            <div>\n                <form>\n                    <img\n                        className='signup-team-logo'\n                        src={logoImage}\n                    />\n                    <h2>\n                        <FormattedMessage\n                            id='create_team.display_name.teamName'\n                            defaultMessage='Team Name'\n                        />\n                    </h2>\n                    <div className={nameDivClass}>\n                        <div className='row'>\n                            <div className='col-sm-9'>\n                                <input\n                                    type='text'\n                                    ref='name'\n                                    className='form-control'\n                                    placeholder=''\n                                    maxLength='128'\n                                    defaultValue={this.props.state.team.display_name}\n                                    autoFocus={true}\n                                    onFocus={this.handleFocus}\n                                    spellCheck='false'\n                                />\n                            </div>\n                        </div>\n                        {nameError}\n                    </div>\n                    <div>\n                        <FormattedMessage\n                            id='create_team.display_name.nameHelp'\n                            defaultMessage='Name your team in any language. Your team name shows in menus and headings.'\n                        />\n                    </div>\n                    <button\n                        type='submit'\n                        className='btn btn-primary margin--extra'\n                        onClick={this.submitNext}\n                    >\n                        <FormattedMessage\n                            id='create_team.display_name.next'\n                            defaultMessage='Next'\n                        />\n                        <i\n                            className='fa fa-chevron-right'\n                            title={localizeMessage('generic_icons.next', 'Next Icon')}\n                        />\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {checkIfTeamExists, createTeam} from 'mattermost-redux/actions/teams';\n\nimport TeamUrl from './team_url';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            checkIfTeamExists,\n            createTeam,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(TeamUrl);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Button, OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as URL from 'utils/url.jsx';\nimport logoImage from 'images/logo.png';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport default class TeamUrl extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Object containing team's display_name and name\n         */\n        state: PropTypes.object,\n\n        /*\n         * Function that updates parent component with state props\n         */\n        updateParent: PropTypes.func,\n\n        /*\n         * Object with redux action creators\n         */\n        actions: PropTypes.shape({\n\n            /*\n             * Action creator to check if a team already exists\n             */\n            checkIfTeamExists: PropTypes.func.isRequired,\n\n            /*\n             * Action creator to create a new team\n             */\n            createTeam: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nameError: '',\n            isLoading: false,\n        };\n    }\n\n    componentDidMount() {\n        trackEvent('signup', 'signup_team_02_url');\n    }\n\n    submitBack = (e) => {\n        e.preventDefault();\n        const newState = this.props.state;\n        newState.wizard = 'display_name';\n        this.props.updateParent(newState);\n    }\n\n    submitNext = async (e) => {\n        e.preventDefault();\n\n        const name = ReactDOM.findDOMNode(this.refs.name).value.trim();\n        const cleanedName = URL.cleanUpUrlable(name);\n        const urlRegex = /^[a-z]+([a-z\\-0-9]+|(__)?)[a-z0-9]+$/g;\n        const {actions: {checkIfTeamExists, createTeam}} = this.props;\n\n        if (!name) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.required'\n                    defaultMessage='This field is required'\n                />),\n            });\n            return;\n        }\n\n        if (cleanedName.length < Constants.MIN_TEAMNAME_LENGTH || cleanedName.length > Constants.MAX_TEAMNAME_LENGTH) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.charLength'\n                    defaultMessage='Name must be {min} or more characters up to a maximum of {max}'\n                    values={{\n                        min: Constants.MIN_TEAMNAME_LENGTH,\n                        max: Constants.MAX_TEAMNAME_LENGTH,\n                    }}\n                />),\n            });\n            return;\n        }\n\n        if (cleanedName !== name || !urlRegex.test(name)) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.regex'\n                    defaultMessage=\"Use only lower case letters, numbers and dashes. Must start with a letter and can't end in a dash.\"\n                />),\n            });\n            return;\n        }\n\n        for (let index = 0; index < Constants.RESERVED_TEAM_NAMES.length; index++) {\n            if (cleanedName.indexOf(Constants.RESERVED_TEAM_NAMES[index]) === 0) {\n                this.setState({nameError: (\n                    <FormattedMarkdownMessage\n                        id='create_team.team_url.taken'\n                        defaultMessage='This URL [starts with a reserved word](!https://docs.mattermost.com/help/getting-started/creating-teams.html#team-url) or is unavailable. Please try another.'\n                    />),\n                });\n                return;\n            }\n        }\n\n        this.setState({isLoading: true});\n        var teamSignup = JSON.parse(JSON.stringify(this.props.state));\n        teamSignup.team.type = 'O';\n        teamSignup.team.name = name;\n\n        const {exists} = await checkIfTeamExists(name);\n\n        if (exists) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.unavailable'\n                    defaultMessage='This URL is taken or unavailable. Please try another.'\n                />),\n            });\n            this.setState({isLoading: false});\n            return;\n        }\n\n        const {data, error} = await createTeam(teamSignup.team);\n\n        if (data) {\n            this.props.history.push('/' + data.name + '/channels/town-square');\n            trackEvent('signup', 'signup_team_03_complete');\n        } else if (error) {\n            this.setState({nameError: error.message});\n            this.setState({isLoading: false});\n        }\n    }\n\n    handleFocus = (e) => {\n        e.preventDefault();\n        e.currentTarget.select();\n    }\n\n    render() {\n        let nameError = null;\n        let nameDivClass = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameDivClass += ' has-error';\n        }\n\n        const title = `${URL.getSiteURL()}/`;\n        const urlTooltip = (\n            <Tooltip id='urlTooltip'>{title}</Tooltip>\n        );\n\n        let finishMessage = (\n            <FormattedMessage\n                id='create_team.team_url.finish'\n                defaultMessage='Finish'\n            />\n        );\n\n        if (this.state.isLoading) {\n            finishMessage = (\n                <FormattedMessage\n                    id='create_team.team_url.creatingTeam'\n                    defaultMessage='Creating team...'\n                />\n            );\n        }\n\n        return (\n            <div>\n                <form>\n                    <img\n                        className='signup-team-logo'\n                        src={logoImage}\n                    />\n                    <h2>\n                        <FormattedMessage\n                            id='create_team.team_url.teamUrl'\n                            defaultMessage='Team URL'\n                        />\n                    </h2>\n                    <div className={nameDivClass}>\n                        <div className='row'>\n                            <div className='col-sm-11'>\n                                <div className='input-group input-group--limit'>\n                                    <OverlayTrigger\n                                        trigger={['hover', 'focus']}\n                                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                                        placement='top'\n                                        overlay={urlTooltip}\n                                    >\n                                        <span className='input-group-addon'>\n                                            {title}\n                                        </span>\n                                    </OverlayTrigger>\n                                    <input\n                                        type='text'\n                                        ref='name'\n                                        className='form-control'\n                                        placeholder=''\n                                        maxLength='128'\n                                        defaultValue={this.props.state.team.name}\n                                        autoFocus={true}\n                                        onFocus={this.handleFocus}\n                                        spellCheck='false'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {nameError}\n                    </div>\n                    <p>\n                        <FormattedMessage\n                            id='create_team.team_url.webAddress'\n                            defaultMessage='Choose the web address of your new team:'\n                        />\n                    </p>\n                    <ul className='color--light'>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint1'\n                                defaultMessage='Short and memorable is best'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint2'\n                                defaultMessage='Use lowercase letters, numbers and dashes'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint3'\n                                defaultMessage=\"Must start with a letter and can't end in a dash\"\n                            />\n                        </li>\n                    </ul>\n                    <div className='margin--extra'>\n                        <Button\n                            type='submit'\n                            bsStyle='primary'\n                            disabled={this.state.isLoading}\n                            onClick={this.submitNext}\n                        >\n                            {finishMessage}\n                        </Button>\n                    </div>\n                    <div className='margin--extra'>\n                        <a\n                            href='#'\n                            onClick={this.submitBack}\n                        >\n                            <FormattedMessage\n                                id='create_team.team_url.back'\n                                defaultMessage='Back to previous step'\n                            />\n                        </a>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class BackButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * URL to return to\n         */\n        url: PropTypes.string,\n\n        /**\n         * An optional click handler that will trigger when the user clicks on the back button\n         */\n        onClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        url: '/',\n    };\n\n    render() {\n        return (\n            <div className='signup-header'>\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <span\n                        className='fa fa-chevron-left'\n                        title={localizeMessage('generic_icons.back', 'Back Icon')}\n                    />\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/5d6be4015bde2a4e0358c8bc110deadc.png\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class SiteNameAndDescription extends React.PureComponent {\n    static propTypes = {\n        customDescriptionText: PropTypes.string,\n        siteName: PropTypes.string,\n    };\n\n    static defaultProps = {\n        siteName: 'Mattermost',\n    };\n\n    render() {\n        const {\n            customDescriptionText,\n            siteName,\n        } = this.props;\n        let description = null;\n        if (customDescriptionText) {\n            description = customDescriptionText;\n        } else {\n            description = (\n                <FormattedMessage\n                    id='web.root.signup_info'\n                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\n                />\n            );\n        }\n\n        return (\n            <React.Fragment>\n                <h1>{siteName}</h1>\n                <h4 className='color--light'>\n                    {description}\n                </h4>\n            </React.Fragment>\n        );\n    }\n}\n"],"sourceRoot":""}