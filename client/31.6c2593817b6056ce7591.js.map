{"version":3,"sources":["webpack:///./node_modules/babel-runtime/core-js/object/entries.js","webpack:///./node_modules/chart.js/src/helpers/helpers.core.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/fn/object/entries.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.entries.js","webpack:///./node_modules/mattermost-redux/actions/schemes.js","webpack:///./node_modules/mattermost-redux/selectors/entities/schemes.js","webpack:///./node_modules/mattermost-redux/actions/jobs.js","webpack:///./node_modules/chart.js/src/chart.js","webpack:///./node_modules/chartjs-color/index.js","webpack:///./node_modules/chart.js/src/core/core.interaction.js","webpack:///./node_modules/chart.js/src/platforms/platform.js","webpack:///./node_modules/chart.js/src/core/core.plugins.js","webpack:///./node_modules/mattermost-redux/selectors/entities/jobs.js","webpack:///./node_modules/chart.js/src/core/core.js","webpack:///./node_modules/chart.js/src/helpers/helpers.easing.js","webpack:///./node_modules/chart.js/src/helpers/helpers.canvas.js","webpack:///./node_modules/chart.js/src/helpers/helpers.options.js","webpack:///./node_modules/chart.js/src/core/core.helpers.js","webpack:///./node_modules/color-convert/index.js","webpack:///./node_modules/color-convert/conversions.js","webpack:///./node_modules/chartjs-color-string/color-string.js","webpack:///./node_modules/color-name/index.js","webpack:///./node_modules/chart.js/src/elements/element.arc.js","webpack:///./node_modules/chart.js/src/elements/element.line.js","webpack:///./node_modules/chart.js/src/elements/element.point.js","webpack:///./node_modules/chart.js/src/elements/element.rectangle.js","webpack:///./node_modules/chart.js/src/platforms/platform.basic.js","webpack:///./node_modules/chart.js/src/platforms/platform.dom.js","webpack:///./node_modules/chart.js/src/core/core.animation.js","webpack:///./node_modules/chart.js/src/core/core.controller.js","webpack:///./node_modules/chart.js/src/core/core.datasetController.js","webpack:///./node_modules/chart.js/src/core/core.scaleService.js","webpack:///./node_modules/chart.js/src/core/core.scale.js","webpack:///./node_modules/chart.js/src/core/core.tooltip.js","webpack:///./node_modules/chart.js/src/scales/scale.linearbase.js","webpack:///./node_modules/chart.js/src/scales/scale.category.js","webpack:///./node_modules/chart.js/src/scales/scale.linear.js","webpack:///./node_modules/chart.js/src/scales/scale.logarithmic.js","webpack:///./node_modules/chart.js/src/scales/scale.radialLinear.js","webpack:///./node_modules/chart.js/src/scales/scale.time.js","webpack:///./node_modules/chart.js/src/controllers/controller.bar.js","webpack:///./node_modules/chart.js/src/controllers/controller.bubble.js","webpack:///./node_modules/chart.js/src/controllers/controller.doughnut.js","webpack:///./node_modules/chart.js/src/controllers/controller.line.js","webpack:///./node_modules/chart.js/src/controllers/controller.polarArea.js","webpack:///./node_modules/chart.js/src/controllers/controller.radar.js","webpack:///./node_modules/chart.js/src/controllers/controller.scatter.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bar.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bubble.js","webpack:///./node_modules/chart.js/src/charts/Chart.Doughnut.js","webpack:///./node_modules/chart.js/src/charts/Chart.Line.js","webpack:///./node_modules/chart.js/src/charts/Chart.PolarArea.js","webpack:///./node_modules/chart.js/src/charts/Chart.Radar.js","webpack:///./node_modules/chart.js/src/charts/Chart.Scatter.js","webpack:///./node_modules/chart.js/src/plugins/index.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler.js","webpack:///./node_modules/chart.js/src/plugins/plugin.legend.js","webpack:///./node_modules/chart.js/src/plugins/plugin.title.js","webpack:///./node_modules/mattermost-redux/constants/schemes.js","webpack:///./node_modules/chart.js/src/helpers/index.js","webpack:///./node_modules/chart.js/src/core/core.defaults.js","webpack:///./node_modules/chart.js/src/core/core.element.js","webpack:///./node_modules/chart.js/src/elements/index.js","webpack:///./node_modules/mattermost-redux/selectors/entities/admin.js","webpack:///./node_modules/chart.js/src/core/core.layouts.js","webpack:///./node_modules/chart.js/src/core/core.ticks.js"],"names":["module","exports","default","__webpack_require__","__esModule","helpers","noop","uid","id","isNullOrUndef","value","isArray","Array","Object","prototype","toString","call","isObject","valueOrDefault","defaultValue","valueAtIndexOrDefault","index","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","arrayEquals","a0","a1","ilen","v0","v1","clone","source","map","target","klen","k","_merger","key","options","tval","sval","merge","_mergerIf","mergeIf","hasOwnProperty","sources","merger","extend","setFn","arguments","inherits","extensions","me","this","ChartElement","constructor","Surrogate","__super__","callCallback","indexOf","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","entries","$export","$entries","S","it","defineProperty","getScheme","schemeId","_helpers","bindClientFunc","_client","Client4","_action_types","SchemeTypes","GET_SCHEME_REQUEST","RECEIVED_SCHEME","GET_SCHEME_SUCCESS","GET_SCHEME_FAILURE","getSchemes","scope","page","undefined","perPage","_constants","General","PAGE_SIZE_DEFAULT","GET_SCHEMES_REQUEST","RECEIVED_SCHEMES","GET_SCHEMES_SUCCESS","GET_SCHEMES_FAILURE","createScheme","scheme","CREATE_SCHEME_REQUEST","CREATED_SCHEME","CREATE_SCHEME_SUCCESS","CREATE_SCHEME_FAILURE","deleteScheme","_this","_ref","gen","Promise","resolve","reject","step","arg","info","error","done","then","err","_asyncToGenerator","regeneratorRuntime","mark","_callee","dispatch","getState","data","wrap","_context","prev","next","type","DELETE_SCHEME_REQUEST","sent","t0","forceLogoutIfNecessary","_reduxBatchedActions","batchActions","DELETE_SCHEME_FAILURE","_errors","logError","abrupt","DELETED_SCHEME","DELETE_SCHEME_SUCCESS","stop","_x3","_x4","patchScheme","PATCH_SCHEME_REQUEST","PATCHED_SCHEME","PATCH_SCHEME_SUCCESS","PATCH_SCHEME_FAILURE","getSchemeTeams","GET_SCHEME_TEAMS_REQUEST","RECEIVED_SCHEME_TEAMS","GET_SCHEME_TEAMS_SUCCESS","GET_SCHEME_TEAMS_FAILURE","getSchemeChannels","GET_SCHEME_CHANNELS_REQUEST","RECEIVED_SCHEME_CHANNELS","GET_SCHEME_CHANNELS_SUCCESS","GET_SCHEME_CHANNELS_FAILURE","_slicedToArray","arr","Symbol","iterator","_arr","_n","_d","_e","_s","_i","push","sliceIterator","TypeError","makeGetSchemeChannels","_reselect","createSelector","_channels","getAllChannels","state","props","allChannels","_schemes","ScopeTypes","TEAM","msg","console","warn","schemeChannels","forEach","_item","channel","scheme_id","makeGetSchemeTeams","_teams","getTeams","allTeams","CHANNEL","schemeTeams","_item2","team","entities","schemes","createJob","job","JobTypes","CREATE_JOB_REQUEST","RECEIVED_JOB","CREATE_JOB_SUCCESS","CREATE_JOB_FAILURE","getJob","GET_JOB_REQUEST","GET_JOB_SUCCESS","GET_JOB_FAILURE","getJobs","JOBS_CHUNK_SIZE","GET_JOBS_REQUEST","RECEIVED_JOBS","GET_JOBS_SUCCESS","GET_JOBS_FAILURE","getJobsByType","RECEIVED_JOBS_BY_TYPE","cancelJob","CANCEL_JOB_REQUEST","CANCEL_JOB_SUCCESS","CANCEL_JOB_FAILURE","Chart","defaults","Element","elements","Interaction","layouts","platform","plugins","Ticks","register","initialize","window","Legend","legend","_element","Title","title","pluginService","PluginBase","canvasHelpers","canvas","layoutService","convert","string","Color","obj","valid","values","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","v","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","Math","pow","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","p","a","w1","w2","toJSON","result","prop","slice","spaces","maxes","getValues","space","charAt","capped","chans","max","min","round","sname","svalues","getRelativePosition","e","chart","native","x","y","parseVisibleItems","handler","meta","j","jlen","datasets","isDatasetVisible","getDatasetMeta","element","_view","skip","getIntersectItems","position","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","abs","deltaY","sqrt","indexMode","items","dataset","datasetIndex","_index","modes","single","label","_datasetIndex","x-axis","point","nearest","sort","b","ret","getArea","intersectsItem","inXRange","inYRange","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","_set","_plugins","_cacheId","plugin","unregister","idx","splice","clear","count","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","config","opts","global","_invalidate","getAllJobs","jobs","makeGetJobsByType","jobsByType","jobsByTypeList","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","mode","animationDuration","onClick","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","showLines","layout","padding","top","right","bottom","left","construct","effects","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","ctx","clearRect","width","height","roundedRect","radius","rx","ry","moveTo","lineTo","quadraticCurveTo","rect","drawPoint","style","edgeLength","xOffset","yOffset","size","isNaN","beginPath","arc","closePath","fill","SQRT2","fillRect","strokeRect","offset","leftX","topY","sideSize","stroke","drawImage","clipArea","area","save","clip","unclipArea","restore","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","toLineHeight","matches","match","toPadding","inputs","context","color","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","parseInt","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","view","document","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","configMerge","scaleMerge","scaleService","getScaleDefaults","scale","slen","where","collection","filterCallback","filter","filtered","findIndex","findNextWhere","arrayToSearch","startIndex","currentItem","findPreviousWhere","isNumber","n","parseFloat","isFinite","almostEquals","epsilon","almostWhole","rounded","reduce","NEGATIVE_INFINITY","sign","log10","exponent","log","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distanceBetweenPoints","aliasPixel","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","current","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","model","_model","deltaK","mK","pointsLen","slopeDeltaX","nextItem","loop","previousItem","niceNum","range","floor","fraction","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","mouseX","mouseY","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","getMaximumWidth","container","clientWidth","cw","getMaximumHeight","clientHeight","h","ch","el","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","getHoverColor","colorValue","CanvasPattern","conversions","Converter","func","pair","exec","from","to","convs","routeSpace","fspace","rgb2hsl","g","delta","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","f","q","hwb2rgb","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","colorNames","rgba","percentaString","hsla","num","hexDouble","str","toUpperCase","getRgb","getHsl","getAlpha","reverseNames","name","backgroundColor","borderColor","borderWidth","inLabelRange","vm","hoverRadius","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","halfAngle","halfRadius","tooltipPosition","centreAngle","rangeFromCentre","draw","_chart","sA","eA","strokeStyle","lineWidth","fillStyle","lineJoin","globalDefaults","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","xRange","hitRadius","pointStyle","hoverBorderWidth","chartArea","isVertical","bar","getBarBounds","x1","x2","y1","halfWidth","base","halfHeight","rectangle","borderSkipped","signX","signY","horizontal","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","getContext","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","get","passive","listener","createEvent","nativeEvent","addResizeListener","expando","resizer","createElement","cls","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","keyframes","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","injectCSS","getElementById","renderHeight","getAttribute","renderWidth","initial","display","displayWidth","aspectRatio","displayHeight","initCanvas","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","animation","duration","easing","onProgress","onComplete","Animation","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","cancelAnimation","startDigest","startTime","Date","now","framesToDrop","advance","endTime","set","positionIsHorizontal","types","instances","controllers","labels","initConfig","_bufferedRender","controller","update","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scales","scaleOptions","xAxes","xAxisOptions","yAxes","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","Error","resetElements","reset","tooltip","newOptions","removeBox","_options","tooltips","updateConfig","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","easingValue","transition","boxes","box","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","hidden","xAxisID","yAxisID","getVisibleDatasetCount","generateLegend","legendCallback","destroy","unbindEvents","toBase64Image","toDataURL","Tooltip","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","enabled","changed","handleEvent","_start","bufferedRequest","hoverOptions","active","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","updateElement","configurable","enumerable","res","object","listenArrayEvents","resyncElements","removeHoverStyle","elementOpts","custom","setHoverStyle","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","start","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","fullWidth","addBox","labelsFromTicks","ticks","getLineValue","offsetGridLines","lineValue","getPixelForTick","gridLines","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","formatters","minor","major","computeTextSize","tick","parseFontOptions","fontSize","family","parseLineHeight","Scale","getPadding","getTicks","_ticks","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","minSize","isHorizontal","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","getRightValue","rawValue","NaN","getLabelForIndex","getPixelForValue","getValueForPixel","pixel","finalVal","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","zeroLineIndex","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","callbacks","beforeTitle","tooltipItems","labelCount","xLabel","afterTitle","beforeBody","beforeLabel","tooltipItem","yLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","xScale","_xScale","yScale","_yScale","_scale","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","body","dataPoints","paddingAndSize","radiusAndPadding","getBackgroundPoint","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","drawFooter","drawBackground","hasTooltipContent","pivot","average","hasValue","eventPosition","nearestElement","d","tp","LinearScaleBase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","numericGeneratorOptions","stepSize","fixedStepSize","generationOptions","dataRange","spacing","niceRange","niceMin","niceMax","ceil","numSpaces","precision","generateTicks","end","ticksAsNumbers","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","IDMatches","hasStacks","stacked","stack","valuesPerStack","join","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","tickFontSize","rightValue","innerDimension","logarithmic","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","animate","angleLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","getPointLabelFontOptions","pointLabelOptions","measureLabelSize","determineLimits","getTextAlignForAngle","text","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","LinearRadialScale","xCenter","yCenter","drawingArea","pointPosition","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate","table","skey","tkey","mid","i0","i1","lo","lookup","span","momentify","parser","format","parse","input","time","startOf","valueOf","determineMajorUnit","unit","generate","capacity","timeOpts","minUnit","interval","factor","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","milliseconds","determineStepSize","TimeScale","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","determineUnitForFormatting","_majorUnit","distribution","curr","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","categoryPercentage","barPercentage","Rectangle","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","rectangleElementOptions","horizontalBar","dataPoint","bubble","Point","_resolveElementOptions","dsIndex","dataIndex","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","dataLabel","doughnut","pie","Arc","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","arcs","hoverWidth","lineEnabled","showLine","Line","lineElementOptions","lineTension","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","controlPoints","capControlPoint","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","polarArea","countVisibleElements","visibleCount","datasetStartAngle","resetRadius","radar","pointElementOptions","scatter","Bar","Bubble","Doughnut","PolarArea","Radar","Scatter","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","configure","beforeInit","afterEvent","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","configuration","ease","actual","origin","c0","c1","getLogs","admin","logs","getAudits","audits","getConfig","getEnvironmentConfig","environmentConfig","getComplianceReports","complianceReports","getClusterInfo","clusterInfo","getUserAccessTokens","userAccessTokens","filterByPosition","sortByWeight","_tmpIndex_","layoutItem","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","tickValue","logDelta","tickString","numDecimal","toFixed","remain","toExponential"],"mappings":"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","file":"31.6c2593817b6056ce7591.js","sourcesContent":["module.exports = { \"default\": require(\"core-js/library/fn/object/entries\"), __esModule: true };","'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n","require('../../modules/es7.object.entries');\nmodule.exports = require('../../modules/_core').Object.entries;\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getScheme = getScheme;\nexports.getSchemes = getSchemes;\nexports.createScheme = createScheme;\nexports.deleteScheme = deleteScheme;\nexports.patchScheme = patchScheme;\nexports.getSchemeTeams = getSchemeTeams;\nexports.getSchemeChannels = getSchemeChannels;\n\nvar _client = require('../client');\n\nvar _action_types = require('../action_types');\n\nvar _constants = require('../constants');\n\nvar _reduxBatchedActions = require('redux-batched-actions');\n\nvar _helpers = require('./helpers');\n\nvar _errors = require('./errors');\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\n\nfunction getScheme(schemeId) {\n    return (0, _helpers.bindClientFunc)(_client.Client4.getScheme, _action_types.SchemeTypes.GET_SCHEME_REQUEST, [_action_types.SchemeTypes.RECEIVED_SCHEME, _action_types.SchemeTypes.GET_SCHEME_SUCCESS], _action_types.SchemeTypes.GET_SCHEME_FAILURE, schemeId);\n}\n\nfunction getSchemes(scope) {\n    var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var perPage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.PAGE_SIZE_DEFAULT;\n\n    return (0, _helpers.bindClientFunc)(_client.Client4.getSchemes, _action_types.SchemeTypes.GET_SCHEMES_REQUEST, [_action_types.SchemeTypes.RECEIVED_SCHEMES, _action_types.SchemeTypes.GET_SCHEMES_SUCCESS], _action_types.SchemeTypes.GET_SCHEMES_FAILURE, scope, page, perPage);\n}\n\nfunction createScheme(scheme) {\n    return (0, _helpers.bindClientFunc)(_client.Client4.createScheme, _action_types.SchemeTypes.CREATE_SCHEME_REQUEST, [_action_types.SchemeTypes.CREATED_SCHEME, _action_types.SchemeTypes.CREATE_SCHEME_SUCCESS], _action_types.SchemeTypes.CREATE_SCHEME_FAILURE, scheme);\n}\n\nfunction deleteScheme(schemeId) {\n    var _this = this;\n\n    return function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(dispatch, getState) {\n            var data;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            dispatch({ type: _action_types.SchemeTypes.DELETE_SCHEME_REQUEST, data: null }, getState);\n\n                            data = null;\n                            _context.prev = 2;\n                            _context.next = 5;\n                            return _client.Client4.deleteScheme(schemeId);\n\n                        case 5:\n                            data = _context.sent;\n                            _context.next = 13;\n                            break;\n\n                        case 8:\n                            _context.prev = 8;\n                            _context.t0 = _context['catch'](2);\n\n                            (0, _helpers.forceLogoutIfNecessary)(_context.t0, dispatch, getState);\n                            dispatch((0, _reduxBatchedActions.batchActions)([{ type: _action_types.SchemeTypes.DELETE_SCHEME_FAILURE, error: _context.t0 }, (0, _errors.logError)(_context.t0)]), getState);\n                            return _context.abrupt('return', { error: _context.t0 });\n\n                        case 13:\n\n                            dispatch({ type: _action_types.SchemeTypes.DELETED_SCHEME, data: { schemeId: schemeId } }, getState);\n                            dispatch({ type: _action_types.SchemeTypes.DELETE_SCHEME_SUCCESS, data: null }, getState);\n\n                            return _context.abrupt('return', { data: data });\n\n                        case 16:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, _this, [[2, 8]]);\n        }));\n\n        return function (_x3, _x4) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n}\n\nfunction patchScheme(schemeId, scheme) {\n    return (0, _helpers.bindClientFunc)(_client.Client4.patchScheme, _action_types.SchemeTypes.PATCH_SCHEME_REQUEST, [_action_types.SchemeTypes.PATCHED_SCHEME, _action_types.SchemeTypes.PATCH_SCHEME_SUCCESS], _action_types.SchemeTypes.PATCH_SCHEME_FAILURE, schemeId, scheme);\n}\n\nfunction getSchemeTeams(schemeId) {\n    var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var perPage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.PAGE_SIZE_DEFAULT;\n\n    return (0, _helpers.bindClientFunc)(_client.Client4.getSchemeTeams, _action_types.SchemeTypes.GET_SCHEME_TEAMS_REQUEST, [_action_types.SchemeTypes.RECEIVED_SCHEME_TEAMS, _action_types.SchemeTypes.GET_SCHEME_TEAMS_SUCCESS], _action_types.SchemeTypes.GET_SCHEME_TEAMS_FAILURE, schemeId, page, perPage);\n}\n\nfunction getSchemeChannels(schemeId) {\n    var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var perPage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.PAGE_SIZE_DEFAULT;\n\n    return (0, _helpers.bindClientFunc)(_client.Client4.getSchemeChannels, _action_types.SchemeTypes.GET_SCHEME_CHANNELS_REQUEST, [_action_types.SchemeTypes.RECEIVED_SCHEME_CHANNELS, _action_types.SchemeTypes.GET_SCHEME_CHANNELS_SUCCESS], _action_types.SchemeTypes.GET_SCHEME_CHANNELS_FAILURE, schemeId, page, perPage);\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\n\nexports.getSchemes = getSchemes;\nexports.getScheme = getScheme;\nexports.makeGetSchemeChannels = makeGetSchemeChannels;\nexports.makeGetSchemeTeams = makeGetSchemeTeams;\n\nvar _reselect = require('reselect');\n\nvar _channels = require('./channels');\n\nvar _teams = require('./teams');\n\nvar _schemes = require('../../constants/schemes');\n\nfunction getSchemes(state) {\n    return state.entities.schemes.schemes;\n}\n\nfunction getScheme(state, id) {\n    var schemes = getSchemes(state);\n    return schemes[id];\n}\n\nfunction makeGetSchemeChannels() {\n    return (0, _reselect.createSelector)(_channels.getAllChannels, function (state, props) {\n        return getScheme(state, props.schemeId);\n    }, function (allChannels, scheme) {\n        if (!scheme) {\n            return [];\n        }\n\n        if (scheme.scope === _schemes.ScopeTypes.TEAM) {\n            var msg = 'Not implemented: scheme \\'' + scheme.id + '\\' is team-scope but \\'getSchemeChannels\\' only accepts channel-scoped schemes.';\n            console.warn(msg); // eslint-disable-line no-console\n            return [];\n        }\n\n        var schemeChannels = [];\n\n        // $FlowFixMe\n        Object.entries(allChannels).forEach(function (item) {\n            var _item = _slicedToArray(item, 2),\n                channel = _item[1];\n\n            if (channel.scheme_id === scheme.id) {\n                schemeChannels.push(channel);\n            }\n        });\n\n        return schemeChannels;\n    });\n}\n\nfunction makeGetSchemeTeams() {\n    return (0, _reselect.createSelector)(_teams.getTeams, function (state, props) {\n        return getScheme(state, props.schemeId);\n    }, function (allTeams, scheme) {\n        if (!scheme) {\n            return [];\n        }\n\n        if (scheme.scope === _schemes.ScopeTypes.CHANNEL) {\n            var msg = 'Error: scheme \\'' + scheme.id + '\\' is channel-scoped but \\'getSchemeChannels\\' only accepts team-scoped schemes.';\n            console.warn(msg); // eslint-disable-line no-console\n            return [];\n        }\n\n        var schemeTeams = [];\n\n        // $FlowFixMe\n        Object.entries(allTeams).forEach(function (item) {\n            var _item2 = _slicedToArray(item, 2),\n                team = _item2[1];\n\n            if (team.scheme_id === scheme.id) {\n                schemeTeams.push(team);\n            }\n        });\n\n        return schemeTeams;\n    });\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createJob = createJob;\nexports.getJob = getJob;\nexports.getJobs = getJobs;\nexports.getJobsByType = getJobsByType;\nexports.cancelJob = cancelJob;\n\nvar _action_types = require('../action_types');\n\nvar _client = require('../client');\n\nvar _constants = require('../constants');\n\nvar _helpers = require('./helpers');\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nfunction createJob(job) {\n    return (0, _helpers.bindClientFunc)(_client.Client4.createJob, _action_types.JobTypes.CREATE_JOB_REQUEST, [_action_types.JobTypes.RECEIVED_JOB, _action_types.JobTypes.CREATE_JOB_SUCCESS], _action_types.JobTypes.CREATE_JOB_FAILURE, job);\n}\n\nfunction getJob(id) {\n    return (0, _helpers.bindClientFunc)(_client.Client4.getJob, _action_types.JobTypes.GET_JOB_REQUEST, [_action_types.JobTypes.RECEIVED_JOB, _action_types.JobTypes.GET_JOB_SUCCESS], _action_types.JobTypes.GET_JOB_FAILURE, id);\n}\n\nfunction getJobs() {\n    var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var perPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _constants.General.JOBS_CHUNK_SIZE;\n\n    return (0, _helpers.bindClientFunc)(_client.Client4.getJobs, _action_types.JobTypes.GET_JOBS_REQUEST, [_action_types.JobTypes.RECEIVED_JOBS, _action_types.JobTypes.GET_JOBS_SUCCESS], _action_types.JobTypes.GET_JOBS_FAILURE, page, perPage);\n}\n\nfunction getJobsByType(type) {\n    var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var perPage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.JOBS_CHUNK_SIZE;\n\n    return (0, _helpers.bindClientFunc)(_client.Client4.getJobsByType, _action_types.JobTypes.GET_JOBS_REQUEST, [_action_types.JobTypes.RECEIVED_JOBS, _action_types.JobTypes.RECEIVED_JOBS_BY_TYPE, _action_types.JobTypes.GET_JOBS_SUCCESS], _action_types.JobTypes.GET_JOBS_FAILURE, type, page, perPage);\n}\n\nfunction cancelJob(job) {\n    return (0, _helpers.bindClientFunc)(_client.Client4.cancelJob, _action_types.JobTypes.CANCEL_JOB_REQUEST, _action_types.JobTypes.CANCEL_JOB_SUCCESS, _action_types.JobTypes.CANCEL_JOB_FAILURE, job);\n}","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Ticks = require('./core/core.ticks');\n\nrequire('./core/core.animation')(Chart);\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\nrequire('./core/core.scaleService')(Chart);\nrequire('./core/core.scale')(Chart);\nrequire('./core/core.tooltip')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-it plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getAllJobs = getAllJobs;\nexports.getJobsByType = getJobsByType;\nexports.makeGetJobsByType = makeGetJobsByType;\n\nvar _reselect = require('reselect');\n\nfunction getAllJobs(state) {\n    return state.entities.jobs.jobs;\n} // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\n\nfunction getJobsByType(state) {\n    return state.entities.jobs.jobsByTypeList;\n}\n\nfunction makeGetJobsByType(type) {\n    return (0, _reselect.createSelector)(getJobsByType, function (jobsByType) {\n        return jobsByType[type] || [];\n    });\n}","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar rx = Math.min(radius, width / 2);\n\t\t\tvar ry = Math.min(radius, height / 2);\n\n\t\t\tctx.moveTo(x + rx, y);\n\t\t\tctx.lineTo(x + width - rx, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n\t\t\tctx.lineTo(x + width, y + height - ry);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n\t\t\tctx.lineTo(x + rx, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n\t\t\tctx.lineTo(x, y + ry);\n\t\t\tctx.quadraticCurveTo(x, y, x + rx, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n\tctx.closePath();\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.currentTarget || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar color = helpers.color;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\tvar ratio = 0;\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t// Cliping for Points.\n\t\t// going out from inner charArea?\n\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\n\t\t\t// Point fade out\n\t\t\tif (model.x < chartArea.left) {\n\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t} else if (chartArea.right * errMargin < model.x) {\n\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t} else if (chartArea.bottom * errMargin < model.y) {\n\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t}\n\t\t\tratio = Math.round(ratio * 100) / 100;\n\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t}\n\n\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.Animation = Element.extend({\n\t\tchart: null, // the animation associated chart instance\n\t\tcurrentStep: 0, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @param {Chart} chart - The chart to animate.\n\t\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t\t * @param {Number} duration - The animation duration in ms.\n\t\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chart, animation, duration, lazy) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar i, ilen;\n\n\t\t\tanimation.chart = chart;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchart.animating = true;\n\t\t\t}\n\n\t\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\t\tif (animations[i].chart === chart) {\n\t\t\t\t\tanimations[i] = animation;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tanimations.push(animation);\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (animations.length === 1) {\n\t\t\t\tthis.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\tcancelAnimation: function(chart) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\t\treturn animation.chart === chart;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchart.animating = false;\n\t\t\t}\n\t\t},\n\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tme.advance(1 + framesToDrop);\n\n\t\t\tvar endTime = Date.now();\n\n\t\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tadvance: function(count) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar animation, chart;\n\t\t\tvar i = 0;\n\n\t\t\twhile (i < animations.length) {\n\t\t\t\tanimation = animations[i];\n\t\t\t\tchart = animation.chart;\n\n\t\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\t\tchart.animating = false;\n\t\t\t\t\tanimations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation instead\n\t * @prop Chart.Animation#animationObject\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'animationObject', {\n\t\tget: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation#chart instead\n\t * @prop Chart.Animation#chartInstance\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n\t\tget: function() {\n\t\t\treturn this.chart;\n\t\t},\n\t\tset: function(value) {\n\t\t\tthis.chart = value;\n\t\t}\n\t});\n\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = function(Chart) {\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar me = this;\n\t\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chart) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\t\tscale.position = scale.options.position;\n\t\t\t\tscale.weight = scale.options.weight;\n\t\t\t\tlayouts.addBox(chart, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nmodule.exports = function(Chart) {\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tfunction parseLineHeight(options) {\n\t\treturn helpers.options.toLineHeight(\n\t\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n\t}\n\n\tChart.Scale = Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns the scale tick objects ({label, major})\n\t\t * @since 2.7\n\t\t */\n\t\tgetTicks: function() {\n\t\t\treturn this._ticks;\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tmergeTicksOptions: function() {\n\t\t\tvar ticks = this.options.ticks;\n\t\t\tif (ticks.minor === false) {\n\t\t\t\tticks.minor = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (ticks.major === false) {\n\t\t\t\tticks.major = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var key in ticks) {\n\t\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\t\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t\t// around for long time and not marked as private, we can't change its structure\n\t\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t\t// use scale.getTicks() instead.\n\n\t\t\tme.beforeBuildTicks();\n\n\t\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\t\tticks = me.buildTicks() || [];\n\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\n\t\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t\t// this method and supposed to contain only string values).\n\t\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\t\tlabel = labels[i];\n\t\t\t\ttick = ticks[i];\n\t\t\t\tif (!tick) {\n\t\t\t\t\tticks.push(tick = {\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\tmajor: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttick.label = label;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme._ticks = ticks;\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += deltaHeight;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += deltaHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t\t}\n\n\t\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (rawValue) {\n\t\t\t\tif (this.isHorizontal()) {\n\t\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t\t}\n\t\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t/**\n\t\t * Used to get the value to display in the tooltip for the data at the given index\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param value\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t/**\n\t\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param pixel\n\t\t */\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the tick at the given index\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (offset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t\t},\n\n\t\t/**\n\t\t * Utility for getting the pixel location of a percentage of scale\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForDecimal: function(decimal) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\t/**\n\t\t * Returns the pixel for the minimum chart value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t/**\n\t\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t\t * @private\n\t\t */\n\t\t_autoSkip: function(ticks) {\n\t\t\tvar skipRatio;\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar optionTicks = me.options.ticks.minor;\n\t\t\tvar tickCount = ticks.length;\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\t\tvar result = [];\n\t\t\tvar i, tick, shouldSkip;\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\t\ttick = ticks[i];\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\t\tdelete tick.label;\n\t\t\t\t}\n\t\t\t\tresult.push(tick);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = defaults.global;\n\t\t\tvar optionTicks = options.ticks.minor;\n\t\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\t\tvar xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar label = tick.label;\n\t\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\t\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: tick.major,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\t\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left;\n\t\t\t\tvar x2 = me.right + axisWidth;\n\t\t\t\tvar y1 = me.top;\n\t\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index;\n\t\tvar datasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors,\n\t\t\tborderColor: tooltipOpts.borderColor,\n\t\t\tborderWidth: tooltipOpts.borderWidth\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize;\n\t\tvar bodyFontSize = model.bodyFontSize;\n\t\tvar footerFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chart.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize;\n\t\tvar caretPadding = vm.caretPadding;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = alignment.xAlign;\n\t\tvar yAlign = alignment.yAlign;\n\t\tvar paddingAndSize = caretSize + caretPadding;\n\t\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t\tif (x + size.width > chart.width) {\n\t\t\t\tx = chart.width - size.width;\n\t\t\t}\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t\tthis._lastActive = [];\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\t\tvar title = callbacks.title.apply(me, arguments);\n\t\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\tvar labelTextColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t\t});\n\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\t\tmodel.labelColors = labelColors;\n\t\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size) {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t\t},\n\t\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\t\tvar x1, x2, x3, y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x;\n\t\t\tvar ptY = tooltipPoint.y;\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\ty2 = ptY + (height / 2);\n\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\t\ty3 = y2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\t\ty3 = y2 + caretSize;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = vm.caretX;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t\t// invert drawing order\n\t\t\t\t\tvar tmp = x3;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t\tx1 = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar x = pt.x;\n\t\t\tvar y = pt.y;\n\t\t\tvar width = tooltipSize.width;\n\t\t\tvar height = tooltipSize.height;\n\t\t\tvar radius = vm.cornerRadius;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tif (yAlign === 'top') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tif (yAlign === 'bottom') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\n\t\t\tctx.fill();\n\n\t\t\tif (vm.borderWidth > 0) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\t// Truthy/falsey value for empty tooltip\n\t\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t\t// Only handle target event on tooltip change\n\t\t\tif (changed) {\n\t\t\t\tme._lastActive = me._active;\n\n\t\t\t\tif (options.enabled || options.custom) {\n\t\t\t\t\tme._eventPosition = {\n\t\t\t\t\t\tx: e.x,\n\t\t\t\t\t\ty: e.y\n\t\t\t\t\t};\n\n\t\t\t\t\tme.update(true);\n\t\t\t\t\tme.pivot();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len, nearestElement;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar spacing;\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tvar precision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, spacing.toString().length - 2);\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Chart.Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = options.backgroundColor;\n\t\t\tmodel.borderColor = options.borderColor;\n\t\t\tmodel.borderWidth = options.borderWidth;\n\t\t\tmodel.radius = options.radius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\n\t\t\treturn values;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, area);\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nvar ScopeTypes = exports.ScopeTypes = {\n    TEAM: 'team',\n    CHANNEL: 'channel'\n};","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n","'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getLogs = getLogs;\nexports.getAudits = getAudits;\nexports.getConfig = getConfig;\nexports.getEnvironmentConfig = getEnvironmentConfig;\nexports.getComplianceReports = getComplianceReports;\nexports.getClusterInfo = getClusterInfo;\nexports.getUserAccessTokens = getUserAccessTokens;\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nfunction getLogs(state) {\n    return state.entities.admin.logs;\n}\n\nfunction getAudits(state) {\n    return state.entities.admin.audits;\n}\n\nfunction getConfig(state) {\n    return state.entities.admin.config;\n}\n\nfunction getEnvironmentConfig(state) {\n    return state.entities.admin.environmentConfig;\n}\n\nfunction getComplianceReports(state) {\n    return state.entities.admin.complianceReports;\n}\n\nfunction getClusterInfo(state) {\n    return state.entities.admin.clusterInfo;\n}\n\nfunction getUserAccessTokens(state) {\n    return state.entities.admin.userAccessTokens;\n}","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n"],"sourceRoot":""}